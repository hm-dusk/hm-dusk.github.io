<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CentOS7下配置MySQL主备</title>
    <url>/2020/11/20/centos7-xia-pei-zhi-mysql-zhu-bei/</url>
    <content><![CDATA[<p>参考文章：<br><a href="https://mp.weixin.qq.com/s?__biz=MzI4OTY3MTUyNg==&amp;mid=2247497728&amp;idx=1&amp;sn=db180d0b7ef75c15c66b80d3d8691344&amp;chksm=ec292809db5ea11f9ecdd7d48f81d887f5961f4e5e41cf6dca7c4a46ff9120a4c886e3e327a4&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Hadoop实操：0619-MySQL5.7.22主从配置</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzI4OTY3MTUyNg==&amp;mid=2247484806&amp;idx=1&amp;sn=04714c756e0999ec68785a916f9bdbe3&amp;chksm=ec2ad58fdb5d5c9960d690402cab9d010bda3c7c6e8ec2d9687f73771508dd67bd4a9cb8f6f7&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Hadoop实操：如何实现CDH元数据库MySQL的主备</a></p>
<p>之前介绍过如何在CentOS7下离线安装安装MySQL/Mariadb（参考<a href="http://blog.hming.org/2018/12/08/centos7-xia-chi-xian-an-zhuang-mysql/">CentOS7下离线安装MySQL/Mariadb</a>）<br>在生产环境中，尤其是MySQL作为Hadoop集群元数据库时，数据库的主从配置显得尤为重要。</p>
<h3 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h3><ul>
<li>两个节点均已安装好MySQL/Mariadb</li>
<li>两个节点安装的MySQL/Mariadb版本必须一致</li>
<li>主节点必须开启bin-log日志</li>
</ul>
<h3 id="本文示例环境"><a href="#本文示例环境" class="headerlink" title="本文示例环境"></a>本文示例环境</h3><table>
<thead>
<tr>
<th>主机名</th>
<th>节点类型</th>
<th>节点ip</th>
<th>MySQL版本</th>
<th>用户名/密码</th>
</tr>
</thead>
<tbody><tr>
<td>cdh1</td>
<td>主节点</td>
<td>192.168.136.112</td>
<td>5.5.60-MariaDB</td>
<td>root/1234</td>
</tr>
<tr>
<td>cdh2</td>
<td>从节点</td>
<td>192.168.136.113</td>
<td>5.5.60-MariaDB</td>
<td>root/1234</td>
</tr>
</tbody></table>
<h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><h4 id="历史数据同步（可选）"><a href="#历史数据同步（可选）" class="headerlink" title="历史数据同步（可选）"></a>历史数据同步（可选）</h4><p>如果配置主备之前主数据库已经有数据了，则需要手动同步数据到备数据库。</p>
<h5 id="1-锁定主数据库"><a href="#1-锁定主数据库" class="headerlink" title="1.锁定主数据库"></a>1.锁定主数据库</h5><p>锁定后，只允许读取不允许写入，这样做的目的是防止备份过程中或备份完成后有新数据插入，导致备份数据与主数据不一致。</p>
<pre class="line-numbers language-bash"><code class="language-bash">MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> show databases<span class="token punctuation">;</span>
+--------------------+
<span class="token operator">|</span> Database           <span class="token operator">|</span>
+--------------------+
<span class="token operator">|</span> information_schema <span class="token operator">|</span>
<span class="token operator">|</span> hue                <span class="token operator">|</span>
<span class="token operator">|</span> metastore          <span class="token operator">|</span>
<span class="token operator">|</span> mysql              <span class="token operator">|</span>
<span class="token operator">|</span> oozie              <span class="token operator">|</span>
<span class="token operator">|</span> performance_schema <span class="token operator">|</span>
<span class="token operator">|</span> scm                <span class="token operator">|</span>
<span class="token operator">|</span> sentry             <span class="token operator">|</span>
+--------------------+
8 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.02 sec<span class="token punctuation">)</span>

MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> flush tables with <span class="token function">read</span> lock<span class="token punctuation">;</span>
Query OK, 0 rows affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>

MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> create database <span class="token function">test</span><span class="token punctuation">;</span>
ERROR 1223 <span class="token punctuation">(</span>HY000<span class="token punctuation">)</span>: Can't execute the query because you have a conflicting <span class="token function">read</span> lock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>重启MySQL后锁定失效</p>
</blockquote>
<h5 id="2-备份数据"><a href="#2-备份数据" class="headerlink" title="2.备份数据"></a>2.备份数据</h5><p>在主节点使用<code>mysqldump</code>将需要备份的库导出到sql文件</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysqldump -uroot -p1234 hue > hue.sql</span>
<span class="token punctuation">[</span>root@cdh1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysqldump -uroot -p1234 metastore > metastore.sql</span>
<span class="token punctuation">[</span>root@cdh1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysqldump -uroot -p1234 oozie > oozie.sql</span>
<span class="token punctuation">[</span>root@cdh1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysqldump -uroot -p1234 scm > scm.sql</span>
<span class="token punctuation">[</span>root@cdh1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysqldump -uroot -p1234 sentry > sentry.sql</span>
<span class="token punctuation">[</span>root@cdh1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls | grep sql</span>
hue.sql
metastore.sql
oozie.sql
scm.sql
sentry.sql
<span class="token punctuation">[</span>root@cdh1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在从节点将备份的sql导入（<code>需要先创建库</code>）</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p1234 hue &lt; hue.sql </span>
<span class="token punctuation">[</span>root@cdh2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p1234 metastore &lt; metastore.sql </span>
<span class="token punctuation">[</span>root@cdh2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p1234 oozie &lt; oozie.sql </span>
<span class="token punctuation">[</span>root@cdh2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p1234 scm &lt; scm.sql </span>
<span class="token punctuation">[</span>root@cdh2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p1234 sentry &lt; sentry.sql </span>
<span class="token punctuation">[</span>root@cdh2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Master-Slave配置"><a href="#Master-Slave配置" class="headerlink" title="Master/Slave配置"></a>Master/Slave配置</h4><h5 id="1-配置主节点"><a href="#1-配置主节点" class="headerlink" title="1.配置主节点"></a>1.配置主节点</h5><p>修改主节点配置文件<code>vim /etc/my.cnf</code>，增加/修改如下配置并重启服务：</p>
<pre class="line-numbers language-bash"><code class="language-bash">log-bin<span class="token operator">=</span>/var/lib/mysql/mysql_binary_log
server-id<span class="token operator">=</span>112
binlog_format<span class="token operator">=</span>MIXED<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>配置说明：<br><strong>log-bin</strong>：开启二进制日志，日志文件前缀<br><strong>server-id</strong>：数据库服务的唯一标识确保标识不重复，一般设置为服务器ip的末尾数<br><strong>binlog-format</strong>：设置Mysql binlog记录日志的格式（格式含：Statement、MIXED、ROW），MySQL默认使用的是Statement，推荐使用MIXED。</p>
</blockquote>
<h5 id="2-配置从节点"><a href="#2-配置从节点" class="headerlink" title="2.配置从节点"></a>2.配置从节点</h5><p>修改从节点配置文件<code>vim /etc/my.cnf</code>，增加/修改如下配置并重启服务：</p>
<pre class="line-numbers language-bash"><code class="language-bash">log-bin<span class="token operator">=</span>/var/lib/mysql/mysql_binary_log
server-id<span class="token operator">=</span>113<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="同步用户设置"><a href="#同步用户设置" class="headerlink" title="同步用户设置"></a>同步用户设置</h4><ol>
<li>在cdh1主MySQL上创建一个mysnc用户（用户名密码均为：mysync），并配置权限</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash">MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> GRANT REPLICATION SLAVE ON *.* TO <span class="token string">'mysync'</span>@<span class="token string">'192.168.%'</span> IDENTIFIED BY <span class="token string">'mysync'</span><span class="token punctuation">;</span>
Query OK, 0 rows affected <span class="token punctuation">(</span>0.01 sec<span class="token punctuation">)</span>

MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> FLUSH PRIVILEGES<span class="token punctuation">;</span>
Query OK, 0 rows affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>查看cdh1 MySQL二进制日志File与Position</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash">MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> show master status<span class="token punctuation">;</span>
+-------------------------+----------+--------------+------------------+
<span class="token operator">|</span> File                    <span class="token operator">|</span> Position <span class="token operator">|</span> Binlog_Do_DB <span class="token operator">|</span> Binlog_Ignore_DB <span class="token operator">|</span>
+-------------------------+----------+--------------+------------------+
<span class="token operator">|</span> mysql_binary_log.000012 <span class="token operator">|</span>     7114 <span class="token operator">|</span>              <span class="token operator">|</span>                  <span class="token operator">|</span>
+-------------------------+----------+--------------+------------------+
1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>在cdh2从MySQL上执行如下SQL</li>
</ol>
<pre class="line-numbers language-sql"><code class="language-sql">change master <span class="token keyword">to</span>
master_host<span class="token operator">=</span><span class="token string">'192.168.136.112'</span><span class="token punctuation">,</span>
master_user<span class="token operator">=</span><span class="token string">'mysync'</span><span class="token punctuation">,</span>
master_password<span class="token operator">=</span><span class="token string">'mysync'</span><span class="token punctuation">,</span>
master_log_file<span class="token operator">=</span><span class="token string">'mysql_binary_log.000012'</span><span class="token punctuation">,</span>
master_log_pos<span class="token operator">=</span><span class="token number">7114</span><span class="token punctuation">;</span>

<span class="token keyword">start</span> slave<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash"><code class="language-bash">MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> change master to
    -<span class="token operator">></span> master_host<span class="token operator">=</span><span class="token string">'192.168.136.112'</span>,
    -<span class="token operator">></span> master_user<span class="token operator">=</span><span class="token string">'mysync'</span>,
    -<span class="token operator">></span> master_password<span class="token operator">=</span><span class="token string">'mysync'</span>,
    -<span class="token operator">></span> master_log_file<span class="token operator">=</span><span class="token string">'mysql_binary_log.000012'</span>,
    -<span class="token operator">></span> master_log_pos<span class="token operator">=</span>7114<span class="token punctuation">;</span>
Query OK, 0 rows affected <span class="token punctuation">(</span>0.02 sec<span class="token punctuation">)</span>

MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> start slave<span class="token punctuation">;</span>
Query OK, 0 rows affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="4">
<li>在cdh2从MySQL上查看Slave状态</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash">MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> show slave status \G
*************************** 1. row ***************************
               Slave_IO_State: Waiting <span class="token keyword">for</span> master to send event
                  Master_Host: 192.168.136.112
                  Master_User: mysync
                  Master_Port: 3306
                Connect_Retry: 60
              Master_Log_File: mysql_binary_log.000012
          Read_Master_Log_Pos: 38426
               Relay_Log_File: mariadb-relay-bin.000002
                Relay_Log_Pos: 536
        Relay_Master_Log_File: mysql_binary_log.000012
             Slave_IO_Running: Yes
            Slave_SQL_Running: No
              Replicate_Do_DB: 
          Replicate_Ignore_DB: 
           Replicate_Do_Table: 
       Replicate_Ignore_Table: 
      Replicate_Wild_Do_Table: 
  Replicate_Wild_Ignore_Table: 
                   Last_Errno: 1032
                   Last_Error: Could not execute Update_rows event on table scm.CM_VERSION<span class="token punctuation">;</span> Can<span class="token string">'t find record in '</span>CM_VERSION<span class="token string">', Error_code: 1032; handler error HA_ERR_END_OF_FILE; the event'</span>s master log mysql_binary_log.000012, end_log_pos 7456
                 Skip_Counter: 0
          Exec_Master_Log_Pos: 7114
              Relay_Log_Space: 32144
              Until_Condition: None
               Until_Log_File: 
                Until_Log_Pos: 0
           Master_SSL_Allowed: No
           Master_SSL_CA_File: 
           Master_SSL_CA_Path: 
              Master_SSL_Cert: 
            Master_SSL_Cipher: 
               Master_SSL_Key: 
        Seconds_Behind_Master: NULL
Master_SSL_Verify_Server_Cert: No
                Last_IO_Errno: 0
                Last_IO_Error: 
               Last_SQL_Errno: 1032
               Last_SQL_Error: Could not execute Update_rows event on table scm.CM_VERSION<span class="token punctuation">;</span> Can<span class="token string">'t find record in '</span>CM_VERSION<span class="token string">', Error_code: 1032; handler error HA_ERR_END_OF_FILE; the event'</span>s master log mysql_binary_log.000012, end_log_pos 7456
  Replicate_Ignore_Server_Ids: 
             Master_Server_Id: 112
1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈Java内存结构</title>
    <url>/2020/04/21/qian-tan-java-nei-cun-jie-gou/</url>
    <content><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>前不久部署的Hadoop环境中HDFS组件NameNode宕机，在经过排查后发现是因为HDFS中含有大量的小文件（多达250万个block），NameNode压力非常大，然而分配给NameNode的堆内存却只有1G<br><img src="http://47.106.179.244/%E6%B5%85%E8%B0%88Java%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/HDFS%E5%A0%86%E5%86%85%E5%AD%98%E9%85%8D%E7%BD%AE.png" alt=""><br>官方建议最小配置1G，每增加100万个block增加1G<br>参考官网：<a href="https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_hardware_requirements.html#concept_fzz_dq4_gbb" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_hardware_requirements.html#concept_fzz_dq4_gbb</a><br><img src="http://47.106.179.244/%E6%B5%85%E8%B0%88Java%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/Cloudera%E5%AE%98%E7%BD%91%E5%8F%82%E8%80%83HDFS%E9%85%8D%E7%BD%AE.png" alt=""><br>在将堆内存调至4G后NameNode正常运行。</p>
<p>虽然修复了，但是心里面还是很疑惑，堆内存到底用来做什么？为什么需要这么多的堆内存？<br>由于JVM的概念已经很模糊了，固下来又复习了一遍java的内存结构。</p>
<h3 id="运行时数据区"><a href="#运行时数据区" class="headerlink" title="运行时数据区"></a>运行时数据区</h3><p>Java内存结构主要讲的就是JVM（java虚拟机）运行时数据区的结构划分，分为线程共享的堆（Heap）和方法区（Method Area），以及线程私有的虚拟机栈（VM Stack）、本地方法栈（Native Method Stack）和程序计数器（Program Counter Register）<br><img src="http://47.106.179.244/%E6%B5%85%E8%B0%88Java%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA.png" alt=""></p>
<h4 id="程序计数器"><a href="#程序计数器" class="headerlink" title="程序计数器"></a>程序计数器</h4><p>线程私有，和线程绑定，是当前线程所执行的字节码的行号指示器，也就是记录当前线程执行到哪一步了。</p>
<blockquote>
<p>因为Java虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，在任何一个确定的时刻，一个处理器（对于多核处理器来说是一个内核）都会执行一条线程中的指令。所以，为了线程切换后能够恢复到正确的执行位置，每个线程都需要一个独立的程序计数器，各条线程之间计数器互不影响，独立存储。</p>
</blockquote>
<h4 id="虚拟机栈"><a href="#虚拟机栈" class="headerlink" title="虚拟机栈"></a>虚拟机栈</h4><p>也叫Java虚拟机栈，线程私有，生命周期和线程相同。</p>
<blockquote>
<p>虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行的同时都会创建一个栈帧（Stack Frame，是方法运行时的基础数据结构）用于存储<code>局部变量表</code>、<code>操作数栈</code>、<code>动态链接</code>、<code>方法出口（返回地址）</code>等信息。每一个方法从调用直到执行完成的过程，就对应一个栈帧在虚拟机栈中入栈到出栈的过程。<br><img src="http://47.106.179.244/%E6%B5%85%E8%B0%88Java%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/%E6%A0%88%E5%B8%A7%E7%BB%93%E6%9E%84.png" alt=""><br>其中局部变量表存放各种基本类型（byte、boolean、float、double、int、long、short、char）、对象引用和returnAddress类型。</p>
</blockquote>
<h4 id="本地方法栈"><a href="#本地方法栈" class="headerlink" title="本地方法栈"></a>本地方法栈</h4><p>线程私有，与虚拟机栈类似，区别在于本地方法栈为虚拟机用到的Native方法服务。</p>
<h4 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h4><p>线程共享，堆是Java虚拟机管理的内存中最大的一块，堆存放几乎所有的java对象实例，是非常重要的一块空间，GC主要发生在这个区域，</p>
<h4 id="方法区"><a href="#方法区" class="headerlink" title="方法区"></a>方法区</h4><p>线程共享，用于存储已被虚拟机加载的<code>类信息</code>、<code>常量</code>、<code>静态变量</code>、<code>即时编译器编译后的代码</code>等数据。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JVM</tag>
        <tag>内存结构</tag>
      </tags>
  </entry>
  <entry>
    <title>理财过程中遇到的名词整理</title>
    <url>/2020/02/22/li-cai-guo-cheng-zhong-yu-dao-de-ming-ci-zheng-li/</url>
    <content><![CDATA[<h3 id="GDP（Gross-Domestic-Product）"><a href="#GDP（Gross-Domestic-Product）" class="headerlink" title="GDP（Gross Domestic Product）"></a>GDP（Gross Domestic Product）</h3><p><strong>百度百科</strong><br>国内生产总值（GDP）是指按国家市场价格计算的一个国家（或地区）所有常住单位在一定时期内生产活动的最终成果，常被公认为是衡量国家经济状况的最佳指标。国内生产总值GDP是核算体系中一个重要的综合性统计指标，也是我国新国民经济核算体系中的核心指标，它反映了一国（或地区）的经济实力和市场规模。</p>
<p><strong>理解</strong><br>国民生产总值，指一个国家过去一年内新生产的全部财富总和。</p>
<h3 id="CPI（consumer-price-index）"><a href="#CPI（consumer-price-index）" class="headerlink" title="CPI（consumer price index）"></a>CPI（consumer price index）</h3><p><strong>百度百科</strong><br>消费者物价指数（consumer price index），又名居民消费价格指数，简称CPI。<br>是一个反映居民家庭一般所购买的消费品和服务项目价格水平变动情况的宏观经济指标。它是在特定时段内度量一组代表性消费商品及服务项目的价格水平随时间而变动的相对数，是用来反映居民家庭购买消费商品及服务的价格水平的变动情况，是一个月内商品和服务零售价变动系数。</p>
<p><strong>理解</strong><br>消费者价格指数，俗称物价指数，反映全社会物价变动水平的宏观经济指标。</p>
<h3 id="M2"><a href="#M2" class="headerlink" title="M2"></a>M2</h3><p><strong>百度百科</strong><br>广义货币供应量（M2）是指流通于银行体系之外的现金加上企业存款、居民储蓄存款以及其他存款，它包括了一切可能成为现实购买力的货币形式，通常反映的是社会总需求变化和未来通胀的压力状态。近年来，很多国家都把M2作为货币供应量的调控目标。</p>
<blockquote>
<p>货币（M0）=流通中的现金，即流通于银行体系之外的现金。<br>狭义货币（M1）=（M0）+单位活期存款。<br>广义货币（M2）=M1+准货币（单位定期存款+居民储蓄存款+其他存款+证券公司客户保证金+住房公积金中心存款+非存款类金融机构在存款类金融机构的存款）。<br>另外还有M3=M2+其他短期流动资产（如国库券、银行承兑汇票、商业票据等）。</p>
</blockquote>
<p><strong>理解</strong><br>广义货币供应量，是衡量社会真实货币存量和通货膨胀水平的最关键指标。</p>
<blockquote>
<p>M指Money</p>
</blockquote>
<h3 id="复利"><a href="#复利" class="headerlink" title="复利"></a>复利</h3><p><strong>百度百科</strong><br>复利（Compound Interest）,是指在计算利息时，某一计息周期的利息是由本金加上先前周期所积累利息总额来计算的计息方式，也即通常所说的”利说利”，”利滚利”。</p>
<p><strong>理解</strong><br>世界第八大奇迹，也是为什么理财能跑赢通货膨胀的重要因素。</p>
<h3 id="ETF基金"><a href="#ETF基金" class="headerlink" title="ETF基金"></a>ETF基金</h3><p><strong>百度百科</strong><br>交易型开放式指数基金，通常又被称为交易所交易基金（Exchange Traded Fund，简称ETF），是一种在交易所上市交易的、基金份额可变的一种开放式基金。<br>交易型开放式指数基金属于开放式基金的一种特殊类型，它结合了封闭式基金和开放式基金的运作特点，投资者既可以向基金管理公司申购或赎回基金份额，同时，又可以像封闭式基金一样在二级市场上按市场价格买卖ETF份额，不过，申购赎回必须以一篮子股票换取基金份额或者以基金份额换回一篮子股票。由于同时存在二级市场交易和申购赎回机制，投资者可以在ETF市场价格与基金单位净值之间存在差价时进行套利交易。套利机制的存在，使得ETF避免了封闭式基金普遍存在的折价问题。</p>
<p><strong>理解</strong><br>ETF基金是所有公募基金中成本最低，交易最方便的一种。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>理财</category>
      </categories>
      <tags>
        <tag>专业名词</tag>
        <tag>解释</tag>
      </tags>
  </entry>
  <entry>
    <title>基金学习笔记</title>
    <url>/2020/02/22/ji-jin-xue-xi-bi-ji/</url>
    <content><![CDATA[<h3 id="基金的概念"><a href="#基金的概念" class="headerlink" title="基金的概念"></a>基金的概念</h3><p>百度百科：<br>基金，英文是fund，广义是指为了某种目的而设立的具有一定数量的资金。主要包括信托投资基金、公积金、保险基金、退休基金，各种基金会的基金。</p>
<p>用常人的话讲，基金是一种投资工具（产品），是投资机构筹集投资者手中的钱去投资股票、债券、外汇、货币等<a href="https://baike.baidu.com/item/%E6%A0%87%E7%9A%84/5766049?fr=aladdin" target="_blank" rel="noopener">标的</a>。</p>
<p>日常生活中所说的狭义上的基金一般特指：<br><code>公募证券投资基金</code>，简称<code>公募基金</code>。</p>
<blockquote>
<p>股票和基金是人类历史上集合大量资金用以做特定用途的最重要的两项伟大发明。</p>
</blockquote>
<h3 id="基金分类"><a href="#基金分类" class="headerlink" title="基金分类"></a>基金分类</h3><h4 id="按照是否在交易所上市划分"><a href="#按照是否在交易所上市划分" class="headerlink" title="按照是否在交易所上市划分"></a>按照是否在交易所上市划分</h4><p><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9F%BA%E9%87%91%E5%88%86%E7%B1%BB%EF%BC%88%E6%8C%89%E4%BA%A4%E6%98%93%E5%B8%82%E5%9C%BA%EF%BC%89.png" alt=""></p>
<h5 id="场内市场和场外市场"><a href="#场内市场和场外市场" class="headerlink" title="场内市场和场外市场"></a>场内市场和场外市场</h5><p><code>场外市场 = 一级市场</code></p>
<p><code>场内市场 = 二级市场</code></p>
<h5 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h5><p>按能否在一级市场或场外市场申购来划分为场内基金和场外基金</p>
<table>
<thead>
<tr>
<th>基金分类</th>
<th align="center">特点</th>
<th>是否需要开股票账户</th>
<th>举例</th>
</tr>
</thead>
<tbody><tr>
<td>场外基金</td>
<td align="center">● 从一级市场或场外市场买入<br>● 基金规模会随着买入增加而增加<br>● 费率高，一般万15</td>
<td>不需要</td>
<td>天天基金、<br>蚂蚁聚宝、<br>基金官网</td>
</tr>
<tr>
<td>场内基金</td>
<td align="center">● 从二级市场或场内市场买入<br>● 基金规模固定<br>● 无法进行申购和赎回，只能在二级市场通过买卖交易基金份额<br>● 需要下载专门的证券交易软件，而且必须在股市开盘的时间内才能购买<br>● 费率低，一般万1.5</td>
<td>需要</td>
<td>华宝智投</td>
</tr>
</tbody></table>
<p>绝大部分场内交易的基金场外都有对应的产品</p>
<blockquote>
<p>股市开盘（场内基金交易）时间：</p>
<p>周一至周五</p>
<p>9:30-11:30</p>
<p>13:00-15:00</p>
</blockquote>
<h4 id="按照投资标的划分"><a href="#按照投资标的划分" class="headerlink" title="按照投资标的划分"></a>按照投资标的划分</h4><p><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9F%BA%E9%87%91%E5%88%86%E7%B1%BB%EF%BC%88%E6%8C%89%E6%8A%95%E8%B5%84%E6%A0%87%E7%9A%84%EF%BC%89.png" alt=""></p>
<h5 id="资本市场和货币市场"><a href="#资本市场和货币市场" class="headerlink" title="资本市场和货币市场"></a>资本市场和货币市场</h5><table>
<thead>
<tr>
<th>分类名</th>
<th>特点</th>
</tr>
</thead>
<tbody><tr>
<td>资本市场</td>
<td>股票市场和一年期以上的长期债券市场</td>
</tr>
<tr>
<td>货币市场</td>
<td>交易一年期以下短期债券和各类票据的市场</td>
</tr>
</tbody></table>
<h5 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h5><table>
<thead>
<tr>
<th>分类名</th>
<th>特点</th>
<th>投资市场</th>
</tr>
</thead>
<tbody><tr>
<td>股票型基金（股基）</td>
<td>≥80%的资金投资股票</td>
<td>资本市场</td>
</tr>
<tr>
<td>混合型基金（混基）</td>
<td>一部分买股票，一部分买债券，<br>但是比例都不超过80%</td>
<td>资本市场</td>
</tr>
<tr>
<td>债券型基金（债基）</td>
<td>≥80%的资金投资债券</td>
<td>资本市场</td>
</tr>
<tr>
<td>货币市场基金（货基）</td>
<td>投资货币市场</td>
<td>货币市场</td>
</tr>
</tbody></table>
<h5 id="股票型基金分类"><a href="#股票型基金分类" class="headerlink" title="股票型基金分类"></a>股票型基金分类</h5><p>股票基金分成主动型基金和被动型基金。</p>
<table>
<thead>
<tr>
<th>分类名</th>
<th>特点</th>
<th>举例</th>
</tr>
</thead>
<tbody><tr>
<td>主动型基金</td>
<td>基金经理根据自己的经验、模型进行买卖股票，企图获得超越市场的收益</td>
<td>国泰估值优势混合</td>
</tr>
<tr>
<td>被动型基金<br>（指数基金）</td>
<td>完全复制某种指数，选取该指数的成分股基金投资</td>
<td>沪深300指数<br>标普500指数<br>纳斯达克100指数</td>
</tr>
</tbody></table>
<h5 id="混合型基金分类"><a href="#混合型基金分类" class="headerlink" title="混合型基金分类"></a>混合型基金分类</h5><table>
<thead>
<tr>
<th>分类名</th>
<th>特点</th>
</tr>
</thead>
<tbody><tr>
<td>偏股型基金</td>
<td>投资股票份额≥50%</td>
</tr>
<tr>
<td>偏债型基金</td>
<td>投资债券份额≥50%</td>
</tr>
<tr>
<td>平衡型基金</td>
<td>投资股票、债券份额都≤50%</td>
</tr>
<tr>
<td>灵活型基金</td>
<td>投资份额未做上限规定</td>
</tr>
</tbody></table>
<h5 id="投资风险"><a href="#投资风险" class="headerlink" title="投资风险"></a>投资风险</h5><p>股票型基金 &gt; 混合型基金 &gt; 债券型基金 &gt; 货币基金<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8A%95%E8%B5%84%E9%A3%8E%E9%99%A9%E5%92%8C%E6%94%B6%E7%9B%8A%E6%AF%94%E8%BE%83%E5%9B%BE.png" alt=""></p>
<h4 id="其他分类方式"><a href="#其他分类方式" class="headerlink" title="其他分类方式"></a>其他分类方式</h4><p><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9F%BA%E9%87%91%E5%88%86%E7%B1%BB%EF%BC%88%E5%85%B6%E4%BB%96%E5%88%86%E7%B1%BB%EF%BC%89.png" alt=""><br>还有种分类是分成封闭基金和开放基金，不过现在封闭基金基本成为过去时，我们购买的一般都是开放基金。</p>
<h4 id="完整基金名称的组成部分"><a href="#完整基金名称的组成部分" class="headerlink" title="完整基金名称的组成部分"></a>完整基金名称的组成部分</h4><p>[基金公司名称] + [基金特点] + [基金投资范围]</p>
<h3 id="货币基金"><a href="#货币基金" class="headerlink" title="货币基金"></a>货币基金</h3><h4 id="余额宝"><a href="#余额宝" class="headerlink" title="余额宝"></a>余额宝</h4><p>余额宝为典型的货币基金，带动了货币基金的发展</p>
<h5 id="余额宝成功的秘诀"><a href="#余额宝成功的秘诀" class="headerlink" title="余额宝成功的秘诀"></a>余额宝成功的秘诀</h5><ol>
<li><p><strong>余额宝随取随用，解决货币基金流动性的最后一公里难题。</strong><br> 货基一般需要T+2才能到账，T是交易（trade）的意思，意思是交易指令打上去之后需要2天钱才能到账。一般申购也是同样的道理。</p>
</li>
<li><p><strong>余额宝7x24小时全天候为投资者提供赎回服务（但计算收益的方式还是没变）。</strong><br> 基金存在一个问题，如果在工作日下午3点钱申请赎回，则定为当天申请，需要第二天或者第三天才能赎回到账；如果是工作日下午3点后的申请，算作是第二天上班后的申请，需要等到第三天或者第四天才能到账。<br> 同样的，如果在工作日下午3点钱申购，则定为当天申请，第二天才开始计算收益，第三天才能看到收益；如果是工作日下午3点后的申请，算作是第二天上班后的申请，需要等到第三天才计算收益，第四天才能看到收益。</p>
</li>
</ol>
<blockquote>
<p>因为周末交易所休市，所以周四下午3点是一个关键时间点，周四下午3点前申购，周五就开始计算收益，收益周六就能看到；如果是周四下午3点后申购，则算作周五的申请，下周一才开始计算收益，相当于白白浪费了3天的利息。</p>
</blockquote>
<ol start="3">
<li><p><strong>余额宝将基金的按月结算方式替换成了按日结算。</strong><br> 日结算不仅可以让投资者能每天看到收益，得到正反馈，而且通过复利的特点还能额外获得收益。</p>
</li>
<li><p><strong>余额宝直接打通了投资和消费的任督二脉</strong><br> 直接用余额宝就可以很方便的进行支付。</p>
</li>
</ol>
<h5 id="现在已经不推荐购买余额宝了"><a href="#现在已经不推荐购买余额宝了" class="headerlink" title="现在已经不推荐购买余额宝了"></a>现在已经不推荐购买余额宝了</h5><ul>
<li>随着基金规模的增大，余额宝的收益已经很低了。</li>
<li>赎回到账速度也不是最快的，最晚需要2小时左右。</li>
<li>现在余额宝转出超过一定额度需要手续费。</li>
</ul>
<h4 id="如何选购货币基金"><a href="#如何选购货币基金" class="headerlink" title="如何选购货币基金"></a>如何选购货币基金</h4><h5 id="货币基金扮演的角色"><a href="#货币基金扮演的角色" class="headerlink" title="货币基金扮演的角色"></a>货币基金扮演的角色</h5><ul>
<li>货币基金扮演的应该是守门员的角色，它的主要责任是<code>高安全性</code>和<code>高流动性</code>。</li>
<li>货币基金的利率一般在一年期的银行定期存款基准利率的一倍到两倍之间。</li>
</ul>
<blockquote>
<p>普通家庭需要准备至少<code>3-6个月</code>的家庭支出金额来作为家庭紧急备用金。</p>
</blockquote>
<h5 id="货币基金的指标"><a href="#货币基金的指标" class="headerlink" title="货币基金的指标"></a>货币基金的指标</h5><ol>
<li>七日年化收益（过去7天的平均年化收益，并不能代表货基的真实收益率）</li>
<li>每万份收益（只能反映一天的数据）</li>
</ol>
<p>应该看过去半年、一年甚至更长时间的累计回报（可以在天天基金里面看）。</p>
<h5 id="货币基金的分类"><a href="#货币基金的分类" class="headerlink" title="货币基金的分类"></a>货币基金的分类</h5><p>货币基金一般后面跟A、B的后缀，不同的字母区分<code>投资门槛</code>。</p>
<table>
<thead>
<tr>
<th align="center">货币基金类型</th>
<th align="center">特点</th>
<th align="center">适合投资者</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A类货基</td>
<td align="center">1000元起卖，有些低至100元甚至1元起卖</td>
<td align="center">普通散户</td>
</tr>
<tr>
<td align="center">B类货基</td>
<td align="center">100万起卖，有些甚至1000万起卖</td>
<td align="center">机构、土豪</td>
</tr>
</tbody></table>
<p>普通投资者一般购买A类，A类的收益率也比B类地上0.2%~0.3%，所以<code>优先挑选不分AB类的基金</code>，避免受到利率歧视。</p>
<blockquote>
<p>对于股票型、债券型、混合型基金来说，常见A、B、C后缀，区分<code>收费方式</code>。</p>
<table>
<thead>
<tr>
<th align="center">分类</th>
<th align="center">说明</th>
<th align="center">特点</th>
<th align="center">适合投资者</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A类</td>
<td align="center">通常指前端收费<br>（在购买基金时收取费用，但赎回没有费用）</td>
<td align="center">申购金额越高<br>费率越低</td>
<td align="center">一次性购入较多金额<br>的土豪投资者</td>
</tr>
<tr>
<td align="center">B类</td>
<td align="center">通常指后端收费<br>（在基金赎回时才收费）</td>
<td align="center">持有基金时间越长<br>费率越低</td>
<td align="center">有耐心的长情投资者</td>
</tr>
<tr>
<td align="center">C类</td>
<td align="center">通常指销售服务费<br>（不收申购费，也不收赎回费）</td>
<td align="center">按日收费</td>
<td align="center">短期持有，对流动性<br>要求较高的投资者</td>
</tr>
</tbody></table>
</blockquote>
<h5 id="货币基金的收费"><a href="#货币基金的收费" class="headerlink" title="货币基金的收费"></a>货币基金的收费</h5><p>货币基金买卖不收取申购赎回费。<br>传统货基费用收取情况表：</p>
<table>
<thead>
<tr>
<th align="center">类别</th>
<th align="center">费用</th>
<th align="center">收取方</th>
</tr>
</thead>
<tbody><tr>
<td align="center">基金管理费</td>
<td align="center">0.33%</td>
<td align="center">基金公司</td>
</tr>
<tr>
<td align="center">基金托管费</td>
<td align="center">0.1%</td>
<td align="center">资金托管银行</td>
</tr>
<tr>
<td align="center">销售服务费</td>
<td align="center">0.25%</td>
<td align="center">销售渠道<br>（银行、券商、天天基金网等第三方销售平台）</td>
</tr>
</tbody></table>
<p>余额宝费用收取情况表：</p>
<table>
<thead>
<tr>
<th align="center">类别</th>
<th align="center">费用</th>
<th align="center">收取方</th>
</tr>
</thead>
<tbody><tr>
<td align="center">基金管理费</td>
<td align="center">0.3%</td>
<td align="center">基金公司</td>
</tr>
<tr>
<td align="center">基金托管费</td>
<td align="center">0.08%</td>
<td align="center">资金托管银行</td>
</tr>
<tr>
<td align="center">销售服务费</td>
<td align="center">0</td>
<td align="center">销售渠道 <br>（支付宝做销售渠道，免收销售服务费）</td>
</tr>
</tbody></table>
<h5 id="货币基金的购买时间"><a href="#货币基金的购买时间" class="headerlink" title="货币基金的购买时间"></a>货币基金的购买时间</h5><ul>
<li>如果遇到春节、国庆等假期，需要提前购买，享受假期间的利息。</li>
<li>基金计算收益受交易所开放时间影响，平时最好在周四下午3点前购买（参考上文中的交易所开放时间）。</li>
</ul>
<h5 id="场内货币基金（货币ETF）"><a href="#场内货币基金（货币ETF）" class="headerlink" title="场内货币基金（货币ETF）"></a>场内货币基金（货币ETF）</h5><p>ETF基金（Exchange Traded Funds）：交易型开放式指数基金。<br>ETF基金是所有公募基金中成本最低，交易最方便的一种。<br>需要挑选规模比较大的货币ETF。<br>门槛较高，华宝添益10万起买，存在复杂的套利机制，不推荐新手购买。</p>
<h3 id="Shibor指标"><a href="#Shibor指标" class="headerlink" title="Shibor指标"></a>Shibor指标</h3><h4 id="Shibor是什么"><a href="#Shibor是什么" class="headerlink" title="Shibor是什么"></a>Shibor是什么</h4><p><code>上海银行间同业拆借利率</code>（Shanghai Interbank Offered Rate）：<br>指中国大陆内各家银行之间借钱的利率。</p>
<p>银行是金融的核心，金融是经济的命脉，所以银行资金的流动性是绝对不能出半点差池的。<br>为了预防危机，各国金融监管机构都会对银行做各种各样的关于资金安全的刚性约定。</p>
<blockquote>
<p>最重要的一个指标：<code>资本充足率</code>必须高于8%<br><code>资本充足率</code>：简称<code>CAR</code> 公式=资本/加权风险资产<br>政府通过规定CAR下限，保证银行能化解一定金融风险，保证银行的正常运营和发展。</p>
</blockquote>
<blockquote>
<p>一般每个季度都会对银行考察一次，每到季末的时候之前放贷过于激进，导致现钱不够的银行不等不想办法借钱来应对考察，但是银行对资金需求规模太大了，向老百姓借钱远远不够，所以必须在银行之间建立一个<code>资金融通的市场</code>，方便银行之间互相借钱。<br>这个市场中的资金利率不是央行规定的，完全市场化定价，需求大的时候利率就高，这个资金利率就叫做<code>银行间同业拆借利率</code>。<br>各个地方的命名有所不同：伦敦（Libor）、纽约（Nibor）、新加坡（Sibor）、香港（Hibor）、上海（Shibor）</p>
</blockquote>
<h4 id="Shibor分类"><a href="#Shibor分类" class="headerlink" title="Shibor分类"></a>Shibor分类</h4><p>根据借款时间长短不同，利率可以分为隔夜、1周、2周、1个月、3个月、6个月、9个月和1年这几个品种。<br>其中，<code>隔夜拆借利率</code>最能体现市场短期资金面是否紧张的关键指标。</p>
<p>Shibor指标会影响到中国境内所有资产的价格。</p>
<h4 id="查看Shibor的方式"><a href="#查看Shibor的方式" class="headerlink" title="查看Shibor的方式"></a>查看Shibor的方式</h4><p>可以通过官网：<a href="http://www.shibor.org" target="_blank" rel="noopener">www.shibor.org</a>查看最新数据<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Shibor%E5%AE%98%E7%BD%91.png" alt=""></p>
<blockquote>
<p>其中O/N（Over Night）就是指的隔夜拆借利率</p>
</blockquote>
<h4 id="历史Shibor指标"><a href="#历史Shibor指标" class="headerlink" title="历史Shibor指标"></a>历史Shibor指标</h4><p>2013年6月20日<br>隔夜拆借利率达到了史无前例的：13.444%，在这段时间里余额宝的收益率也达到了7%</p>
<h3 id="国债逆回购"><a href="#国债逆回购" class="headerlink" title="国债逆回购"></a>国债逆回购</h3><p>国债逆回购利率也深受Shibor指标影响</p>
<h4 id="什么是国债逆回购"><a href="#什么是国债逆回购" class="headerlink" title="什么是国债逆回购"></a>什么是国债逆回购</h4><p>国债正回购：持有未到期国债的机构投资者以国债为抵押物借钱，到期后再把国债拿回来。<br>国债逆回购：个人投资者把钱借给交易对手，并暂时持有对方的国债，到期收钱归还国债。</p>
<h4 id="国债逆回购分类"><a href="#国债逆回购分类" class="headerlink" title="国债逆回购分类"></a>国债逆回购分类</h4><p>根据借款期限可分为1天、2天、3天、4天、7天、14天、28天、91天和182天这么多品种。<br>其中交易最活跃的是7天以内的，尤其是1天期限的品种</p>
<blockquote>
<p>超过7天的品种普通投资者就不需要去考虑了</p>
</blockquote>
<h4 id="国债逆回购版本"><a href="#国债逆回购版本" class="headerlink" title="国债逆回购版本"></a>国债逆回购版本</h4><p>由于中国有沪深两个证券交易所，所以国债逆回购存在上交所和深交所两个版本<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9B%BD%E5%80%BA%E9%80%86%E5%9B%9E%E8%B4%AD%E7%89%88%E6%9C%AC.png" alt=""><br>另外，两个版本的交易门槛和回报率都不一样，深市利率往往比沪市低（利率歧视无处不在）：</p>
<table>
<thead>
<tr>
<th align="center">类别</th>
<th align="center">沪市（上海交易所）</th>
<th align="center">深市（深圳交易所）</th>
</tr>
</thead>
<tbody><tr>
<td align="center">单份国债逆回购价格</td>
<td align="center">1000元</td>
<td align="center">100元</td>
</tr>
<tr>
<td align="center">国债逆回购起卖份数</td>
<td align="center">100份</td>
<td align="center">10份</td>
</tr>
<tr>
<td align="center">国债逆回购交易门槛</td>
<td align="center">10万元</td>
<td align="center">1000元</td>
</tr>
</tbody></table>
<h4 id="国债逆回购的费用"><a href="#国债逆回购的费用" class="headerlink" title="国债逆回购的费用"></a>国债逆回购的费用</h4><p>和货基不同，投资国债逆回购有手续费，期限越长，相对费用越低，例如：</p>
<table>
<thead>
<tr>
<th align="center">类别</th>
<th align="center">费用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">GC001</td>
<td align="center">1元</td>
</tr>
<tr>
<td align="center">GC002</td>
<td align="center">2元</td>
</tr>
<tr>
<td align="center">GC007</td>
<td align="center">5元</td>
</tr>
<tr>
<td align="center">GC014</td>
<td align="center">10元</td>
</tr>
</tbody></table>
<h4 id="国债逆回购的买卖"><a href="#国债逆回购的买卖" class="headerlink" title="国债逆回购的买卖"></a>国债逆回购的买卖</h4><p>国债逆回购的价格 × 100% = 年化利率</p>
<blockquote>
<p><strong>注意：</strong><br>国债逆回购的买卖和其他买卖正好相反：<br><code>买</code>国债逆回购时要点击<strong><code>卖出</code></strong><br><code>卖</code>国债逆回购时要点击<strong><code>买入</code></strong></p>
</blockquote>
<p>收益计算方式：</p>
<pre class="line-numbers language-java"><code class="language-java">一天的收益 <span class="token operator">=</span> 买入金额 × 年化利率 ÷ 一年的天数（沪市<span class="token number">360</span>天、深市<span class="token number">365</span>天）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="国债逆回购历史利率"><a href="#国债逆回购历史利率" class="headerlink" title="国债逆回购历史利率"></a>国债逆回购历史利率</h4><p><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9B%BD%E5%80%BA%E9%80%86%E5%9B%9E%E8%B4%AD%E6%B2%AA%E5%B8%82%E5%8E%86%E5%8F%B2%E5%88%A9%E7%8E%87.png" alt=""></p>
<h4 id="国债逆回购计息规则"><a href="#国债逆回购计息规则" class="headerlink" title="国债逆回购计息规则"></a>国债逆回购计息规则</h4><p>2017年5月22日起<br>国债逆回购计息规则已改变<br>计息天数由名义投资天数修改为资金实际占款天数</p>
<h4 id="国债逆回购的缺点"><a href="#国债逆回购的缺点" class="headerlink" title="国债逆回购的缺点"></a>国债逆回购的缺点</h4><p>国债逆回购没有办法做日内回转交易，也就是说一旦买入国债逆回购，当天是没有办法撤销的，必须持有到期才能使用资金。<br>这就有可能会错过股市最佳买入时机。</p>
<p>因为人人都想在股市下午快要收盘时去购买国债逆回购，所以国债逆回购在每天下午往往走势一路向下，一般下手越晚收益越低。</p>
<h4 id="国债逆回购信息查看方式"><a href="#国债逆回购信息查看方式" class="headerlink" title="国债逆回购信息查看方式"></a>国债逆回购信息查看方式</h4><p>去集思录官网的现金管理板块查看:<br><a href="https://www.jisilu.cn/data/repo/" target="_blank" rel="noopener">https://www.jisilu.cn/data/repo/</a><br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%9B%86%E6%80%9D%E5%BD%95%E7%8E%B0%E9%87%91%E7%AE%A1%E7%90%86%E6%9D%BF%E5%9D%97.png" alt=""></p>
<h3 id="场外货基-场内货基-国债逆回购的对比"><a href="#场外货基-场内货基-国债逆回购的对比" class="headerlink" title="场外货基/场内货基/国债逆回购的对比"></a>场外货基/场内货基/国债逆回购的对比</h3><p><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9C%BA%E5%86%85-%E5%9C%BA%E5%A4%96-%E5%9B%BD%E5%80%BA%E9%80%86%E5%9B%9E%E8%B4%AD%E5%AF%B9%E6%AF%94.png" alt=""></p>
<h3 id="债券基金"><a href="#债券基金" class="headerlink" title="债券基金"></a>债券基金</h3><h4 id="永恒不变的投资三大支柱"><a href="#永恒不变的投资三大支柱" class="headerlink" title="永恒不变的投资三大支柱"></a>永恒不变的投资三大支柱</h4><p>股票、债券、房产</p>
<h4 id="金融市场中的两种融通方式"><a href="#金融市场中的两种融通方式" class="headerlink" title="金融市场中的两种融通方式"></a>金融市场中的两种融通方式</h4><ol>
<li>债券形式<br> 我把钱借你，我是你的债主，你的生意做得好不好和我无关，就算生意失败，这钱也得还。</li>
<li>股票形式<br> 直接买下公司股权成为股东，生意失败，钱打水漂，生意成功，分到更丰厚的分红。</li>
</ol>
<blockquote>
<p>在理财道路上债券和股票都要有才行。</p>
</blockquote>
<h4 id="债券基金分类"><a href="#债券基金分类" class="headerlink" title="债券基金分类"></a>债券基金分类</h4><h5 id="按照投资期限分类"><a href="#按照投资期限分类" class="headerlink" title="按照投资期限分类"></a>按照投资期限分类</h5><p>短债基金、中短债基金、长期债券型基金</p>
<h5 id="按能否投资股票分类"><a href="#按能否投资股票分类" class="headerlink" title="按能否投资股票分类"></a>按能否投资股票分类</h5><p>二级债基：最多可以拿不超过20%资金投资二级市场股票的债基。<br>一级债基：不能在二级市场买股票，但是可以在一级市场打新股的债基，风险比二级债基低得多。<br>纯债基金：绝对不可以碰任何股票的债基（推荐）。<br>转债基金：专门投资可转债市场的转债基金，风险远高于纯债基金和一级债基，和二级债基风险不好比较。</p>
<blockquote>
<p>注意：名字里面没有纯债的也可能是纯债基金，名字里面有纯债的也可能还投资了高风险的可转债。</p>
</blockquote>
<h4 id="纯债基金的选购"><a href="#纯债基金的选购" class="headerlink" title="纯债基金的选购"></a>纯债基金的选购</h4><p>发行时间较久，长期回报比较稳健的优秀的纯债基金。</p>
<ol>
<li><p>天天基金网首页选择基金排行，选债券型-长期纯债-近3天倒序排序<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D.png" alt=""></p>
</li>
<li><p>取排名前30名做候选基金池</p>
</li>
<li><p>每一个点进去查看债券持仓，去除掉投资可转债的基金（存在问题：如何查看债券是否是可转债？），去除掉其中公司名气小的基金<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E6%9F%A5%E7%9C%8B%E6%8C%81%E4%BB%93.png" alt=""></p>
</li>
<li><p>剔除掉基金规模超过20亿的基金<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E6%9F%A5%E7%9C%8B%E8%A7%84%E6%A8%A1.png" alt=""></p>
</li>
<li><p>点击基金公司，往下滑，查看该基金公司的基金排名，剔除掉第二名及其以下的所有，只留下该公司<code>王牌纯债基金</code><br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E7%82%B9%E5%87%BB%E5%9F%BA%E9%87%91%E5%85%AC%E5%8F%B8.png" alt=""><br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E6%9F%A5%E7%9C%8B%E8%AF%A5%E5%85%AC%E5%8F%B8%E5%9F%BA%E9%87%91%E6%8E%92%E5%90%8D.png" alt=""></p>
</li>
<li><p>最后可以筛选到10只左右基金，点击费率详情，挑出综合费率最低的5只<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E7%82%B9%E5%87%BB%E8%B4%B9%E7%8E%87%E8%AF%A6%E6%83%85.png" alt=""><br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E5%9F%BA%E9%87%91%E8%B4%B9%E7%8E%87%E9%A1%B5%E9%9D%A2.png" alt=""></p>
</li>
<li><p>再在最后5只中选择基金成立时间相对较长的，基金经理任职相对较长时间的3只纯债基金，作为长期投资的基金</p>
</li>
</ol>
<h4 id="ABC类型区分"><a href="#ABC类型区分" class="headerlink" title="ABC类型区分"></a>ABC类型区分</h4><p>对于债券型基金来说，常见A、B、C后缀，区分<code>收费方式</code>。</p>
<table>
<thead>
<tr>
<th align="center">分类</th>
<th align="center">说明</th>
<th align="center">特点</th>
<th align="center">适合投资者</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A类</td>
<td align="center">通常指前端收费<br>（在购买基金时收取费用，但赎回没有费用）</td>
<td align="center">申购金额越高<br>费率越低</td>
<td align="center">一次性购入较多金额<br>的土豪投资者</td>
</tr>
<tr>
<td align="center">B类</td>
<td align="center">通常指后端收费<br>（在基金赎回时才收费）</td>
<td align="center">持有基金时间越长<br>费率越低</td>
<td align="center">有耐心的长情投资者</td>
</tr>
<tr>
<td align="center">C类</td>
<td align="center">通常指销售服务费<br>（不收申购费，也不收赎回费）</td>
<td align="center">按日收费</td>
<td align="center">短期持有，对流动性<br>要求较高的投资者</td>
</tr>
</tbody></table>
<h4 id="定期开放债基"><a href="#定期开放债基" class="headerlink" title="定期开放债基"></a>定期开放债基</h4><p>选购注意3点：</p>
<ol>
<li>选择定开债的纯债基金</li>
<li>别选杠杆率太高的债基（超过160%不推荐）</li>
<li>建议选择封闭期为1年的定开债</li>
</ol>
<h4 id="债券"><a href="#债券" class="headerlink" title="债券"></a>债券</h4><p>不建议直接投资债券。<br>直接投资债券劣势：</p>
<ol>
<li>品种较少，投资门槛较高</li>
<li>流动性较差</li>
<li>投资性价比低</li>
<li>投资过于复杂</li>
</ol>
<h5 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h5><ol>
<li>交易所债券市场<br> 缺点：和二级市场一样，债券品种少，流动性差</li>
<li>银行间债券市场<br> 缺点：投资起点非常高，具备银行间债券交易资格才可以进行投资</li>
</ol>
<h5 id="国债"><a href="#国债" class="headerlink" title="国债"></a>国债</h5><p>尤其是凭证式国债，是定期储蓄的最佳替代品<br>适合中老年人和保守型投资者</p>
<blockquote>
<p>纯债基金是国债的最好替代品</p>
</blockquote>
<h3 id="基金指标"><a href="#基金指标" class="headerlink" title="基金指标"></a>基金指标</h3><h4 id="基金分红"><a href="#基金分红" class="headerlink" title="基金分红"></a>基金分红</h4><p>基金分红和不分红本质上没什么区别，总资产不变。</p>
<p>分红方式：</p>
<ol>
<li>现金分红（相当于把收益提现）</li>
<li>红利再投资（收益再投资）</li>
</ol>
<h4 id="累计净值"><a href="#累计净值" class="headerlink" title="累计净值"></a>累计净值</h4><p>基金最关键指标。</p>
<p>单位净值：分红后的净值。<br>累计净值：算上所有分红收益的累计净值。</p>
<h3 id="混合型基金"><a href="#混合型基金" class="headerlink" title="混合型基金"></a>混合型基金</h3><p><code>股票型基金</code>由于股票必须占有80%的仓位，刚好2015年股灾，导致非常多的股票型基金修改为<code>偏股型混合基金</code>。<br><code>偏债混合型基金</code>有点类似<code>二级债基</code>，不推荐。</p>
<p><code>平衡型基金</code>和<code>灵活配置型基金</code>真正体现了混合型基金的优点，即–<code>风险对冲</code>。</p>
<h4 id="现代资产理论"><a href="#现代资产理论" class="headerlink" title="现代资产理论"></a>现代资产理论</h4><p>个别风险 = 非系统性风险 = 选股风险<br>买了A股票，只有A股票跌，其他的都涨。</p>
<p>系统性风险 = 大盘风险<br>无论买了那只股票，所有股票都跌。</p>
<p>问：如何化解这两种风险<br>答：构建一套最优的资产组合</p>
<blockquote>
<p>想要规避个别风险，就不要只买一只股票，而是买一篮子股票，这就是推荐买股票基金而不是单买股票的原因。<br>想要规避系统性风险，就不能只买一篮子股票，而要买更多的不同类别的资产，从而组建一个更加复杂多元的投资组合。</p>
</blockquote>
<h4 id="混合型基金购买建议"><a href="#混合型基金购买建议" class="headerlink" title="混合型基金购买建议"></a>混合型基金购买建议</h4><p><code>股票</code>和<code>债券</code>是最主要的两类金融资产。<br>股票属于权益类投资，债券则属于固定收益类投资，从理论上来说，两者正好形成了<code>风险对冲</code>（一般股市跌，债券就会涨，两个一起买就可以抵消风险，做到风险对冲）</p>
<p>与其买混合型基金，还不如根据自身的风险偏好，按一定比例分别买入股基和债基，一样可以做到风险对冲。</p>
<h3 id="股票基金"><a href="#股票基金" class="headerlink" title="股票基金"></a>股票基金</h3><h4 id="主动型基金挑选技巧"><a href="#主动型基金挑选技巧" class="headerlink" title="主动型基金挑选技巧"></a>主动型基金挑选技巧</h4><h5 id="挑基金公司"><a href="#挑基金公司" class="headerlink" title="挑基金公司"></a>挑基金公司</h5><p>尽量选择大型的知名的基金公司<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9F%BA%E9%87%91%E8%A1%8C%E4%B8%9A%E7%AC%AC%E4%B8%80%E6%A2%AF%E9%98%9F.png" alt=""></p>
<blockquote>
<p>其中<strong>南方</strong>、<strong>嘉实</strong>、<strong>汇添富</strong>、<strong>富国</strong>、<strong>银华</strong>、<strong>华安</strong>、<strong>兴全</strong>7家被评为五星级公司</p>
</blockquote>
<h5 id="挑基金经理"><a href="#挑基金经理" class="headerlink" title="挑基金经理"></a>挑基金经理</h5><ol>
<li><p><strong>基金经理的基本背景</strong><br>包括年龄、学历、从业履历</p>
<ul>
<li>30岁为分界线，最好选择35岁以上的基金经理</li>
<li>从业履历越长越好，管理该笔基金的时间越长越好</li>
</ul>
</li>
<li><p><strong>基金经理的操盘风格</strong><br>包括短线、长线、投资风格</p>
<ul>
<li><strong>基金换手率</strong><br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%A4%A9%E5%A4%A9%E5%9F%BA%E9%87%91-%E5%9F%BA%E9%87%91%E6%8D%A2%E6%89%8B%E7%8E%87.png" alt=""><blockquote>
<p>换手率在50%到200%之前是很正常的，换手率超过200%、甚至是500%、1000%，需要当心<br></p>
</blockquote>
</li>
<li><strong>晨星投资风格箱</strong><br>当今世界最知名的三大基金评级机构：<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%B8%89%E5%A4%A7%E5%9F%BA%E9%87%91%E8%AF%84%E7%BA%A7%E6%9C%BA%E6%9E%84.png" alt=""><br>其中最权威的为<strong>晨星</strong><a href="http://cn.morningstar.com" target="_blank" rel="noopener">http://cn.morningstar.com</a><br>在天天基金网上也能看到<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%A4%A9%E5%A4%A9%E5%9F%BA%E9%87%91-%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84%E9%A3%8E%E6%A0%BC.png" alt=""><br>相对来说小盘价值股潜在回报最高</li>
</ul>
</li>
</ol>
<blockquote>
<p>股市里的很多专业术语来源于赌博：<br>资金 = 筹码<br>大盘股 = 蓝筹股（最早期的欧美赌场里，蓝色的筹码代表的金额最大）<br>白马股：价值型股票，业绩稳定，分红能力强<br>黑马股：成长性股票，业绩一般，分红很少，成长空间大</p>
</blockquote>
<h5 id="挑业绩（最重要）"><a href="#挑业绩（最重要）" class="headerlink" title="挑业绩（最重要）"></a>挑业绩（最重要）</h5><ol>
<li><strong>基金成立时间足够久</strong><br> 投资领域的二手货比一手货更有投资价值<br> 选择成立三年以上，最好是五年以上的基金</li>
<li><strong>选择业绩越稳定的基金</strong><br> 过去五年中每年的业绩回报都能始终稳定在同类基金前20%排名以内的基金优先考虑<br> <img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%A4%A9%E5%A4%A9%E5%9F%BA%E9%87%91-%E5%B9%B4%E5%BA%A6%E6%B6%A8%E5%B9%85%E5%92%8C%E5%90%8C%E7%B1%BB%E6%8E%92%E5%90%8D%E8%B5%B0%E5%8A%BF.png" alt=""><br> <img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%A4%A9%E5%A4%A9%E5%9F%BA%E9%87%91-%E5%AD%A3%E5%B9%B4%E5%BA%A6%E6%B6%A8%E5%B9%85%E6%98%8E%E7%BB%86.png" alt=""></li>
</ol>
<h4 id="资产定价模型（CAPM模型）"><a href="#资产定价模型（CAPM模型）" class="headerlink" title="资产定价模型（CAPM模型）"></a>资产定价模型（CAPM模型）</h4><p>一般来说要挑选α系数、R平方、夏普指数都比较高的三高基金</p>
<h5 id="β系数"><a href="#β系数" class="headerlink" title="β系数"></a>β系数</h5><p><code>基金</code>和<code>业绩评价基准</code>之间的相关性，为正相关性<br>是对一个基金所承受的系统性风险的量化表达<br>β系数的基准数字为1，表示该基金与业绩评价基准一致（和大盘涨跌幅一致），一般基金的β系数在0.5-1.5之间波动</p>
<p><strong>β系数 &gt; 1</strong>，基金资产配置相比于市场平均波动更大，风险更大，期望收益也越大；<br>常见的高β配置为科技公司、中小盘，如创业板指数、纳斯达克指数</p>
<p><strong>β系数 &lt; 1</strong>，基金资产配置波动小、风险小，期望收益也越小；<br>常见的低β配置为大蓝筹，如上证50</p>
<blockquote>
<p>基金业绩评价基准（基金KPI）：<br>根据基金自身特性定制的考核标准，每个基金的基准不一定一样，在天天基金网基金基本概况中可以查看：<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%A4%A9%E5%A4%A9%E5%9F%BA%E9%87%91-%E5%9F%BA%E9%87%91%E6%AF%94%E8%BE%83%E5%9F%BA%E5%87%86.png" alt=""></p>
</blockquote>
<ul>
<li>高β策略：<br>  专门投资β系数比较高的股票，适合激进型投资者和大牛市。</li>
<li>低β策略：<br>  专门投资β系数较低的股票，适合稳健性投资者和熊市。</li>
</ul>
<h5 id="α系数"><a href="#α系数" class="headerlink" title="α系数"></a>α系数</h5><p>代表一个基金的绝对回报或者超额收益</p>
<p>α系数的基准数字为0，表示和基准指数一致，如果为1.0则表示比基准指数高1%，-1.0表示低1%</p>
<blockquote>
<p>一个基金的<code>真实收益</code> = 承担系统性风险的<code>β收益</code> + 承担单个基金个别风险的<code>α收益</code></p>
</blockquote>
<h5 id="R平方"><a href="#R平方" class="headerlink" title="R平方"></a>R平方</h5><p>表明α系数和β系数的精准度<br>R平方的数值越高，α系数和β系数的可信度越高，R平方100，表示100%可信</p>
<h5 id="夏普比率"><a href="#夏普比率" class="headerlink" title="夏普比率"></a>夏普比率</h5><p>夏普比率 = (基金回报率 - 市场无风险回报率) / 标准差</p>
<p><strong>夏普比率是评价基金优劣的最重要的标准化指标</strong></p>
<blockquote>
<p>夏普比率越高，基金性价比越高<br>标准差：反映基金的波动程度，将系统风险和非系统风险都包含在内，所测的是基金的全部风险</p>
</blockquote>
<h4 id="指数基金"><a href="#指数基金" class="headerlink" title="指数基金"></a>指数基金</h4><p>一般说的指数基金多指股票指数。<br><code>股票价格指数</code>：是描述股票市场总体价格水平变化的指标。</p>
<p>指数是如果算出来的：<br>把某一天作为基准日，当天的所有股票价格加起来的总价格定为一个基准点位（基准指数），如100点，以后的股票涨跌就是和这100点来做比较，可以通过指数反映出该股市的总体水平是涨还是跌。</p>
<h5 id="国内指数"><a href="#国内指数" class="headerlink" title="国内指数"></a>国内指数</h5><ol>
<li>上证综指<br>上海证券综合指数简称<code>上证指数</code>或<code>上证综指</code>反映上海证券交易所所有上市股票价格的总体水平及变动情况。</li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>理财</category>
      </categories>
      <tags>
        <tag>基金</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Zookeeper实现HiveServer2的HA</title>
    <url>/2020/01/16/shi-yong-zookeeper-shi-xian-hiveserver2-de-ha/</url>
    <content><![CDATA[<p>本文主要讲述如何使用Zookeeper实现HiveServer2的HA</p>
<h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><h4 id="修改hive配置"><a href="#修改hive配置" class="headerlink" title="修改hive配置"></a>修改hive配置</h4><p>登录Cloduera Manager，进入Hive服务，在配置中搜索<code>hive-site.xml</code>，找到<code>hive-site.xml 的 HiveServer2 高级配置代码段（安全阀）</code>，增加如下配置（Zookeeper地址修改为当前的地址）</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.server2.support.dynamic.service.discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.server2.zookeeper.namespace<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hiveserver2_zk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.zookeeper.quorum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>master1:2181,master2:2181,master3:2181<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.zookeeper.client.port<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>2181<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>修改后点击保存</p>
<h4 id="重启hive服务"><a href="#重启hive服务" class="headerlink" title="重启hive服务"></a>重启hive服务</h4><p>根据提示重启hive服务</p>
<h3 id="测试是否配置成功"><a href="#测试是否配置成功" class="headerlink" title="测试是否配置成功"></a>测试是否配置成功</h3><h4 id="查看Zookeeper注册情况"><a href="#查看Zookeeper注册情况" class="headerlink" title="查看Zookeeper注册情况"></a>查看Zookeeper注册情况</h4><p>用zookeeper-client命令进入zookeeper查看hiveserver2_zk节点下所有HiveServer2节点是否注册成功</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> 1<span class="token punctuation">]</span> <span class="token function">ls</span> /hiveserver2_zk
<span class="token punctuation">[</span>serverUri<span class="token operator">=</span>master3.segma.tech:10000<span class="token punctuation">;</span>version<span class="token operator">=</span>2.1.1-cdh6.3.0<span class="token punctuation">;</span>sequence<span class="token operator">=</span>0000000001, serverUri<span class="token operator">=</span>master2.segma.tech:10000<span class="token punctuation">;</span>version<span class="token operator">=</span>2.1.1-cdh6.3.0<span class="token punctuation">;</span>sequence<span class="token operator">=</span>0000000000<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="使用连接地址测试连接"><a href="#使用连接地址测试连接" class="headerlink" title="使用连接地址测试连接"></a>使用连接地址测试连接</h4><p>连接地址格式为：</p>
<pre class="line-numbers language-bash"><code class="language-bash">jdbc:hive2://<span class="token operator">&lt;</span>zookeeper quorum<span class="token operator">></span>/<span class="token operator">&lt;</span>dbName<span class="token operator">></span><span class="token punctuation">;</span>ServiceDiscoveryMode<span class="token operator">=</span>zookeeper<span class="token punctuation">;</span>zooKeeperNameSpace<span class="token operator">=</span>hiveserver2_zk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>数据库名可以为空</p>
</blockquote>
<p>用beeline测试连接情况：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># beeline </span>
WARNING: Use <span class="token string">"yarn jar"</span> to launch YARN applications.
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding <span class="token keyword">in</span> <span class="token punctuation">[</span>jar:file:/mnt/disk/opt/cloudera/parcels/CDH-6.3.0-1.cdh6.3.0.p0.1279813/jars/log4j-slf4j-impl-2.8.2.jar<span class="token operator">!</span>/org/slf4j/impl/StaticLoggerBinder.class<span class="token punctuation">]</span>
SLF4J: Found binding <span class="token keyword">in</span> <span class="token punctuation">[</span>jar:file:/mnt/disk/opt/cloudera/parcels/CDH-6.3.0-1.cdh6.3.0.p0.1279813/jars/slf4j-log4j12-1.7.25.jar<span class="token operator">!</span>/org/slf4j/impl/StaticLoggerBinder.class<span class="token punctuation">]</span>
SLF4J: See http://www.slf4j.org/codes.html<span class="token comment" spellcheck="true">#multiple_bindings for an explanation.</span>
SLF4J: Actual binding is of <span class="token function">type</span> <span class="token punctuation">[</span>org.apache.logging.slf4j.Log4jLoggerFactory<span class="token punctuation">]</span>
Beeline version 2.1.1-cdh6.3.0 by Apache Hive
beeline<span class="token operator">></span> <span class="token operator">!</span>connect jdbc:hive2://master1:2181,master2:2181,master3:2181/default<span class="token punctuation">;</span>serviceDiscoveryMode<span class="token operator">=</span>zooKeeper<span class="token punctuation">;</span>zooKeeperNamespace<span class="token operator">=</span>hiveserver2_zk
Connecting to jdbc:hive2://master1:2181,master2:2181,master3:2181/default<span class="token punctuation">;</span>serviceDiscoveryMode<span class="token operator">=</span>zooKeeper<span class="token punctuation">;</span>zooKeeperNamespace<span class="token operator">=</span>hiveserver2_zk
Enter username <span class="token keyword">for</span> jdbc:hive2://master1:2181,master2:2181,master3:2181/default: hvie
Enter password <span class="token keyword">for</span> jdbc:hive2://master1:2181,master2:2181,master3:2181/default: 
20/01/16 16:02:33 <span class="token punctuation">[</span>main<span class="token punctuation">]</span>: INFO jdbc.HiveConnection: Connected to master2.segma.tech:10000
Connected to: Apache Hive <span class="token punctuation">(</span>version 2.1.1-cdh6.3.0<span class="token punctuation">)</span>
Driver: Hive JDBC <span class="token punctuation">(</span>version 2.1.1-cdh6.3.0<span class="token punctuation">)</span>
Transaction isolation: TRANSACTION_REPEATABLE_READ
0: jdbc:hive2://master1:2181,master2:2181<span class="token operator">></span> show databases<span class="token punctuation">;</span>
INFO  <span class="token keyword">:</span> Compiling command<span class="token punctuation">(</span>queryId<span class="token operator">=</span>hive_20200116160255_735faaf6-18dd-4de0-8a11-6e12aae92dff<span class="token punctuation">)</span>: show databases
INFO  <span class="token keyword">:</span> Semantic Analysis Completed
INFO  <span class="token keyword">:</span> Returning Hive schema: Schema<span class="token punctuation">(</span>fieldSchemas:<span class="token punctuation">[</span>FieldSchema<span class="token punctuation">(</span>name:database_name, type:string, comment:from deserializer<span class="token punctuation">)</span><span class="token punctuation">]</span>, properties:null<span class="token punctuation">)</span>
INFO  <span class="token keyword">:</span> Completed compiling command<span class="token punctuation">(</span>queryId<span class="token operator">=</span>hive_20200116160255_735faaf6-18dd-4de0-8a11-6e12aae92dff<span class="token punctuation">)</span><span class="token punctuation">;</span> Time taken: 1.007 seconds
INFO  <span class="token keyword">:</span> Executing command<span class="token punctuation">(</span>queryId<span class="token operator">=</span>hive_20200116160255_735faaf6-18dd-4de0-8a11-6e12aae92dff<span class="token punctuation">)</span>: show databases
INFO  <span class="token keyword">:</span> Starting task <span class="token punctuation">[</span>Stage-0:DDL<span class="token punctuation">]</span> <span class="token keyword">in</span> serial mode
INFO  <span class="token keyword">:</span> Completed executing command<span class="token punctuation">(</span>queryId<span class="token operator">=</span>hive_20200116160255_735faaf6-18dd-4de0-8a11-6e12aae92dff<span class="token punctuation">)</span><span class="token punctuation">;</span> Time taken: 0.025 seconds
INFO  <span class="token keyword">:</span> OK
+----------------+
<span class="token operator">|</span> database_name  <span class="token operator">|</span>
+----------------+
<span class="token operator">|</span> default        <span class="token operator">|</span>
+----------------+
1 row selected <span class="token punctuation">(</span>1.403 seconds<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>CDH</tag>
        <tag>Hive</tag>
        <tag>Zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>hive注释中文乱码问题</title>
    <url>/2019/09/26/hive-zhu-shi-zhong-wen-luan-ma-wen-ti/</url>
    <content><![CDATA[<p>在安装CDH中Hive时，虽然设置了Hive元数据库编码为UTF-8，但是创建Hive表注释依然会有乱码问题，本文介绍乱码原因以及解决方法。</p>
<h3 id="乱码原因"><a href="#乱码原因" class="headerlink" title="乱码原因"></a>乱码原因</h3><p>查看Hive元数据库（本文为MySQL中metastore），发现虽然数据库编码为UTF-8，但是库下面的表编码却还是latin1，这是因为虽然创建metastore库时指定了编码UTF-8，但是CDH在安装Hive时却还是以latin1编码去创建表的，所以导致Hive表存在中文乱码问题。</p>
<h3 id="解决方法步骤"><a href="#解决方法步骤" class="headerlink" title="解决方法步骤"></a>解决方法步骤</h3><h4 id="登录MySQL，进入Hive元数据库"><a href="#登录MySQL，进入Hive元数据库" class="headerlink" title="登录MySQL，进入Hive元数据库"></a>登录MySQL，进入Hive元数据库</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">use</span> metastore<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="修改字段注释字符集"><a href="#修改字段注释字符集" class="headerlink" title="修改字段注释字符集"></a>修改字段注释字符集</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> COLUMNS_V2 <span class="token keyword">modify</span> <span class="token keyword">column</span> <span class="token keyword">COMMENT</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="修改表注释字符集"><a href="#修改表注释字符集" class="headerlink" title="修改表注释字符集"></a>修改表注释字符集</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> TABLE_PARAMS <span class="token keyword">modify</span> <span class="token keyword">column</span> PARAM_VALUE <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span>     <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="修改分区参数，支持分区建用中文表示"><a href="#修改分区参数，支持分区建用中文表示" class="headerlink" title="修改分区参数，支持分区建用中文表示"></a>修改分区参数，支持分区建用中文表示</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> PARTITION_PARAMS <span class="token keyword">modify</span> <span class="token keyword">column</span> PARAM_VALUE <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span> <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> PARTITION_KEYS <span class="token keyword">modify</span> <span class="token keyword">column</span> PKEY_COMMENT <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span> <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="修改表名注释，支持中文表示"><a href="#修改表名注释，支持中文表示" class="headerlink" title="修改表名注释，支持中文表示"></a>修改表名注释，支持中文表示</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> INDEX_PARAMS <span class="token keyword">modify</span> <span class="token keyword">column</span> PARAM_VALUE <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span> <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="修改视图，支持视图中文"><a href="#修改视图，支持视图中文" class="headerlink" title="修改视图，支持视图中文"></a>修改视图，支持视图中文</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> TBLS <span class="token keyword">modify</span> <span class="token keyword">COLUMN</span> VIEW_EXPANDED_TEXT <span class="token keyword">mediumtext</span> <span class="token keyword">CHARACTER SET</span> utf8<span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> TBLS <span class="token keyword">modify</span> <span class="token keyword">COLUMN</span> VIEW_ORIGINAL_TEXT <span class="token keyword">mediumtext</span> <span class="token keyword">CHARACTER SET</span> utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="修改数据库注释，支持中文表示"><a href="#修改数据库注释，支持中文表示" class="headerlink" title="修改数据库注释，支持中文表示"></a>修改数据库注释，支持中文表示</h4><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> DBS <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span><span class="token keyword">DESC</span><span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>CDH</tag>
        <tag>Hive</tag>
        <tag>乱码</tag>
      </tags>
  </entry>
  <entry>
    <title>Impala配置优化</title>
    <url>/2019/09/18/impala-pei-zhi-you-hua/</url>
    <content><![CDATA[<p>参考官网文档：<br>Impala安装后的推荐配置<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_config_performance.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_config_performance.html</a></p>
<h3 id="HDFS快速读取"><a href="#HDFS快速读取" class="headerlink" title="HDFS快速读取"></a>HDFS快速读取</h3><p>启用快速读取允许Impala直接从文件系统读取本地数据。不再需要通过DataNode进行通信，从而提高了性能。<br>cloudera manager进入impala配置页面，搜索<code>dfs.client.read.shortcircuit</code>，勾选后重启。</p>
<h3 id="设置内存限制"><a href="#设置内存限制" class="headerlink" title="设置内存限制"></a>设置内存限制</h3><p>进入impala配置页面，搜索<code>mem_limit</code></p>
<h3 id="设置连接超时时间"><a href="#设置连接超时时间" class="headerlink" title="设置连接超时时间"></a>设置连接超时时间</h3><p>进入impala配置页面，搜索<code>idle_session_timeout</code></p>
<blockquote>
<p>注意：超时时间设置过短可能导致服务端连接关闭而客户端未关闭，可能造成客户端无法使用impala的问题</p>
</blockquote>
<h3 id="设置连接数"><a href="#设置连接数" class="headerlink" title="设置连接数"></a>设置连接数</h3><p>进入impala配置页面，搜索<code>fe_service_threads</code></p>
<h3 id="使用HDFS缓存"><a href="#使用HDFS缓存" class="headerlink" title="使用HDFS缓存"></a>使用HDFS缓存</h3><p>参考官网文档：<br>使用Impala时设置HDFS缓存<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_perf_hdfs_caching.html#hdfs_caching" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_perf_hdfs_caching.html#hdfs_caching</a></p>
<h3 id="配置Impala负载均衡"><a href="#配置Impala负载均衡" class="headerlink" title="配置Impala负载均衡"></a>配置Impala负载均衡</h3><p>参考官网文档：<br><a href="https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/impala_proxy.html" target="_blank" rel="noopener">Using Impala through a Proxy for High Availability</a><br>参考微信公众hadoop实操文章：<br><a href="https://mp.weixin.qq.com/s/LX4PTr4XcZEOwjZRytroCQ" target="_blank" rel="noopener">如何使用HAProxy实现Impala的负载均衡</a></p>
<h3 id="Impala-timestamp类型时区问题"><a href="#Impala-timestamp类型时区问题" class="headerlink" title="Impala timestamp类型时区问题"></a>Impala timestamp类型时区问题</h3><p>参考微信公众hadoop实操文章：<br><a href="https://cloud.tencent.com/developer/article/1078478" target="_blank" rel="noopener">Hive中的Timestamp类型日期与Impala中显示不一致分析（补充）</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>CDH</tag>
        <tag>Impala</tag>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title>CDH官网链接整理</title>
    <url>/2019/09/17/cdh-guan-wang-lian-jie-zheng-li/</url>
    <content><![CDATA[<h3 id="安装部署类"><a href="#安装部署类" class="headerlink" title="安装部署类"></a>安装部署类</h3><h4 id="CDH安装教程"><a href="#CDH安装教程" class="headerlink" title="CDH安装教程"></a>CDH安装教程</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/installation.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/installation.html</a>  </p>
<h4 id="CDH、CM安装包下载地址"><a href="#CDH、CM安装包下载地址" class="headerlink" title="CDH、CM安装包下载地址"></a>CDH、CM安装包下载地址</h4><p><a href="https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_version_packaging_download.html" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_version_packaging_download.html</a></p>
<h4 id="集群所使用端口"><a href="#集群所使用端口" class="headerlink" title="集群所使用端口"></a>集群所使用端口</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_ports.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_ports.html</a>  </p>
<h4 id="集群组件服务主机分配建议"><a href="#集群组件服务主机分配建议" class="headerlink" title="集群组件服务主机分配建议"></a>集群组件服务主机分配建议</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_host_allocations.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_host_allocations.html</a>  </p>
<h4 id="定制化安装（离线安装）"><a href="#定制化安装（离线安装）" class="headerlink" title="定制化安装（离线安装）"></a>定制化安装（离线安装）</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_custom_installation.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_custom_installation.html</a>  </p>
<h4 id="基于裸金属部署参考文档"><a href="#基于裸金属部署参考文档" class="headerlink" title="基于裸金属部署参考文档"></a>基于裸金属部署参考文档</h4><p><a href="https://www.cloudera.com/documentation/other/reference-architecture/topics/ra_bare_metal_deployment.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/other/reference-architecture/topics/ra_bare_metal_deployment.html</a>  </p>
<h4 id="CHD各组件服务依赖项"><a href="#CHD各组件服务依赖项" class="headerlink" title="CHD各组件服务依赖项"></a>CHD各组件服务依赖项</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_service_dependencies.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_service_dependencies.html</a></p>
<h3 id="Cloudera-Manager相关"><a href="#Cloudera-Manager相关" class="headerlink" title="Cloudera Manager相关"></a>Cloudera Manager相关</h3><h4 id="Cloudera-Manager-API"><a href="#Cloudera-Manager-API" class="headerlink" title="Cloudera Manager API"></a>Cloudera Manager API</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_intro_api.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_intro_api.html</a>  </p>
<h4 id="Cloudera-Manager常见问题（FAQ）"><a href="#Cloudera-Manager常见问题（FAQ）" class="headerlink" title="Cloudera Manager常见问题（FAQ）"></a>Cloudera Manager常见问题（FAQ）</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_faqs.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_faqs.html</a>  </p>
<h3 id="Impala相关"><a href="#Impala相关" class="headerlink" title="Impala相关"></a>Impala相关</h3><h4 id="Impala内存和查询数据量的关系"><a href="#Impala内存和查询数据量的关系" class="headerlink" title="Impala内存和查询数据量的关系"></a>Impala内存和查询数据量的关系</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_faq.html#faq_internals__faq_memory_exceeded" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_faq.html#faq_internals__faq_memory_exceeded？</a></p>
<h4 id="Impala常见问题及解答"><a href="#Impala常见问题及解答" class="headerlink" title="Impala常见问题及解答"></a>Impala常见问题及解答</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_faq.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_faq.html</a></p>
<h4 id="使用Impala时设置HDFS缓存"><a href="#使用Impala时设置HDFS缓存" class="headerlink" title="使用Impala时设置HDFS缓存"></a>使用Impala时设置HDFS缓存</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_perf_hdfs_caching.html#hdfs_caching" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_perf_hdfs_caching.html#hdfs_caching</a></p>
<h4 id="Impala安装后的推荐配置"><a href="#Impala安装后的推荐配置" class="headerlink" title="Impala安装后的推荐配置"></a>Impala安装后的推荐配置</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_config_performance.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_config_performance.html</a></p>
<h4 id="Impala安装要求"><a href="#Impala安装要求" class="headerlink" title="Impala安装要求"></a>Impala安装要求</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_prereqs.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_prereqs.html</a>  </p>
<h4 id="Impala元数据管理-自动同步Hive元数据"><a href="#Impala元数据管理-自动同步Hive元数据" class="headerlink" title="Impala元数据管理(自动同步Hive元数据)"></a>Impala元数据管理(自动同步Hive元数据)</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_metadata.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_metadata.html</a></p>
<h4 id="Impala中SQL和HQL的区别"><a href="#Impala中SQL和HQL的区别" class="headerlink" title="Impala中SQL和HQL的区别"></a>Impala中SQL和HQL的区别</h4><p><a href="https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_langref_unsupported.html" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_langref_unsupported.html</a></p>
<h4 id="Impala聚合函数"><a href="#Impala聚合函数" class="headerlink" title="Impala聚合函数"></a>Impala聚合函数</h4><p><a href="https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_aggregate_functions.html#aggregate_functions" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_aggregate_functions.html#aggregate_functions</a></p>
<h4 id="Impala分析函数"><a href="#Impala分析函数" class="headerlink" title="Impala分析函数"></a>Impala分析函数</h4><p><a href="https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_analytic_functions.html#analytic_functions" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_analytic_functions.html#analytic_functions</a></p>
<h4 id="从其他数据库迁移Sql到Impala注意事项"><a href="#从其他数据库迁移Sql到Impala注意事项" class="headerlink" title="从其他数据库迁移Sql到Impala注意事项"></a>从其他数据库迁移Sql到Impala注意事项</h4><p><a href="https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_porting.html#porting" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_porting.html#porting</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>CDH</tag>
        <tag>官网链接</tag>
      </tags>
  </entry>
  <entry>
    <title>Impala配置自动同步Hive元数据</title>
    <url>/2019/09/10/impala-pei-zhi-zi-dong-tong-bu-hive-yuan-shu-ju/</url>
    <content><![CDATA[<p>参考官方文档：<a href="https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/impala_metadata.html#auto_poll_hms_notification" target="_blank" rel="noopener">Automatic Invalidation/Refresh of Metadata</a></p>
<h3 id="原理解释"><a href="#原理解释" class="headerlink" title="原理解释"></a>原理解释</h3><p>Impala使用Catalog服务进行元数据的管理，Catalog使用StateStore进行元数据同步分发到各个Impalad服务。<br>Impala使用两个元数据：</p>
<ul>
<li>来自Hive Metastore的目录信息</li>
<li>来自NameNode的文件元数据。</li>
</ul>
<p>在通过非Impala操作修改数据时（如：Hive操作、Spark操作Hive、HDFS直接操作表文件等），Impala是无感知的，此时需要在Impala端进行手动刷新元数据，手动刷新有两种方式:</p>
<ul>
<li><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_refresh.html#refresh" target="_blank" rel="noopener">REFRESH</a></li>
<li><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_invalidate_metadata.html" target="_blank" rel="noopener">INVALIDATE METADATA</a></li>
</ul>
<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>由于全局刷新<code>invalidate metadata</code>语句会丢弃所有的元数据，导致没有更新的表再次查询也会去拉取元数据（造成延迟），所以不能采用这种方式（官网不推荐）。<br>所以只能使用<code>invalidate metadata [表名]</code>或者<code>refresh [表名]</code>的方式。但是这样会有一个问题，需要知道表名，</p>
<h3 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h3><h4 id="impala配置修改"><a href="#impala配置修改" class="headerlink" title="impala配置修改"></a>impala配置修改</h4><ol>
<li><p>查看<code>impala catalog server web UI</code><br><code>/metrics</code><br><code>events</code><br>发现只有一个<code>events-processor.status</code>为<code>DISABLED</code></p>
</li>
<li><p>在impala配置中找 <code>Catalog Server 命令行参数高级配置代码段（安全阀）</code><br>加入一下代码 （短横线中间不能有空格）：</p>
<pre class="line-numbers language-ini"><code class="language-ini"><span class="token constant"> --hms_event_polling_interval_s</span><span class="token attr-value"><span class="token punctuation">=</span>1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>此时直接重启impala会报错，先修改hive配置</p>
</blockquote>
</li>
</ol>
<h4 id="hive配置修改"><a href="#hive配置修改" class="headerlink" title="hive配置修改"></a>hive配置修改</h4><p>进入hive配置页面</p>
<ol>
<li><p>勾选 <code>启用数据库中的存储通知</code></p>
</li>
<li><p>在搜索框输入<code>hive-site.xml</code><br>在 <code>hive-site.xml 的 Hive Metastore Server 高级配置代码段（安全阀）</code> 中添加两个值</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.notifications.add.thrift.objects<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>set auto invalidate metadata on hive events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.alter.notifications.basic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>set auto invalidate metadata on hive events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>在 <code>hive-site.xml 的 Hive 服务高级配置代码段（安全阀）</code> 中添加</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.dml.events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>set auto invalidate metadata on hive events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>在 <code>hive-site.xml 的 Hive 客户端高级配置代码段（安全阀）</code> 中添加</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.dml.events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>set auto invalidate metadata on hive events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="剩余的坑"><a href="#剩余的坑" class="headerlink" title="剩余的坑"></a>剩余的坑</h3><p><a href="https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/impala_metadata.html#auto_poll_hms_notification" target="_blank" rel="noopener">官方文档</a>里面说<code>insert</code>操作触发的是<code>refresh</code>，但是据实际测试情况来看，触发的是<code>invalidate metadata [table]</code>，两者的区别在于<code>refresh</code>几乎没有延迟，而<code>invalidate metadata [table]</code>下次进行查询时impala会去拉取元数据信息，会有延迟。</p>
<p>经过官方人员确认，表示insert确实是invalidate的效果，回复原话如下：</p>
<blockquote>
<p>这个功能现在还比较粗暴，这块确实还是invalidate的效果……因为insert非partition表的时候hive发出来的是一个alter事件后接一个insert事件，接到alter事件后就执行invalidate了；insert partition的时候hive发出来的是一个insert事件后接一个alter事件，于是最终又会执行一次invalidate……</p>
</blockquote>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>CDH</tag>
        <tag>Impala</tag>
        <tag>元数据</tag>
      </tags>
  </entry>
  <entry>
    <title>CDH集群Yarn内存调优</title>
    <url>/2019/08/30/cdh-ji-qun-yarn-nei-cun-diao-you/</url>
    <content><![CDATA[<p>HDP的内存调优建议：<a href="http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.1.1/bk_installing_manually_book/content/rpm-chap1-11.html" target="_blank" rel="noopener">http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.1.1/bk_installing_manually_book/content/rpm-chap1-11.html </a></p>
<h3 id="DRF"><a href="#DRF" class="headerlink" title="DRF"></a>DRF</h3><p>DRF: <code>Dominant Resource Fairness</code>，根据CPU和内存公平调度资源。CDH动态资源池默认采用的DRF计划策略。简单的理解就是内存不够的时候，多余的CPU就不会分配任务了，就让他空着；CPU不够的时候，多出来的内存也不会再启动任务了。</p>
<h3 id="相关参数"><a href="#相关参数" class="headerlink" title="相关参数"></a>相关参数</h3><h4 id="RM的内存资源配置-配置的是资源调度相关"><a href="#RM的内存资源配置-配置的是资源调度相关" class="headerlink" title="RM的内存资源配置, 配置的是资源调度相关"></a>RM的内存资源配置, 配置的是资源调度相关</h4><ul>
<li><code>RM1</code>：<strong>yarn.app.mapreduce.am.resource.mb</strong>， ApplicationMaster自身的物理内存要求</li>
<li><code>RM2</code>：<strong>yarn.scheduler.minimum-allocation-mb</strong>，分配给AM单个容器可申请的最小内存，如果申请的容器内存小于该值，则系统将调整至该值</li>
<li><code>RM3</code>：<strong>yarn.scheduler.maximum-allocation-mb</strong>，分配给AM单个容器可申请的最大内存<blockquote>
<p>上面三个值均不能超过<code>NM1</code>值<br>由于AM也是容器，所以<code>RM1</code>的值需要在<code>RM2</code>、<code>RM3</code>范围内。</p>
</blockquote>
</li>
</ul>
<h4 id="NM的内存资源配置，配置的是硬件资源相关"><a href="#NM的内存资源配置，配置的是硬件资源相关" class="headerlink" title="NM的内存资源配置，配置的是硬件资源相关"></a>NM的内存资源配置，配置的是硬件资源相关</h4><ul>
<li><code>NM1</code>：<strong>yarn.nodemanager.resource.memory-mb</strong> ，NodeManager节点分配给容器的内存，cdh默认8G</li>
<li><code>NM2</code>：<strong>yarn.nodemanager.resource.cpu-vcores</strong> ，NodeManager节点分配给容器虚拟CPU核数，cdh默认8，但CM会自动检测内核数并修改<blockquote>
<p><code>NM1</code>可以计算节点最大最大Container数量，max(Container)=<code>NM1</code>/<code>RM2</code></p>
</blockquote>
</li>
</ul>
<h4 id="AM内存配置相关参数，配置的是任务相关"><a href="#AM内存配置相关参数，配置的是任务相关" class="headerlink" title="AM内存配置相关参数，配置的是任务相关"></a>AM内存配置相关参数，配置的是任务相关</h4><ul>
<li><code>AM1</code>：<strong>mapreduce.map.memory.mb</strong> ，map任务内存，cdh默认1G（不能超过容器最大内存限制）</li>
<li><code>AM2</code>：<strong>mapreduce.map.cpu.vcores</strong> ，map任务虚拟CPU核数，cdh默认1</li>
<li><code>AM3</code>：<strong>mapreduce.reduce.memory.mb</strong> ，reduce任务内存，cdh默认1G（不能超过容器最大内存限制）</li>
<li><code>AM4</code>：<strong>mapreduce.reduce.cpu.vcores</strong> ，reduce任务虚拟CPU核数，cdh默认1<blockquote>
<p><code>AM1</code>、<code>AM3</code>这两个值应该在<code>RM2</code>和<code>RM3</code>这两个值之间<br><code>AM3</code>的值最好为<code>AM1</code>的两倍</p>
</blockquote>
</li>
</ul>
<h3 id="测试情况"><a href="#测试情况" class="headerlink" title="测试情况"></a>测试情况</h3><p>Yarn资源分配情况，虚拟CPU共分配了24核，内存则是他的两倍48G<br><img src="http://47.106.179.244/CDH%E9%9B%86%E7%BE%A4Yarn%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/yarn%E8%B5%84%E6%BA%90%E9%85%8D%E7%BD%AE.png" alt=""></p>
<p>执行任务，队列调度策略为DRF，查看内存和CPU使用情况<br><img src="http://47.106.179.244/CDH%E9%9B%86%E7%BE%A4Yarn%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/%E5%86%85%E5%AD%98CPU%E4%BD%BF%E7%94%A8%E5%AF%B9%E6%AF%94.png" alt=""><br><img src="http://47.106.179.244/CDH%E9%9B%86%E7%BE%A4Yarn%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5.png" alt=""><br><img src="http://47.106.179.244/CDH%E9%9B%86%E7%BE%A4Yarn%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/CPU%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5.png" alt=""><br>可以发现，内存使用受限于cpu，与DRF策略吻合</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><strong>Yarn队列如果采用的是DRF调度策略，则vcpu和内存最好按照1:1比例进行分配，因为多余的资源根本不会用到。</strong></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>CDH</tag>
        <tag>Yarn</tag>
        <tag>参数调优</tag>
      </tags>
  </entry>
  <entry>
    <title>如何给CDH集群分配角色</title>
    <url>/2019/08/27/ru-he-gei-cdh-ji-qun-fen-pei-jiao-se/</url>
    <content><![CDATA[<blockquote>
<p>本文转载自微信公众号Hadoop实操：《如何给Hadoop集群划分角色》</p>
</blockquote>
<p>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/latest/topics/cm_ig_host_allocations.html" target="_blank" rel="noopener">Recommended Cluster Hosts and Role Distribution</a></p>
<h3 id="1-文档编写目的"><a href="#1-文档编写目的" class="headerlink" title="1.文档编写目的"></a>1.文档编写目的</h3><p>Fayson在之前的文章中介绍过《CDH网络要求(Lenovo参考架构)》，《如何为Hadoop集群选择正确的硬件》和《CDH安装前置准备》，而我们在搭建Hadoop集群时，还一件很重要的事就是如何给集群分配角色。</p>
<p>本文主要介绍由Cloudera Manager管理的CDH集群的角色划分。实际部署你可能还需要考虑工作负载的类型和数量，真实要部署的哪些服务，硬件资源，配置，以及其他因素。当你使用Cloudera Manager的安装向导来安装CDH时，CM会根据主机的可用资源，自动的分配角色到各台主机，边缘节点除外。你可以在向导中使用”自定义角色分配 - Customize Role Assignments”来更改这些默认划分，当然你也可以以后再使用Cloudera Manager来增加或修改角色分配。</p>
<p>在介绍角色划分时，我们首先来看看有哪几种主要的角色：</p>
<p>1.<strong>管理节点（Master Hosts）</strong>：主要用于运行Hadoop的管理进程，比如HDFS的NameNode，YARN的ResourceManager。</p>
<p>2.<strong>工具节点（Utility Hosts）</strong>:主要用于运行非管理进程的其他进程，比如Cloudera Manager和Hive Metastore。</p>
<p>3.<strong>边缘节点（Edge Hosts）</strong>：用于集群中启动作业的客户端机器，边缘节点的数量取决于工作负载的类型和数量。</p>
<p>4.<strong>工作节点（Worker Hosts）</strong>：主要用于运行DataNode以及其他分布式进程，比如ImpalaD。</p>
<p>本文会从测试/开发集群（小于10台），小规模集群（10-20台），中小规模集群（20-50台），中等规模集群（50-100台），大型集群（100-200台），超大规模集群（200-500台），巨型规模集群（500台以上）来分别讲述角色划分。以下角色划分场景都不包括Kafka，Kafka角色我们一般都会采用单独的机器部署。</p>
<h3 id="2-集群角色划分"><a href="#2-集群角色划分" class="headerlink" title="2.集群角色划分"></a>2.集群角色划分</h3><h4 id="2-1-小于10台"><a href="#2-1-小于10台" class="headerlink" title="2.1.小于10台"></a>2.1.小于10台</h4><p>一般用于测试/开发集群，我们建议至少5台机器，没有高可用。一个管理节点主要用于安装NameNode和ResourceManager，工具节点和边缘节点复用一个，主要用于安装Cloudera Manager等，剩余3-7台工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/%E5%B0%8F%E4%BA%8E10%E5%8F%B0.jpeg" alt=""></p>
<h4 id="2-2-10-20台"><a href="#2-2-10-20台" class="headerlink" title="2.2.10-20台"></a>2.2.10-20台</h4><p>这是最小规模的生产系统，必须启用高可用。我们会用2个管理节点用于安装2个NameNode，一个工具节点用于安装Cloudera Manager等，如果机器充足或者Hue/HiveServer2/Flume的负载特别高，可以考虑独立出边缘节点用于部署这些角色，否则也可以跟Cloudera Manager复用。最后还剩下7-17个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/10-20%E5%8F%B0.jpeg" alt=""></p>
<p>注：根据实际情况选择是否需要单独的边缘节点。</p>
<p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p>
<p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p>
<p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p>
<h4 id="2-3-20-50台"><a href="#2-3-20-50台" class="headerlink" title="2.3.20-50台"></a>2.3.20-50台</h4><p>这是中小规模的生产集群，必须启用高可用，与小规模集群角色划分差别不大。我们会用3个管理节点用于安装NameNode和Zookeeper等，一个工具节点用于安装ClouderaManager等，如果机器充足或者Hue/HiveServer2/Flume的负载特别高，可以考虑独立出边缘节点用于部署这些角色，否则也可以跟Cloudera Manager复用。最后还剩下16-46个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/20-50%E5%8F%B0.jpeg" alt=""></p>
<p>注：根据实际情况选择是否需要单独的边缘节点。</p>
<p>Zookeeper和JournalNode需配置专有的数据盘</p>
<p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p>
<p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p>
<p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p>
<p>HiveServer2和Impala Daemon的负载均衡参考《如何使用HAProxy实现Impala的负载均衡》，《如何使用HAProxy实现HiveServer2负载均衡》，《如何使用HAProxy实现Kerberos环境下的Impala负载均衡》，《如何使用Nginx实现Impala负载均衡》和《如何使用Zookeeper实现HiveServer2的HA》</p>
<h4 id="2-4-50-100台"><a href="#2-4-50-100台" class="headerlink" title="2.4.50-100台"></a>2.4.50-100台</h4><p>这是中等规模的生产集群，必须启用高可用。我们会用3个管理节点用于安装NameNode和Zookeeper等，一个工具节点用于安装Cloudera Manager，一个工具节点用于安装ClouderaManagement Service和Navigator等。使用三个节点安装Hue/HiveServer2/Flume，作为边缘节点，使用两个节点安装负载均衡软件比如F5或者HAProxy并配置为KeepAlive的主主模式，该负载均衡可同时用于HiveServer2和Impala Daemon。最后还剩下42-92个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/50-100%E5%8F%B0.jpeg" alt=""></p>
<p>注：Zookeeper和JournalNode需配置专有的数据盘</p>
<p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p>
<p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p>
<p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p>
<p>HiveServer2和Impala Daemon的负载均衡参考《如何使用HAProxy实现Impala的负载均衡》，《如何使用HAProxy实现HiveServer2负载均衡》，《如何使用HAProxy实现Kerberos环境下的Impala负载均衡》，《如何使用Nginx实现Impala负载均衡》和《如何使用Zookeeper实现HiveServer2的HA》</p>
<h4 id="2-5-100-200台"><a href="#2-5-100-200台" class="headerlink" title="2.5.100-200台"></a>2.5.100-200台</h4><p>属于大规模的生产集群，必须启用高可用。我们会用5个管理节点用于安装NameNode和Zookeeper等，1个工具节点用于安装Cloudera Manager，再使用4个工具节点分别安装HMS，Activity Monitor，Navigator等。使用3个以上节点安装Hue/HiveServer2/Flume，作为边缘节点，使用2个节点安装负载均衡软件比如F5或者HAProxy并配置为KeepAlive的主主模式，该负载均衡可同时用于HiveServer2和Impala Daemon。最后还剩下85-185个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/100-200%E5%8F%B0.jpeg" alt=""></p>
<p>注：Zookeeper和JournalNode需配置专有的数据盘</p>
<p>Kudu Master不超过3个</p>
<p>Kudu Tablet Server不超过100个</p>
<p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p>
<p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p>
<p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p>
<p>HiveServer2和Impala Daemon的负载均衡参考《如何使用HAProxy实现Impala的负载均衡》，《如何使用HAProxy实现HiveServer2负载均衡》，《如何使用HAProxy实现Kerberos环境下的Impala负载均衡》，《如何使用Nginx实现Impala负载均衡》和《如何使用Zookeeper实现HiveServer2的HA》</p>
<h4 id="2-6-200-500台"><a href="#2-6-200-500台" class="headerlink" title="2.6.200-500台"></a>2.6.200-500台</h4><p>属于超大规模的生产集群，必须启用高可用。我们会用7个管理节点用于安装NameNode和Zookeeper等，1个工具节点用于安装Cloudera Manager，再使用7个工具节点分别安装HMS，Activity Monitor，Navigator等。使用3个以上节点安装Hue/HiveServer2/Flume，作为边缘节点，使用2个节点安装负载均衡软件比如F5或者HAProxy并配置为KeepAlive的主主模式，该负载均衡可同时用于HiveServer2和Impala Daemon。最后还剩下180-480个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/200-500%E5%8F%B0.jpeg" alt=""></p>
<p>注：Zookeeper和JournalNode需配置专有的数据盘</p>
<p>Kudu Master不超过3个</p>
<p>Kudu Tablet Server不超过100个</p>
<p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p>
<p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p>
<p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p>
<p>HiveServer2和Impala Daemon的负载均衡参考《如何使用HAProxy实现Impala的负载均衡》，《如何使用HAProxy实现HiveServer2负载均衡》，《如何使用HAProxy实现Kerberos环境下的Impala负载均衡》，《如何使用Nginx实现Impala负载均衡》和《如何使用Zookeeper实现HiveServer2的HA》</p>
<h4 id="2-7-500台以上"><a href="#2-7-500台以上" class="headerlink" title="2.7.500台以上"></a>2.7.500台以上</h4><p>属于巨型规模的生产集群，必须启用高可用。我们会用20个管理节点用于安装NameNode和Zookeeper等，1个工具节点用于安装Cloudera Manager，再使用7个工具节点分别安装HMS，Activity Monitor，Navigator等。使用3个以上节点安装Hue/HiveServer2/Flume，作为边缘节点，使用2个节点安装负载均衡软件比如F5或者HAProxy并配置为KeepAlive的主主模式，该负载均衡可同时用于HiveServer2和Impala Daemon。最后还剩下至少467个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/500%E5%8F%B0%E4%BB%A5%E4%B8%8A.jpeg" alt=""></p>
<p>注：这个规模的规划仅供参考，这种巨型规模的生产集群的角色划分依赖因素非常多，比如是否考虑NN和RM的联邦等</p>
<p>Zookeeper和JournalNode需配置专有的数据盘</p>
<p>Kudu Master不超过3个</p>
<p>Kudu Tablet Server不超过100个</p>
<p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p>
<p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p>
<p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p>
<p>HiveServer2和Impala Daemon的负载均衡参考《如何使用HAProxy实现Impala的负载均衡》，《如何使用HAProxy实现HiveServer2负载均衡》，《如何使用HAProxy实现Kerberos环境下的Impala负载均衡》，《如何使用Nginx实现Impala负载均衡》和《如何使用Zookeeper实现HiveServer2的HA》</p>
<p>如果你玩的Hadoop集群节点数不在本文范围内，那你肯定不是在玩大数据，或者超过了Fayson的能力范围。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>CDH</tag>
        <tag>角色分配</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7离线安装CDH</title>
    <url>/2019/08/16/centos7-chi-xian-an-zhuang-cdh/</url>
    <content><![CDATA[<p>环境准备部分参考文章：<a href="https://mp.weixin.qq.com/s?__biz=MzI4OTY3MTUyNg==&amp;mid=2247485512&amp;idx=1&amp;sn=9e953a7eb8b3b2a64a011550ab7da184&amp;chksm=ec2ad841db5d51573f5913d14c33135180bca023de1c349fc431f561c055d1d085527107b66e&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Hadoop实操：CDH安装前置准备</a></p>
<h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><table>
<thead>
<tr>
<th align="center">节点</th>
<th align="center">IP地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">master1.hming.org</td>
<td align="center">172.16.0.2</td>
</tr>
<tr>
<td align="center">master2.hming.org</td>
<td align="center">172.16.0.5</td>
</tr>
<tr>
<td align="center">master3.hming.org</td>
<td align="center">172.16.0.6</td>
</tr>
<tr>
<td align="center">node1.hming.org</td>
<td align="center">172.16.0.12</td>
</tr>
<tr>
<td align="center">node2.hming.org</td>
<td align="center">172.16.0.13</td>
</tr>
<tr>
<td align="center">node3.hming.org</td>
<td align="center">172.16.0.15</td>
</tr>
</tbody></table>
<p><strong>服务器配置：</strong><br>CPU：16核<br>内存：64G<br>磁盘：管理节点外挂一块2T HDD到/mnt/data01目录，工作节点挂载三块2T HDD到/mnt/data01-03目录</p>
<p><strong>组件角色分配规划表：</strong><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E8%A7%92%E8%89%B2%E5%88%86%E9%85%8D%E8%A1%A8.png" alt=""><br>附：<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_host_allocations.html" target="_blank" rel="noopener">官方服务角色分配方案</a></p>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="节点数量"><a href="#节点数量" class="headerlink" title="节点数量"></a>节点数量</h4><ol>
<li>最小规模，建议最小<code>4</code>台服务器，1个管理节点安装Cloudera Manager和NameNode等服务，其他3个作为工作节点，因为没有任何的高可用，所以该规模只能用于开发测试。</li>
<li>建议规模，生产环境中建议最小<code>6</code>台服务器，3台管理节点+3台工作节点，1个管理节点安装Cloudera Manager，另外2个安装NameNode高可用，常见的较小规模生产系统一般为<code>10-20</code>台服务器。</li>
</ol>
<h4 id="硬件要求"><a href="#硬件要求" class="headerlink" title="硬件要求"></a>硬件要求</h4><p>以下Cloudera Manager，NameNode和DataNode相同：</p>
<p>CPU：最少4 cores，推荐2路8核，2路10核，2路12核<br>内存：最小16GB，推荐128GB-256GB<br>网络：最小千兆，推荐两张万兆绑定<br>磁盘：系统盘参考下面<code>系统盘/目录分配要求</code>章节，数据盘，工作节点推荐12块1TB-4TB的SATA/SAS盘，管理节点推荐1-2块1TB-4TB的SATA/SAS盘（具体配置可根据实际情况而定）</p>
<p>附：<a href="https://www.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_hardware_requirements.html#concept_vvv_cxt_gbb" target="_blank" rel="noopener">官方硬件要求说明</a></p>
<h4 id="系统盘-目录分配要求"><a href="#系统盘-目录分配要求" class="headerlink" title="系统盘/目录分配要求"></a>系统盘/目录分配要求</h4><p><strong>目录分配方案一：</strong><br>如果只有一个根目录<code>/</code>建议工作节点最少<code>100G</code>，管理节点因为会存放MySQL数据以及一些监控数据，可以选择<code>200G</code>以上</p>
<p><strong>目录分配方案二：</strong></p>
<table>
<thead>
<tr>
<th align="center">目录</th>
<th align="center">分配空间</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/</td>
<td align="center">可以默认比如10GB</td>
</tr>
<tr>
<td align="center">/opt</td>
<td align="center">大于50GB</td>
</tr>
<tr>
<td align="center">/usr</td>
<td align="center">大于50GB</td>
</tr>
<tr>
<td align="center">/var</td>
<td align="center">大于20GB</td>
</tr>
<tr>
<td align="center">/var/log</td>
<td align="center">大于50GB</td>
</tr>
<tr>
<td align="center">/var/lib</td>
<td align="center">大于50GB</td>
</tr>
<tr>
<td align="center">/tmp</td>
<td align="center">大于20GB</td>
</tr>
</tbody></table>
<p><strong>目录分配方案三：</strong></p>
<table>
<thead>
<tr>
<th align="center">目录</th>
<th align="center">分配空间</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/</td>
<td align="center">可以默认比如10GB</td>
</tr>
<tr>
<td align="center">/opt</td>
<td align="center">大于50GB</td>
</tr>
<tr>
<td align="center">/usr</td>
<td align="center">大于50GB</td>
</tr>
<tr>
<td align="center">/var</td>
<td align="center">大于50GB</td>
</tr>
<tr>
<td align="center">/tmp</td>
<td align="center">大于20GB</td>
</tr>
</tbody></table>
<h4 id="磁盘要求"><a href="#磁盘要求" class="headerlink" title="磁盘要求"></a>磁盘要求</h4><ol>
<li><p><a href="https://baike.baidu.com/item/%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/1149823?fromtitle=RAID&amp;fromid=33858" target="_blank" rel="noopener">磁盘阵列</a>要求：<br>工作节点（DataNode/NodeManager），系统盘可以使用<a href="https://baike.baidu.com/item/RAID%201" target="_blank" rel="noopener">RAID1</a>或者<a href="https://baike.baidu.com/item/RAID%2010" target="_blank" rel="noopener">RAID10</a>，数据盘不要使用<a href="https://baike.baidu.com/item/%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/1149823?fromtitle=RAID&amp;fromid=33858" target="_blank" rel="noopener">RAID</a>，应该为<a href="https://baike.baidu.com/item/JBOD" target="_blank" rel="noopener">JBOD</a>。<br>管理节点（NameNode，Zookeeper，JournalNode），可以使用<a href="https://baike.baidu.com/item/%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/1149823?fromtitle=RAID&amp;fromid=33858" target="_blank" rel="noopener">RAID</a>或者<a href="https://baike.baidu.com/item/JBOD" target="_blank" rel="noopener">JBOD</a>，因为管理节点对<code>I/O</code>延迟比较敏感，建议将NN，ZK，JN存放数据的目录配置为不同的目录，并且对应到不同的磁盘。</p>
</li>
<li><p>DataNode数据盘格式建议选择<code>ext4</code>或<code>xfs</code>，并配置<code>noatime</code>，比如：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /etc/fstab</span>
/dev/sda1  /data/1    xfs   defaults,noatime      1 2
/dev/sdb1  /data/2    xfs   defaults,noatime      1 2
/dev/sdc1  /data/3    xfs   defaults,noatime      1 2
/dev/sdd1  /data/4    xfs   defaults,noatime      1 2
/dev/sde1  /data/5    xfs   defaults,noatime      1 2
/dev/sdf1  /data/6    xfs   defaults,noatime      1 2
<span class="token punctuation">..</span>.
/dev/sdx1  /data/x    xfs    defaults,noatime      1 2
<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># fdisk -l</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意: <code>noatime</code>已经包含了<code>nodiratime</code>。不需要同时指定。</p>
<blockquote>
<p>参考：<br><a href="https://wiki.archlinux.org/index.php/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#atime_%E5%8F%82%E6%95%B0" target="_blank" rel="noopener">fstab atime 参数</a><br><a href="https://www.linuxquestions.org/questions/linux-software-2/what-is-noatime-how-can-i-mount-a-partition-with-noatime-393617/" target="_blank" rel="noopener">what is noatime</a><br>默认的方式下linux会把文件访问的时间atime做记录，文件系统在文件被访问、创建、修改等的时候记录下了文件的一些时间戳，比如：文件创建时间、最近一次修改时间和最近一次访问时间；这在绝大部分的场合都是没有必要的。<br>因为系统运行的时候要访问大量文件，如果能减少一些动作（比如减少时间戳的记录次数等）将会显著提高磁盘 IO 的效率、提升文件系统的性能。 </p>
</blockquote>
</li>
<li><p>DataNode数据盘确保没有配置分区卷LogicalVolume Manager (LVM)</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># df –h</span>
<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># lsblk</span>
<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># lvdisplay</span>
Additionally, <span class="token function">look</span> for/dev/mapper or /dev/XX <span class="token punctuation">(</span>where XX isnot sd<span class="token punctuation">)</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>确保BIOS配置正确，比如你如果使用的是SATA，请确保没有开启<code>IDE emulation</code>。</p>
</li>
<li><p>确保<code>controller firmware</code>是最新的，校验磁盘是否有一些潜在的问题。</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># dmesg | egrep -i 'sense error'</span>
<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># dmesg | egrep -i 'ata bus error'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>目前常见的SATA读写速度大概在<code>150MB/S-180MB/S</code>，SAS或者SSD会更快，如果磁盘读写速度<code>小于70MB/S</code>，肯定是有问题的，需要检查硬件。<br>以下为测试读写的命令，这里我们将<code>/mnt/data01</code>挂载到<code>/dev/sdb1</code>：</p>
<ul>
<li><p><code>hdparm</code>仅用于Linux系统。现在主要用来测试SSD固态硬盘读取速度。</p>
<pre class="line-numbers language-bash"><code class="language-bash">  <span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hdparm -t --direct /dev/sdb1</span>
  /dev/sdb1:
   Timing O_DIRECT disk reads: 456 MB <span class="token keyword">in</span>  3.01 seconds <span class="token operator">=</span> 151.67 MB/sec<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>dd</code>命令不是专业测试磁盘工具，它没考虑到缓存和物理读的区分，测试的结果仅作参考，不算权威。但是它通用于所有的Linux系统中。<br>  两个特殊设备：（不产生IO，就能单独测试写速度和读速度）<br>  <code>/dev/null</code> 伪设备,回收站.写该文件不会产生IO<br>  <code>/dev/zero</code> 伪设备,会产生空字符流,对它不会产生IO<br>  测试写入速度</p>
<pre class="line-numbers language-bash"><code class="language-bash">  <span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># dd bs=1M count=1024 if=/dev/zero of=/mnt/data01/test.dbf oflag=direct conv=fdatasync</span>
  1024+0 records <span class="token keyword">in</span>
  1024+0 records out
  1073741824 bytes <span class="token punctuation">(</span>1.1 GB<span class="token punctuation">)</span> copied, 7.05097 s, 152 MB/s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>  测试读取速度</p>
<pre class="line-numbers language-bash"><code class="language-bash">  <span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># dd bs=1M count=1024 of=/dev/null if=/mnt/data01/test.dbf iflag=direct conv=fdatasync</span>
  dd: fsync failed <span class="token keyword">for</span> ‘/dev/null’: Invalid argument
  1024+0 records <span class="token keyword">in</span>
  1024+0 records out
  1073741824 bytes <span class="token punctuation">(</span>1.1 GB<span class="token punctuation">)</span> copied, 6.77791 s, 158 MB/s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>  测试读写速度</p>
<pre class="line-numbers language-bash"><code class="language-bash">  <span class="token punctuation">[</span>root@node10 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># dd if=/mnt/data01/test.dbf of=/mnt/data01/test_w.dbf bs=8k count=300000</span>
  131072+0 records <span class="token keyword">in</span>
  131072+0 records out
  1073741824 bytes <span class="token punctuation">(</span>1.1 GB<span class="token punctuation">)</span> copied, 7.39375 s, 145 MB/s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
<li><p>确保磁盘没有坏的扇区：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># badblocks -v /dev/sda1</span>
<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># badblocks -v /dev/sdb1</span>
<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># badblocks -v /dev/sdx1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h4 id="安装用户"><a href="#安装用户" class="headerlink" title="安装用户"></a>安装用户</h4><p>可以使用<code>root</code>用户安装，或者具有<code>sudo</code>权限的其他用户</p>
<h4 id="网络要求"><a href="#网络要求" class="headerlink" title="网络要求"></a>网络要求</h4><h5 id="IPV4设置"><a href="#IPV4设置" class="headerlink" title="IPV4设置"></a>IPV4设置</h5><p>CDH支持IPV4，不支持IPV6，确保没有开启IPV6</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># lsmod | grep ipv6 </span>
<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>修改<code>/etc/sysctl.conf</code>文件添加一下内容禁用IPV6</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#disable ipv6</span>
net.ipv6.conf.all.disable_ipv6<span class="token operator">=</span> 1
net.ipv6.conf.default.disable_ipv6<span class="token operator">=</span> 1
net.ipv6.conf.lo.disable_ipv6<span class="token operator">=</span> 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果是RHEL/CentOS，可以把以下内容补充到<code>/etc/sysconfig/network</code></p>
<pre class="line-numbers language-bash"><code class="language-bash">NETWORKING_IPV6<span class="token operator">=</span>no
IPV6INIT<span class="token operator">=</span>no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h5 id="网络带宽测试"><a href="#网络带宽测试" class="headerlink" title="网络带宽测试"></a>网络带宽测试</h5><p>使用<code>iperf3</code>进行网络带宽测试，两台服务器进行网络测试，一台当做服务端（master2）另一台做客户端（master1）。</p>
<ol>
<li><p>服务端和客户端均安装iperf3</p>
<pre class="line-numbers language-bash"><code class="language-bash">yum -y <span class="token function">install</span> iperf3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>服务端master2启动iperf3服务</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@master2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># iperf3 -s</span>
 -----------------------------------------------------------
 Server listening on 5201
 -----------------------------------------------------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>客户端master1进行请求，连接服务端</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># iperf3 -c master2</span>
 Connecting to host master2, port 5201
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span> local 172.16.0.2 port 50472 connected to 172.16.0.5 port 5201
 <span class="token punctuation">[</span> ID<span class="token punctuation">]</span> Interval           Transfer     Bandwidth       Retr  Cwnd
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   0.00-1.00   sec   123 MBytes  1.03 Gbits/sec    0   1.40 MBytes       
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   1.00-2.00   sec   120 MBytes  1.01 Gbits/sec    0   2.63 MBytes       
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   2.00-3.00   sec   119 MBytes   996 Mbits/sec    0   2.96 MBytes       
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   3.00-4.00   sec   120 MBytes  1.01 Gbits/sec    0   3.00 MBytes       
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   4.00-5.00   sec   119 MBytes   996 Mbits/sec    0   3.00 MBytes       
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   5.00-6.00   sec   120 MBytes  1.01 Gbits/sec    0   3.00 MBytes       
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   6.00-7.00   sec   120 MBytes  1.01 Gbits/sec    0   3.00 MBytes       
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   7.00-8.00   sec   119 MBytes   996 Mbits/sec    0   3.00 MBytes       
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   8.00-9.00   sec   120 MBytes  1.01 Gbits/sec    0   3.00 MBytes       
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   9.00-10.00  sec   119 MBytes   996 Mbits/sec    1   3.00 MBytes       
 - - - - - - - - - - - - - - - - - - - - - - - - -
 <span class="token punctuation">[</span> ID<span class="token punctuation">]</span> Interval           Transfer     Bandwidth       Retr
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   0.00-10.00  sec  1.17 GBytes  1.00 Gbits/sec    1             sender
 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   0.00-10.00  sec  1.17 GBytes  1.00 Gbits/sec                  receiver

 iperf Done.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<p>可以看出千兆网卡网络带宽在<code>1.00 Gbits/sec</code>左右</p>
<h4 id="主机名配置"><a href="#主机名配置" class="headerlink" title="主机名配置"></a>主机名配置</h4><ol>
<li>将主机名设置为全限定域名格式<a href="https://baike.baidu.com/item/FQDN" target="_blank" rel="noopener">FQDN</a>（Fully Qualified Domain Name）<br><code>sudo hostnamectl set-hostname master1.hming.org</code></li>
<li>配置/etc/hosts文件，添加集群中所有全限定域名，也可以在后面继续添加非限定名</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash">172.16.0.2 master1.hming.org master1
172.16.0.5 master2.hming.org master2
172.16.0.6 master3.hming.org master3
172.16.0.12 node1.hming.org node1
172.16.0.13 node2.hming.org node2
172.16.0.15 node3.hming.org node3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="配置免密登录（可选）"><a href="#配置免密登录（可选）" class="headerlink" title="配置免密登录（可选）"></a>配置免密登录（可选）</h4><p>如果所有主机节点root用户密码相同，则可以不用配置<br>配置免密码登录教程请点击<a href="http://blog.hming.org/2018/09/16/linux-ji-qun-pei-zhi-mian-mi-ma-deng-lu/">这里</a></p>
<h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><p>查看防火墙状态<br><code>firewall-cmd --state</code>或<code>systemctl status firewalld</code><br>临时关闭防火墙<br><code>systemctl stop firewalld</code><br>禁止开机启动<br><code>systemctl disable firewalld</code></p>
<h4 id="设置SELinux模式"><a href="#设置SELinux模式" class="headerlink" title="设置SELinux模式"></a>设置SELinux模式</h4><p>不关闭可能导致Apache http服务无法访问。</p>
<ol>
<li>查看SELinux状态：<code>getenforce</code><br>如果是<code>Permissive</code>或者<code>Disabled</code>则可以继续安装，如果显示<code>enforcing</code>，则需要进行以下步骤修改模式</li>
<li>编辑<code>/etc/selinux/config</code>文件</li>
<li>修改<code>SELINUX=enforcing</code>行内容为<code>SELINUX=permissive</code>或者<code>SELINUX=disabled</code></li>
<li>重启系统或者运行<code>setenforce 0</code>命令禁用SELinux</li>
</ol>
<h4 id="设置SWAP"><a href="#设置SWAP" class="headerlink" title="设置SWAP"></a>设置SWAP</h4><p>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/latest/topics/cdh_admin_performance.html#cdh_performance__section_xpq_sdf_jq" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/latest/topics/cdh_admin_performance.html#cdh_performance__section_xpq_sdf_jq</a><br>运行命令<code>sysctl -w vm.swappiness=1</code>临时生效<br>或者修改<code>/etc/sysctl.conf</code>配置文件，增加如下配置，永久生效</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 配置为1时表示当内存使用超过99时，才使用交换空间，这里可以配置为1-10</span>
vm.swappiness <span class="token operator">=</span> 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>检查是否生效</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/sys/vm/swappiness</span>
1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="关闭透明大页面"><a href="#关闭透明大页面" class="headerlink" title="关闭透明大页面"></a>关闭透明大页面</h4><p>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/latest/topics/cdh_admin_performance.html#cdh_performance__section_hw3_sdf_jq" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/latest/topics/cdh_admin_performance.html#cdh_performance__section_hw3_sdf_jq</a><br>查看透明大页面配置，发现目前为开启状态<code>always</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /sys/kernel/mm/transparent_hugepage/defrag </span>
<span class="token punctuation">[</span>always<span class="token punctuation">]</span> madvise never
<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /sys/kernel/mm/transparent_hugepage/enabled </span>
<span class="token punctuation">[</span>always<span class="token punctuation">]</span> madvise never<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>执行命令关闭透明大页面，使其立即生效</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo never > /sys/kernel/mm/transparent_hugepage/enabled </span>
<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo never > /sys/kernel/mm/transparent_hugepage/defrag </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>再次查看，确认已经修改为<code>never</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /sys/kernel/mm/transparent_hugepage/enabled </span>
always madvise <span class="token punctuation">[</span>never<span class="token punctuation">]</span>
<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /sys/kernel/mm/transparent_hugepage/defrag </span>
always madvise <span class="token punctuation">[</span>never<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>在<code>/etc/rc.d/rc.local</code>脚本文件中添加以下代码，使其永久生效</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token function">test</span> -f /sys/kernel/mm/transparent_hugepage/enabled<span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token keyword">echo</span> never <span class="token operator">></span> /sys/kernel/mm/transparent_hugepage/enabled
<span class="token keyword">fi</span>
<span class="token keyword">if</span> <span class="token function">test</span> -f /sys/kernel/mm/transparent_hugepage/defrag<span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token keyword">echo</span> never <span class="token operator">></span> /sys/kernel/mm/transparent_hugepage/defrag
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>赋予<code>rc.local</code>脚本可执行权限</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chmod +x /etc/rc.d/rc.local</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="配置NTP服务（时钟同步）"><a href="#配置NTP服务（时钟同步）" class="headerlink" title="配置NTP服务（时钟同步）"></a>配置NTP服务（时钟同步）</h4><p>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/install_cdh_enable_ntp.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/install_cdh_enable_ntp.html</a><br>参考其他文章：<a href="https://blog.csdn.net/u010003835/article/details/84962098" target="_blank" rel="noopener">https://blog.csdn.net/u010003835/article/details/84962098</a><br>集群中所有主机必须保持时间同步，如果时间相差较大会引起各种问题，如果企业有自己的NTP Server则可以集群中所有节点可配置企业NTP Server，如果没有自己的NTP服务器则在集群中选用一台服务器作为NTP Server，其它服务器与其保持同步</p>
<blockquote>
<p>本文在<code>master1</code>上安装NTP服务，其他节点和<code>master1</code>节点同步</p>
</blockquote>
<h5 id="1-所有节点安装ntp服务"><a href="#1-所有节点安装ntp服务" class="headerlink" title="1.所有节点安装ntp服务"></a>1.所有节点安装ntp服务</h5><pre class="line-numbers language-bash"><code class="language-bash">yum -y <span class="token function">install</span> ntp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h5 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2.修改配置文件"></a>2.修改配置文件</h5><pre class="line-numbers language-bash"><code class="language-bash">vim /etc/ntp.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol>
<li>所有主机在restrict附近增加下面两行</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash">restrict 172.16.0.3 nomodify notrap nopeer noquery  <span class="token comment" spellcheck="true"># ip地址为本机主机ip</span>
restrict 172.16.0.1 mask 255.255.255.0 nomodify notrap  <span class="token comment" spellcheck="true"># 网关地址和子网掩码</span>

restrict 127.0.0.1  <span class="token comment" spellcheck="true"># 原本文件中的两行不要删</span>
restrict ::1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>作为NTP服务的节点（master1节点）注释所有server行，增加下面两行</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#server 0.centos.pool.ntp.org iburst</span>
<span class="token comment" spellcheck="true">#server 1.centos.pool.ntp.org iburst</span>
<span class="token comment" spellcheck="true">#server 2.centos.pool.ntp.org iburst</span>
<span class="token comment" spellcheck="true">#server 3.centos.pool.ntp.org iburst</span>
server 127.127.1.0      <span class="token comment" spellcheck="true"># 这里如果有已经存在的NTP服务，则可以填写相应地址</span>
Fudge 127.127.1.0 stratum 10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>其他节点注释所有server行，增加下面两行</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#server 0.centos.pool.ntp.org iburst</span>
<span class="token comment" spellcheck="true">#server 1.centos.pool.ntp.org iburst</span>
<span class="token comment" spellcheck="true">#server 2.centos.pool.ntp.org iburst</span>
<span class="token comment" spellcheck="true">#server 3.centos.pool.ntp.org iburst</span>
server 172.16.0.2      <span class="token comment" spellcheck="true"># 将时钟同步服务器地址指向master1的地址</span>
Fudge 172.16.0.2 stratum 10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="3-所有节点启动ntp服务"><a href="#3-所有节点启动ntp服务" class="headerlink" title="3.所有节点启动ntp服务"></a>3.所有节点启动ntp服务</h5><pre class="line-numbers language-bash"><code class="language-bash">systemctl start ntpd
systemctl <span class="token function">enable</span> ntpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h5 id="4-查看服务状态"><a href="#4-查看服务状态" class="headerlink" title="4.查看服务状态"></a>4.查看服务状态</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl status ntpd</span>
● ntpd.service - Network Time Service
   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/ntpd.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: disabled<span class="token punctuation">)</span>
   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Tue 2019-09-03 06:58:01 EDT<span class="token punctuation">;</span> 29s ago
  Process: 33823 ExecStart<span class="token operator">=</span>/usr/sbin/ntpd -u ntp:ntp <span class="token variable">$OPTIONS</span> <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, status<span class="token operator">=</span>0/SUCCESS<span class="token punctuation">)</span>
 Main PID: 33824 <span class="token punctuation">(</span>ntpd<span class="token punctuation">)</span>
   CGroup: /system.slice/ntpd.service
           └─33824 /usr/sbin/ntpd -u ntp:ntp -g

Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listen and drop on<span class="token punctuation">..</span>.
Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listen normally on<span class="token punctuation">..</span>.
Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listen normally on<span class="token punctuation">..</span>.
Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listen normally on<span class="token punctuation">..</span>.
Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listen normally on<span class="token punctuation">..</span>.
Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listening on routi<span class="token punctuation">..</span>.
Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: 0.0.0.0 c016 06 re<span class="token punctuation">..</span>.
Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: 0.0.0.0 c012 02 fr<span class="token punctuation">..</span>.
Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: 0.0.0.0 c011 01 fr<span class="token punctuation">..</span>.
Sep 03 06:58:02 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: 0.0.0.0 c514 04 fr<span class="token punctuation">..</span>.
Hint: Some lines were ellipsized, use -l to show <span class="token keyword">in</span> full.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="5-查看服务状态"><a href="#5-查看服务状态" class="headerlink" title="5.查看服务状态"></a>5.查看服务状态</h5><p>master1节点</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ntpstat</span>
synchronised to local net at stratum 6 
   <span class="token function">time</span> correct to within 11 ms
   polling server every 64 s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>其他节点</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ntpstat</span>
synchronised to NTP server <span class="token punctuation">(</span>172.16.0.2<span class="token punctuation">)</span> at stratum 7 
   <span class="token function">time</span> correct to within 17 ms
   polling server every 64 s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>查看状态时有可能遇到以下情况：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node8 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ntpstat</span>
unsynchronised
  <span class="token function">time</span> server re-starting
   polling server every 8 s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>这种情况属于正常情况，ntp服务器配置完毕后，需要等待5-10分钟才能与/etc/ntp.conf中配置的标准时间进行同步。<br>等一段时间之后，再次使用<code>ntpstat</code>命令查看状态，就会变成正常结果</p>
</blockquote>
<p>master1节点</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ntpq -p</span>
     remote           refid      st t when poll reach   delay   offset  jitter
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
*LOCAL<span class="token punctuation">(</span>0<span class="token punctuation">)</span>        .LOCL.           5 l    9   64  377    0.000    0.000   0.000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>其他节点</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ntpq -p</span>
     remote           refid      st t when poll reach   delay   offset  jitter
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
*master1.hming.org LOCAL<span class="token punctuation">(</span>0<span class="token punctuation">)</span>         6 u   31   64  377    0.160   -3.417   1.363<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="6-注意事项"><a href="#6-注意事项" class="headerlink" title="6.注意事项"></a>6.注意事项</h5><p>安装集群完成后可能会报错：</p>
<blockquote>
<p><strong>不良 : 无法找到主机的 NTP 服务，或该服务未响应时钟偏差请求。</strong></p>
</blockquote>
<p>因为Centos7.2之后默认使用<code>chrony</code>来进行时钟同步，所以如果系统中安装有<code>chrony</code>或者正在运行，要么把<code>ntp</code>换成<code>chrony</code>，要么彻底删除<code>chrony</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y remove chrony </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="下载离线包"><a href="#下载离线包" class="headerlink" title="下载离线包"></a>下载离线包</h4><p>官网下载地址合集（当其他地址失效时尝试通过该链接找到最新下载地址）：<br><a href="https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_version_packaging_download.html" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_version_packaging_download.html</a></p>
<h5 id="Cloudera-Manager安装包"><a href="#Cloudera-Manager安装包" class="headerlink" title="Cloudera Manager安装包"></a>Cloudera Manager安装包</h5><p>到官网下载rpm包：<a href="https://archive.cloudera.com/cm6/6.3.0/redhat7/yum/RPMS/x86_64/" target="_blank" rel="noopener">https://archive.cloudera.com/cm6/6.3.0/redhat7/yum/RPMS/x86_64/</a><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/cm%E5%8C%85%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80.png" alt=""><br>下载allkeys文件：<a href="https://archive.cloudera.com/cm6/6.3.0/" target="_blank" rel="noopener">https://archive.cloudera.com/cm6/6.3.0/</a><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/allkeys%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80.png" alt=""></p>
<h5 id="CDH安装包"><a href="#CDH安装包" class="headerlink" title="CDH安装包"></a>CDH安装包</h5><p>官方有两种离线包可供选择：</p>
<ol>
<li><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_create_local_parcel_repo.html" target="_blank" rel="noopener">Parcel模式（推荐）</a>（本文使用模式）</li>
<li><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_create_local_package_repo.html" target="_blank" rel="noopener">Package模式</a><br><del>到官网下载parcel包：<a href="https://archive.cloudera.com/cdh6/6.3.0/parcels/" target="_blank" rel="noopener">https://archive.cloudera.com/cdh6/6.3.0/parcels/</a></del><br>下载图中框选的三个文件<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/cdh%E5%8C%85%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80.png" alt=""></li>
</ol>
<blockquote>
<p>此条消息2020-3-11更新<br>6.3.0parcel包已经被官网下架了，可以去<a href="https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_version_packaging_download.html" target="_blank" rel="noopener">官网下载地址合集</a>找其他版本parcel下载</p>
</blockquote>
<h5 id="其他parcel包（可选）"><a href="#其他parcel包（可选）" class="headerlink" title="其他parcel包（可选）"></a>其他parcel包（可选）</h5><p>YCSB：<a href="http://archive.cloudera.com/cloudera-labs/ycsb/parcels/latest/" target="_blank" rel="noopener">http://archive.cloudera.com/cloudera-labs/ycsb/parcels/latest/</a><br>Phoenix：<a href="http://archive.cloudera.com/cloudera-labs/phoenix/parcels/latest/" target="_blank" rel="noopener">http://archive.cloudera.com/cloudera-labs/phoenix/parcels/latest/</a><br>kafka: <a href="http://archive.cloudera.com/cloudera-labs/kafka/parcels/latest/" target="_blank" rel="noopener">http://archive.cloudera.com/cloudera-labs/kafka/parcels/latest/</a><br>csds: <a href="http://archive.cloudera.com/cloudera-labs/csds/" target="_blank" rel="noopener">http://archive.cloudera.com/cloudera-labs/csds/</a><br>ktrace: <a href="http://archive.cloudera.com/cloudera-labs/htrace/parcels/latest/" target="_blank" rel="noopener">http://archive.cloudera.com/cloudera-labs/htrace/parcels/latest/</a></p>
<h4 id="安装httpd服务（Apache服务，任意一个管理节点安装即可）"><a href="#安装httpd服务（Apache服务，任意一个管理节点安装即可）" class="headerlink" title="安装httpd服务（Apache服务，任意一个管理节点安装即可）"></a>安装httpd服务（Apache服务，任意一个管理节点安装即可）</h4><blockquote>
<p>注意：selinux未关闭可能导致Apache服务地址403。</p>
</blockquote>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install httpd</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>修改<code>/etc/httpd/conf/httpd.conf</code>配置文件，找到如下行，增加<code>.parcel</code>使其支持parcel格式文件</p>
<pre class="line-numbers language-config"><code class="language-config">...
AddType application/x-compress .Z
AddType application/x-gzip .gz .tgz .parcel
...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>启动服务</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service httpd restart</span>
Redirecting to /bin/systemctl restart httpd.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>浏览器访问服务器80端口，查看httpd服务是否开启。</p>
<blockquote>
<p>注意：配置信息如端口、映射路径可以通过编辑<code>/etc/httpd/conf/httpd.conf</code>文件进行修改</p>
</blockquote>
<h4 id="配置本地yum源"><a href="#配置本地yum源" class="headerlink" title="配置本地yum源"></a>配置本地yum源</h4><p>httpd默认路径为：<code>/var/www/html/</code></p>
<blockquote>
<p>如果httpd映射路径修改过，则以修改后的为准。</p>
</blockquote>
<h5 id="Cloudera-Manager"><a href="#Cloudera-Manager" class="headerlink" title="Cloudera Manager"></a>Cloudera Manager</h5><p>将下载的所有cm rpm包和allkeys文件一起<a href="http://blog.hming.org/2019/03/29/linux-zhi-zuo-chi-xian-yum-yuan/">制作离线yum源</a><br>将离线yum源放到httpd服务路径中，方便其他节点访问</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node10 cm6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>
/var/www/html/cloudera-repos/cm6.3.0
<span class="token punctuation">[</span>root@node10 cm6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -l</span>
total 1378004
-rw-r--r-- 1 root root      14041 Aug  1 00:08 allkeys.asc
-rw-r--r-- 1 root root   10479136 Aug 16 16:26 cloudera-manager-agent-6.3.0-1281944.el7.x86_64.rpm
-rw-r--r-- 1 root root 1201341068 Aug 16 16:26 cloudera-manager-daemons-6.3.0-1281944.el7.x86_64.rpm
-rw-r--r-- 1 root root      11464 Aug 16 16:26 cloudera-manager-server-6.3.0-1281944.el7.x86_64.rpm
-rw-r--r-- 1 root root      10996 Aug 16 16:26 cloudera-manager-server-db-2-6.3.0-1281944.el7.x86_64.rpm
-rw-r--r-- 1 root root   14209884 Aug 16 16:26 enterprise-debuginfo-6.3.0-1281944.el7.x86_64.rpm
-rw-r--r-- 1 root root  184988341 Aug 16 16:26 oracle-j2sdk1.8-1.8.0+update181-1.x86_64.rpm
drwxr-xr-x 2 root root       4096 Aug 20 14:48 repodata
<span class="token punctuation">[</span>root@node10 cm6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="CDH其他parcel包"><a href="#CDH其他parcel包" class="headerlink" title="CDH其他parcel包"></a>CDH其他parcel包</h5><p>将parcel包移到httpd服务路径</p>
<p>创建<code>/var/www/html//cloudera-repos/cdh6.3.0/</code>目录，将parcel包放到该目录中</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh cdh6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>
/var/www/html/cloudera-repos/cdh6.3.0
<span class="token punctuation">[</span>root@cdh cdh6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -l</span>
total 2036848
-rw-r--r-- 1 root root 2085690155 Aug 16 16:25 CDH-6.3.0-1.cdh6.3.0.p0.1279813-el7.parcel
-rw-r--r-- 1 root root         40 Aug 16 16:25 CDH-6.3.0-1.cdh6.3.0.p0.1279813-el7.parcel.sha1
-rw-r--r-- 1 root root      33887 Aug 16 16:25 manifest.json
<span class="token punctuation">[</span>root@cdh cdh6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="安装并配置元数据库"><a href="#安装并配置元数据库" class="headerlink" title="安装并配置元数据库"></a>安装并配置元数据库</h4><p>可以选择MySQL或者Mariadb</p>
<h5 id="安装Mariadb"><a href="#安装Mariadb" class="headerlink" title="安装Mariadb"></a>安装Mariadb</h5><p>参考<a href="https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/install_cm_mariadb.html" target="_blank" rel="noopener">官网</a></p>
<ol>
<li>安装server</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash">yum -y <span class="token function">install</span> mariadb-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="2">
<li>修改配置文件<code>/etc/my.cnf</code>为以下内容</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
datadir<span class="token operator">=</span>/var/lib/mysql
socket<span class="token operator">=</span>/var/lib/mysql/mysql.sock
transaction-isolation <span class="token operator">=</span> READ-COMMITTED
<span class="token comment" spellcheck="true"># Disabling symbolic-links is recommended to prevent assorted security risks;</span>
<span class="token comment" spellcheck="true"># to do so, uncomment this line:</span>
symbolic-links <span class="token operator">=</span> 0
<span class="token comment" spellcheck="true"># Settings user and group are ignored when systemd is used.</span>
<span class="token comment" spellcheck="true"># If you need to run mysqld under a different user or group,</span>
<span class="token comment" spellcheck="true"># customize your systemd unit file for mariadb according to the</span>
<span class="token comment" spellcheck="true"># instructions in http://fedoraproject.org/wiki/Systemd</span>

key_buffer <span class="token operator">=</span> 16M
key_buffer_size <span class="token operator">=</span> 32M
max_allowed_packet <span class="token operator">=</span> 32M
thread_stack <span class="token operator">=</span> 256K
thread_cache_size <span class="token operator">=</span> 64
query_cache_limit <span class="token operator">=</span> 8M
query_cache_size <span class="token operator">=</span> 64M
query_cache_type <span class="token operator">=</span> 1

max_connections <span class="token operator">=</span> 550
<span class="token comment" spellcheck="true">#expire_logs_days = 10</span>
<span class="token comment" spellcheck="true">#max_binlog_size = 100M</span>

<span class="token comment" spellcheck="true">#log_bin should be on a disk with enough free space.</span>
<span class="token comment" spellcheck="true">#Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your</span>
<span class="token comment" spellcheck="true">#system and chown the specified folder to the mysql user.</span>
<span class="token comment" spellcheck="true">#建议单独磁盘装binlog，并且修改目录拥有者为mysql</span>
log_bin<span class="token operator">=</span>/var/lib/mysql/mysql_binary_log
<span class="token comment" spellcheck="true">#日志超过3天自动过期</span>
expire_logs_days <span class="token operator">=</span> 3

<span class="token comment" spellcheck="true">#In later versions of MariaDB, if you enable the binary log and do not set</span>
<span class="token comment" spellcheck="true">#a server_id, MariaDB will not start. The server_id must be unique within</span>
<span class="token comment" spellcheck="true">#the replicating group.</span>
server_id<span class="token operator">=</span>1

binlog_format <span class="token operator">=</span> mixed

read_buffer_size <span class="token operator">=</span> 2M
read_rnd_buffer_size <span class="token operator">=</span> 16M
sort_buffer_size <span class="token operator">=</span> 8M
join_buffer_size <span class="token operator">=</span> 8M

<span class="token comment" spellcheck="true"># InnoDB settings</span>
innodb_file_per_table <span class="token operator">=</span> 1
innodb_flush_log_at_trx_commit  <span class="token operator">=</span> 2
innodb_log_buffer_size <span class="token operator">=</span> 64M
innodb_buffer_pool_size <span class="token operator">=</span> 4G <span class="token comment" spellcheck="true">#内存大小根据实际情况调整，该值超过物理内存会导致Mariadb无法启动</span>
innodb_thread_concurrency <span class="token operator">=</span> 8
innodb_flush_method <span class="token operator">=</span> O_DIRECT
innodb_log_file_size <span class="token operator">=</span> 512M

<span class="token punctuation">[</span>mysqld_safe<span class="token punctuation">]</span>
log-error<span class="token operator">=</span>/var/log/mariadb/mariadb.log
pid-file<span class="token operator">=</span>/var/run/mariadb/mariadb.pid

<span class="token comment" spellcheck="true">#</span>
<span class="token comment" spellcheck="true"># include all files from the config directory</span>
<span class="token comment" spellcheck="true">#</span>
<span class="token operator">!</span>includedir /etc/my.cnf.d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>启动Mariadb，并加入开机自启动</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash">systemctl start mariadb
systemctl <span class="token function">enable</span> mariadb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="4">
<li>初始化Mariadb</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh cdh6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql_secure_installation</span>
<span class="token punctuation">..</span>.
Enter current password <span class="token keyword">for</span> root <span class="token punctuation">(</span>enter <span class="token keyword">for</span> none<span class="token punctuation">)</span>: <span class="token comment" spellcheck="true">#第一次直接回车</span>
OK, successfully used password, moving on<span class="token punctuation">..</span>.
<span class="token punctuation">..</span>.
Set root password? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y
New password: <span class="token comment" spellcheck="true"># 设置root密码</span>
Re-enter new password: 
<span class="token punctuation">..</span>.
Remove anonymous users? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y
<span class="token punctuation">..</span>.
Disallow root login remotely? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> N
<span class="token punctuation">..</span>.
Remove <span class="token function">test</span> database and access to it <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y
<span class="token punctuation">..</span>.
Reload privilege tables now? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y
<span class="token punctuation">..</span>.
All done<span class="token operator">!</span>  If you've completed all of the above steps, your MariaDB
installation should now be secure.

Thanks <span class="token keyword">for</span> using MariaDB<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h5><p>离线安装MySQL教程点击<a href="http://blog.hming.org/2018/12/08/centos7-xia-chi-xian-an-zhuang-mysql/">这里</a></p>
<blockquote>
<p>注意安装mysql时需要安装mysql-community-libs-compat-5.7.24-1.el7.x86_64.rpm包，不然安装cm server时会报错：<br>Requires: libmysqlclient.so.18()(64bit)</p>
</blockquote>
<p>参考<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_mysql.html" target="_blank" rel="noopener">官网</a>，修改<code>/etc/my.cnf</code>配置文件，重启mysql服务</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
datadir<span class="token operator">=</span>/var/lib/mysql
socket<span class="token operator">=</span>/var/lib/mysql/mysql.sock
transaction-isolation <span class="token operator">=</span> READ-COMMITTED
<span class="token comment" spellcheck="true"># Disabling symbolic-links is recommended to prevent assorted security risks;</span>
<span class="token comment" spellcheck="true"># to do so, uncomment this line:</span>
symbolic-links <span class="token operator">=</span> 0

key_buffer_size <span class="token operator">=</span> 32M
max_allowed_packet <span class="token operator">=</span> 32M
thread_stack <span class="token operator">=</span> 256K
thread_cache_size <span class="token operator">=</span> 64
query_cache_limit <span class="token operator">=</span> 8M
query_cache_size <span class="token operator">=</span> 64M
query_cache_type <span class="token operator">=</span> 1

max_connections <span class="token operator">=</span> 550
<span class="token comment" spellcheck="true">#expire_logs_days = 10</span>
<span class="token comment" spellcheck="true">#max_binlog_size = 100M</span>

<span class="token comment" spellcheck="true">#log_bin should be on a disk with enough free space.</span>
<span class="token comment" spellcheck="true">#Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your</span>
<span class="token comment" spellcheck="true">#system and chown the specified folder to the mysql user.</span>
<span class="token comment" spellcheck="true">#建议单独磁盘装binlog，并且修改目录拥有者为mysql</span>
log_bin<span class="token operator">=</span>/var/lib/mysql/mysql_binary_log
<span class="token comment" spellcheck="true">#日志超过3天自动过期</span>
expire_logs_days <span class="token operator">=</span> 3

<span class="token comment" spellcheck="true">#In later versions of MySQL, if you enable the binary log and do not set</span>
<span class="token comment" spellcheck="true">#a server_id, MySQL will not start. The server_id must be unique within</span>
<span class="token comment" spellcheck="true">#the replicating group.</span>
server_id<span class="token operator">=</span>1

binlog_format <span class="token operator">=</span> mixed

read_buffer_size <span class="token operator">=</span> 2M
read_rnd_buffer_size <span class="token operator">=</span> 16M
sort_buffer_size <span class="token operator">=</span> 8M
join_buffer_size <span class="token operator">=</span> 8M

<span class="token comment" spellcheck="true"># InnoDB settings</span>
innodb_file_per_table <span class="token operator">=</span> 1
innodb_flush_log_at_trx_commit  <span class="token operator">=</span> 2
innodb_log_buffer_size <span class="token operator">=</span> 64M
innodb_buffer_pool_size <span class="token operator">=</span> 4G <span class="token comment" spellcheck="true">#内存大小根据实际情况调整，该值超过物理内存会导致MySQL无法启动</span>
innodb_thread_concurrency <span class="token operator">=</span> 8
innodb_flush_method <span class="token operator">=</span> O_DIRECT
innodb_log_file_size <span class="token operator">=</span> 512M

<span class="token punctuation">[</span>mysqld_safe<span class="token punctuation">]</span>
log-error<span class="token operator">=</span>/var/log/mysqld.log
pid-file<span class="token operator">=</span>/var/run/mysqld/mysqld.pid

sql_mode<span class="token operator">=</span>STRICT_ALL_TABLES<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="配置组件数据库"><a href="#配置组件数据库" class="headerlink" title="配置组件数据库"></a>配置组件数据库</h5><p>新建各组件数据库，为后续安装做准备（这里可以根据安装的组件进行选择创建，其中密码<code>'1234'</code>建议设置为自己的密码）</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> scm <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">DEFAULT</span> <span class="token keyword">COLLATE</span> utf8_general_ci<span class="token punctuation">;</span>
<span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">ON</span> scm<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">'scm'</span>@'<span class="token operator">%</span><span class="token string">' IDENTIFIED BY '</span><span class="token number">1234</span><span class="token string">';

CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON hue.* TO '</span>hue<span class="token string">'@'</span><span class="token operator">%</span><span class="token string">' IDENTIFIED BY '</span><span class="token number">1234</span><span class="token string">';

CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON metastore.* TO '</span>metastore<span class="token string">'@'</span><span class="token operator">%</span><span class="token string">' IDENTIFIED BY '</span><span class="token number">1234</span><span class="token string">';

CREATE DATABASE sentry DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON sentry.* TO '</span>sentry<span class="token string">'@'</span><span class="token operator">%</span><span class="token string">' IDENTIFIED BY '</span><span class="token number">1234</span><span class="token string">';

CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON oozie.* TO '</span>oozie<span class="token string">'@'</span><span class="token operator">%</span><span class="token string">' IDENTIFIED BY '</span><span class="token number">1234</span>'<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="配置连接jar包"><a href="#配置连接jar包" class="headerlink" title="配置连接jar包"></a>配置连接jar包</h5><p>上传mysql连接包到<code>/usr/share/java/</code>目录下（如果没有则创建一个），改名为：<code>mysql-connector-java.jar</code></p>
<blockquote>
<p><strong>注意：需要连接MySQL数据库的节点都需要上传连接包</strong></p>
</blockquote>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh java<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>
/usr/share/java
<span class="token punctuation">[</span>root@cdh java<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
mysql-connector-java-5.1.47.jar
<span class="token punctuation">[</span>root@cdh java<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mv mysql-connector-java-5.1.47.jar mysql-connector-java.jar </span>
<span class="token punctuation">[</span>root@cdh java<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
mysql-connector-java.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h4><blockquote>
<p>安装cloudera manager节点<code>必须安装</code>，其他节点现在可以不安装，在进行CDH安装时还可以安装</p>
</blockquote>
<p>由于我们下载的cloudera cm包中有jdk并且配置好了yum离线源，所以直接用yum安装官方推荐的jdk（<code>前提是已经配置了yum离线源的repo仓库地址</code>）<br>安装后的jdk目录为：<code>/usr/java/jdk1.8.0_181-cloudera</code>，如有需要，可以自行配置环境变量</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh java<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install oracle-j2sdk1.8</span>
Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
 * base: mirrors.aliyun.com
 * extras: mirrors.aliyun.com
 * updates: mirrors.aliyun.com
Resolving Dependencies
--<span class="token operator">></span> Running transaction check
---<span class="token operator">></span> Package oracle-j2sdk1.8.x86_64 0:1.8.0+update181-1 will be installed
--<span class="token operator">></span> Finished Dependency Resolution

Dependencies Resolved

<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
 Package                                          Arch                                    Version                                            Repository                           Size
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
Installing:
 oracle-j2sdk1.8                                  x86_64                                  1.8.0+update181-1                                  cm                                  176 M

Transaction Summary
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
Install  1 Package

Total download size: 176 M
Installed size: 364 M
Downloading packages:
oracle-j2sdk1.8-1.8.0+update181-1.x86_64.rpm                                                                                                                    <span class="token operator">|</span> 176 MB  00:00:05     
Running transaction check
Running transaction <span class="token function">test</span>
Transaction <span class="token function">test</span> succeeded
Running transaction
  Installing <span class="token keyword">:</span> oracle-j2sdk1.8-1.8.0+update181-1.x86_64                                                                                                                            1/1 
  Verifying  <span class="token keyword">:</span> oracle-j2sdk1.8-1.8.0+update181-1.x86_64                                                                                                                            1/1 

Installed:
  oracle-j2sdk1.8.x86_64 0:1.8.0+update181-1                                                                                                                                           
Complete<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="安装Cloudera-Manager"><a href="#安装Cloudera-Manager" class="headerlink" title="安装Cloudera Manager"></a>安装Cloudera Manager</h3><p>可以不用手动安装cloudera-manager-daemons，安装server或者agent时会自动安装daemons</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install cloudera-manager-daemons cloudera-manager-agent cloudera-manager-server</span>
Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
 * base: mirrors.aliyun.com
 * extras: mirrors.aliyun.com
 * updates: mirrors.aliyun.com
<span class="token punctuation">..</span>.
Complete<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p><strong>安装agent时可能遇到的问题：</strong><br>如果不是纯净的Centos镜像包（经过修改或升级）安装的操作系统，则可能遇到以下问题：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install cloudera-manager-agent</span>
<span class="token punctuation">..</span>.
Error: Package: krb5-devel-1.15.1-34.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>
           Requires: krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-34.el7
           Installed: krb5-libs-1.15.1-37.el7_6.x86_64 <span class="token punctuation">(</span>@updates<span class="token punctuation">)</span>
               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-37.el7_6
           Available: krb5-libs-1.15.1-18.el7.x86_64 <span class="token punctuation">(</span>iso<span class="token punctuation">)</span>
               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-18.el7
           Available: krb5-libs-1.15.1-34.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>
               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-34.el7
Error: Package: 1:openssl-devel-1.0.2k-16.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>
           Requires: openssl-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1:1.0.2k-16.el7
           Installed: 1:openssl-libs-1.0.2k-16.el7_6.1.x86_64 <span class="token punctuation">(</span>@updates<span class="token punctuation">)</span>
               openssl-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1:1.0.2k-16.el7_6.1
           Available: 1:openssl-libs-1.0.2k-12.el7.x86_64 <span class="token punctuation">(</span>iso<span class="token punctuation">)</span>
               openssl-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1:1.0.2k-12.el7
           Available: 1:openssl-libs-1.0.2k-16.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>
               openssl-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1:1.0.2k-16.el7
Error: Package: 32:bind-libs-9.9.4-72.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>
           Requires: bind-license <span class="token operator">=</span> 32:9.9.4-72.el7
           Installed: 32:bind-license-9.9.4-74.el7_6.1.noarch <span class="token punctuation">(</span>@updates<span class="token punctuation">)</span>
               bind-license <span class="token operator">=</span> 32:9.9.4-74.el7_6.1
           Available: 32:bind-license-9.9.4-61.el7.noarch <span class="token punctuation">(</span>iso<span class="token punctuation">)</span>
               bind-license <span class="token operator">=</span> 32:9.9.4-61.el7
           Available: 32:bind-license-9.9.4-72.el7.noarch <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>
               bind-license <span class="token operator">=</span> 32:9.9.4-72.el7
Error: Package: libkadm5-1.15.1-34.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>
           Requires: krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-34.el7
           Installed: krb5-libs-1.15.1-37.el7_6.x86_64 <span class="token punctuation">(</span>@updates<span class="token punctuation">)</span>
               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-37.el7_6
           Available: krb5-libs-1.15.1-18.el7.x86_64 <span class="token punctuation">(</span>iso<span class="token punctuation">)</span>
               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-18.el7
           Available: krb5-libs-1.15.1-34.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>
               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-34.el7
 You could try using --skip-broken to work around the problem
 You could try running: rpm -Va --nofiles --nodigest
<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>根据提示可以看处是yum依赖包冲突，已经安装了更高的版本，解决方法是对相关rpm包降级。<br>以下解决krb5-devel包的冲突，其他包操作步骤类似：<br>根据保存提示可以知道，krb5-devel依赖的krb5-libs包需要的版本为34，但是已经安装了37版本，高于要求的版本<br>1)搜索目前可用的版本</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum search --showduplicates krb5-libs</span>
Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> N/S matched: krb5-libs <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
krb5-libs-1.15.1-18.el7.i686 <span class="token keyword">:</span> The non-admin shared libraries used by Kerberos 5
krb5-libs-1.15.1-18.el7.x86_64 <span class="token keyword">:</span> The non-admin shared libraries used by Kerberos 5
krb5-libs-1.15.1-34.el7.i686 <span class="token keyword">:</span> The non-admin shared libraries used by Kerberos 5
krb5-libs-1.15.1-34.el7.x86_64 <span class="token keyword">:</span> The non-admin shared libraries used by Kerberos 5
krb5-libs-1.15.1-37.el7_6.x86_64 <span class="token keyword">:</span> The non-admin shared libraries used by Kerberos 5

  Name and summary matches only, use <span class="token string">"search all"</span> <span class="token keyword">for</span> everything.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>2)将包降级为34版本</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y downgrade krb5-libs-1.15.1-34.el7.x86_64</span>
<span class="token punctuation">..</span>.
Removed:
  krb5-libs.x86_64 0:1.15.1-37.el7_6                  

Installed:
  krb5-libs.x86_64 0:1.15.1-34.el7                 

Complete<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注：如果降级还是报冲突错误，则可以将包卸载后重新安装：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#查看已安装版本</span>
rpm -qa <span class="token operator">|</span> <span class="token function">grep</span> bind-libs
<span class="token comment" spellcheck="true">#卸载已安装版本</span>
rpm -e --nodeps <span class="token punctuation">[</span>完整包名<span class="token punctuation">]</span>
<span class="token comment" spellcheck="true">#安装需要的版本</span>
rpm -ivh <span class="token punctuation">[</span>需要安装的rpm包rpm文件<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</blockquote>
<h3 id="初始化Cloudera-Manager数据库"><a href="#初始化Cloudera-Manager数据库" class="headerlink" title="初始化Cloudera Manager数据库"></a>初始化Cloudera Manager数据库</h3><p>参照官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/prepare_cm_database.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/prepare_cm_database.html</a><br>由于我们MySQL是安装在本地，所以直接执行</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm</span>
Enter SCM password:  <span class="token comment" spellcheck="true"># 输入创建数据库时的密码</span>
JAVA_HOME<span class="token operator">=</span>/usr/java/jdk1.8.0_181-cloudera
Verifying that we can <span class="token function">write</span> to /etc/cloudera-scm-server
Creating SCM configuration <span class="token function">file</span> <span class="token keyword">in</span> /etc/cloudera-scm-server
Executing:  /usr/java/jdk1.8.0_181-cloudera/bin/java -cp /usr/share/java/mysql-connector-java.jar:/usr/share/java/oracle-connector-java.jar:/usr/share/java/postgresql-connector-java.jar:/opt/cloudera/cm/schema/<span class="token punctuation">..</span>/lib/* com.cloudera.enterprise.dbutil.DbCommandExecutor /etc/cloudera-scm-server/db.properties com.cloudera.cmf.db.
Tue Aug 20 02:09:39 EDT 2019 WARN: Establishing SSL connection without server<span class="token string">'s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn'</span>t set. For compliance with existing applications not using SSL the verifyServerCertificate property is <span class="token keyword">set</span> to <span class="token string">'false'</span><span class="token keyword">.</span> You need either to explicitly disable SSL by setting useSSL<span class="token operator">=</span>false, or <span class="token keyword">set</span> useSSL<span class="token operator">=</span>true and provide truststore <span class="token keyword">for</span> server certificate verification.
<span class="token punctuation">[</span>                          main<span class="token punctuation">]</span> DbCommandExecutor              INFO  Successfully connected to database.
All done, your SCM database is configured correctly<span class="token operator">!</span>
<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>如果mysql是安装在其他节点（例如：db01.example.com节点），则运行：<br><code>/opt/cloudera/cm/schema/scm_prepare_database.sh mysql -h db01.example.com --scm-host cm01.example.com scm scm</code></p>
</blockquote>
<h3 id="启动Cloudera-Manager-Server"><a href="#启动Cloudera-Manager-Server" class="headerlink" title="启动Cloudera Manager Server"></a>启动Cloudera Manager Server</h3><p>输入以下命令启动Server</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start cloudera-scm-server</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>使用<code>tail</code>命令查看运行日志，当出现<code>Started Jetty server.</code>字眼时表示启动成功</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log</span>
2019-08-20 02:13:30,437 INFO main:org.kie.api.internal.utils.ServiceDiscoveryImpl: Loading kie.conf from  jar:file:/opt/cloudera/cm/common_jars/kie-internal-7.13.0.Final.11622bc00754050ffd86f282138da203.jar<span class="token operator">!</span>/META-INF/kie.conf <span class="token keyword">in</span> classloader sun.misc.Launcher<span class="token variable">$AppClassLoader@67f89fa3</span>
2019-08-20 02:13:30,438 INFO main:org.kie.api.internal.utils.ServiceDiscoveryImpl: Adding Service org.kie.internal.services.KieAssemblersImpl
<span class="token punctuation">..</span>.
2019-08-20 02:15:58,334 INFO WebServerImpl:org.eclipse.jetty.server.AbstractConnector: Started ServerConnector@179933a5<span class="token punctuation">{</span>HTTP/1.1,<span class="token punctuation">[</span>http/1.1<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span>0.0.0.0:7180<span class="token punctuation">}</span>
2019-08-20 02:15:58,350 INFO WebServerImpl:org.eclipse.jetty.server.Server: Started @193290ms
2019-08-20 02:15:58,350 INFO WebServerImpl:com.cloudera.server.cmf.WebServerImpl: Started Jetty server.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="浏览器访问7180端口，进行CDH安装"><a href="#浏览器访问7180端口，进行CDH安装" class="headerlink" title="浏览器访问7180端口，进行CDH安装"></a>浏览器访问7180端口，进行CDH安装</h3><p>Cloudera Manager会根据浏览器的语言进行语言的切换，本文为中文<br>初始用户名和密码均为：<code>admin</code><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/cm%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2.png" alt=""><br>登录后看到第一个欢迎页面，点击继续<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E6%AC%A2%E8%BF%8E%E9%A1%B5%E9%9D%A21.png" alt=""><br>接受许可条款<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E6%8E%A5%E5%8F%97%E8%AE%B8%E5%8F%AF%E6%9D%A1%E6%AC%BE.png" alt=""><br>选择安装版本，这里选择免费版<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E9%80%89%E6%8B%A9%E5%AE%89%E8%A3%85%E5%85%8D%E8%B4%B9%E7%89%88.png" alt=""></p>
<p>进入第二个欢迎页面，左边列出了安装的步骤<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E6%AC%A2%E8%BF%8E%E9%A1%B5%E9%9D%A22.png" alt=""><br>输入集群名称，本文默认<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E8%BE%93%E5%85%A5%E9%9B%86%E7%BE%A4%E5%90%8D%E7%A7%B0.png" alt=""><br>输入主机名后进行搜索<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E8%BE%93%E5%85%A5%E4%B8%BB%E6%9C%BA%E5%90%8D.png" alt=""><br>配置cloudera manager yum离线库地址，点击更多选项<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E9%85%8D%E7%BD%AEcm%E5%BA%93%E5%9C%B0%E5%9D%80.png" alt=""><br>配置parcel库地址，前两个选项默认就行，远程Parcel库删除默认的地址，输入httpd服务的Parcel库地址，点击保存更改<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E9%85%8D%E7%BD%AEparcel%E5%BA%93%E5%9C%B0%E5%9D%80.png" alt=""><br>保存后会自动搜索Parcel包，如图，已经搜索到了之前下载的CDH6.3.0包，点击继续<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E8%87%AA%E5%8A%A8%E6%90%9C%E7%B4%A2%E6%9C%AC%E5%9C%B0parcel%E5%8C%85.png" alt=""><br>如果之前只安装了cm server节点的jdk，则需要勾选上，如果每个节点都安装了jdk就不需要勾选<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85jdk.png" alt=""><br>配置ssh，如果主机的密码不相同，则需要选择使用秘钥的形式，如果密码相同，直接输入密码即可<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/ssh%E9%85%8D%E7%BD%AE.png" alt=""><br>安装cloudera agent（安装过程中遇到问题可以根据提示进行解决），点击继续<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85agent1.png" alt=""><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85agent2.png" alt=""><br>开始自动安装Parcel包，由于需要拷贝到相应节点然后解压，所以时间消耗比较久，耐心等待完成<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85parcel.png" alt=""><br>进行集群检测，包括网络检测和节点其他检测，如果检测有问题可以按照提示进行修复<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E9%9B%86%E7%BE%A4%E6%A3%80%E6%B5%8B1.png" alt=""><br>建议完全通过检测后再点击继续<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E9%9B%86%E7%BE%A4%E6%A3%80%E6%B5%8B2.png" alt=""></p>
<blockquote>
<p>如果只有一个节点，网络检测不会通过<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%8D%95%E8%8A%82%E7%82%B9%E4%B8%8D%E6%94%AF%E6%8C%81%E7%BD%91%E7%BB%9C%E6%A3%80%E6%B5%8B.png" alt=""></p>
</blockquote>
<p>开始安装组件服务，可以选择官方的配置方案，也可以选择自定义<br>本文选择自定义服务，先安装HDFS和Zookeeper<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B61.png" alt=""><br>按照之前的<strong>组件角色分配规划</strong>，选择组件相应服务安装的节点<br>官网组件服务分配参考：<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_host_allocations.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_host_allocations.html</a><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B62.png" alt=""><br>选择组件初始化配置，比如选择HDFS DataNode储存目录等<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B63.png" alt=""><br>点击继续后就会开始安装组件，等待安装完成<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B64.png" alt=""><br>最后一步，没有问题直接点完成即可<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B65.png" alt=""></p>
<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><h4 id="无法复制安装文件allkeys-asc"><a href="#无法复制安装文件allkeys-asc" class="headerlink" title="无法复制安装文件allkeys.asc"></a>无法复制安装文件allkeys.asc</h4><p><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%EF%BC%9A%E6%97%A0%E6%B3%95%E5%A4%8D%E5%88%B6%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6allkeys.png" alt=""><br>因为在配置Cloudera Manager yum库时没有下载<code>allkeys.asc</code>文件<br>解决方法：<br>到官网：<a href="https://archive.cloudera.com/cm6/6.3.0/" target="_blank" rel="noopener">https://archive.cloudera.com/cm6/6.3.0/</a>下载<code>allkeys.asc</code>文件到yum离线库</p>
<h4 id="安装Parcel提示主机运行状况不良"><a href="#安装Parcel提示主机运行状况不良" class="headerlink" title="安装Parcel提示主机运行状况不良"></a>安装Parcel提示主机运行状况不良</h4><p>解决方法：<br>删除agent目录下面的cm_guid文件，并重启失败节点的agent服务恢复</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /var/lib/cloudera-scm-agent/</span>
<span class="token punctuation">[</span>root@cdh cloudera-scm-agent<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
active_parcels.json  cm_guid  response.avro  uuid
<span class="token punctuation">[</span>root@cdh cloudera-scm-agent<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rm -rf cm_guid</span>
<span class="token punctuation">[</span>root@cdh cloudera-scm-agent<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service cloudera-scm-agent restart</span>
Stopping cloudera-scm-agent: <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>
Starting cloudera-scm-agent:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="entropy-was-available（系统熵值过低）"><a href="#entropy-was-available（系统熵值过低）" class="headerlink" title="entropy was available（系统熵值过低）"></a>entropy was available（系统熵值过低）</h4><p><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%EF%BC%9Aentropy%EF%BC%88%E7%B3%BB%E7%BB%9F%E7%86%B5%E5%80%BC%EF%BC%89%E8%BF%87%E4%BD%8E.png" alt=""><br>解决方法：提高系统熵值</p>
<ol>
<li><p>查看目前熵值</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/sys/kernel/random/entropy_avail</span>
34<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>安装<code>rng-tools</code>工具</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node3 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install -y rng-tools</span>
Loaded plugins: fastestmirror
Repository base is listed <span class="token function">more</span> than once <span class="token keyword">in</span> the configuration
Repository updates is listed <span class="token function">more</span> than once <span class="token keyword">in</span> the configuration
<span class="token punctuation">..</span>.
Installed:
rng-tools.x86_64 0:6.3.1-3.el7                                                                                                                                                                                  
Complete<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>修改/新建<code>/etc/sysconfig/rngd</code>文件，增加以下内容</p>
<pre class="line-numbers language-conf"><code class="language-conf">OPTIONS="-r /dev/urandom"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>启动<code>rngd</code>服务</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service rngd start</span>
Redirecting to /bin/systemctl start rngd.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>再次查看熵值</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/sys/kernel/random/entropy_avail</span>
3081<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>CDH</tag>
        <tag>离线安装</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos7安装VNC服务</title>
    <url>/2019/08/06/centos7-an-zhuang-vnc-fu-wu/</url>
    <content><![CDATA[<h3 id="安装gnome桌面"><a href="#安装gnome桌面" class="headerlink" title="安装gnome桌面"></a>安装gnome桌面</h3><p>如果Centos7为最小化安装，则需要单独安装gnome图形化桌面</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum groupinstall -y "GNOME Desktop"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="安装vnc-server"><a href="#安装vnc-server" class="headerlink" title="安装vnc server"></a>安装vnc server</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install -y tigervnc-server</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h3><ol>
<li><p>复制一个服务设置模板，命名为<code>vncserver@:1.service</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token function">cp</span> /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>修改服务配置，</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/systemd/system/vncserver\@\:1.service</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
 Description<span class="token operator">=</span>Remote desktop <span class="token function">service</span> <span class="token punctuation">(</span>VNC<span class="token punctuation">)</span>
 After<span class="token operator">=</span>syslog.target network.target

 <span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
 Type<span class="token operator">=</span>forking
 User<span class="token operator">=</span>root   <span class="token comment" spellcheck="true">#设置登录用户为root</span>

 <span class="token comment" spellcheck="true"># Clean any existing files in /tmp/.X11-unix environment</span>
 ExecStartPre<span class="token operator">=</span>/bin/sh -c <span class="token string">'/usr/bin/vncserver -kill %i > /dev/null 2>&amp;1 || :'</span>
 <span class="token comment" spellcheck="true">#将这里的User改为root，-geometry 1920x1080选项指定连接分辨率，也可以不指定</span>
 ExecStart<span class="token operator">=</span>/usr/sbin/runuser -l root -c <span class="token string">"/usr/bin/vncserver -geometry 1920x1080 %i"</span>
 PIDFile<span class="token operator">=</span>/root/.vnc/%H%i.pid         <span class="token comment" spellcheck="true">#这里指向root根目录地址</span>
 ExecStop<span class="token operator">=</span>/bin/sh -c <span class="token string">'/usr/bin/vncserver -kill %i > /dev/null 2>&amp;1 || :'</span>

 <span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
 WantedBy<span class="token operator">=</span>multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>如果需要配置其他用户登录，则重复1,2步骤，再复制一个配置文件，修改相应用户</p>
</li>
<li><p>更新systemctl</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl daemon-reload</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<h3 id="设置VNC密码"><a href="#设置VNC密码" class="headerlink" title="设置VNC密码"></a>设置VNC密码</h3><p>VNC的密码跟系统的用户密码不一样，是使用VNC Viewer登陆时需要使用的密码</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vncpasswd</span>
Password:
Verify:
Would you like to enter a view-only password <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>? n
A view-only password is not used
<span class="token comment" spellcheck="true"># 这里不添加只读账号密码</span>
<span class="token comment" spellcheck="true"># 每个不用的系统用户，设置密码时，需要切换到该用户下，执行此命令</span>
<span class="token comment" spellcheck="true"># 如：su zhangsan  切换到zhangsan用户再执行上vncpasswd设置密码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>启动刚才配置的服务，如果配置了多个，则需要启动相应的服务</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start vncserver@:1.service</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>设置开机自启动</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable vncserver@:1.service</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>查看端口信息，VNC默认端口为<code>5901</code>，因为我启动了两个服务，所以还有一个5902端口存在</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># netstat -lnpt|grep Xvnc</span>
tcp        0      0 0.0.0.0:5901            0.0.0.0:*               LISTEN      10196/Xvnc          
tcp        0      0 0.0.0.0:5902            0.0.0.0:*               LISTEN      11394/Xvnc          
tcp        0      0 0.0.0.0:6001            0.0.0.0:*               LISTEN      10196/Xvnc          
tcp        0      0 0.0.0.0:6002            0.0.0.0:*               LISTEN      11394/Xvnc          
tcp6       0      0 :::5901                 :::*                    LISTEN      10196/Xvnc          
tcp6       0      0 :::5902                 :::*                    LISTEN      11394/Xvnc          
tcp6       0      0 :::6001                 :::*                    LISTEN      10196/Xvnc          
tcp6       0      0 :::6002                 :::*                    LISTEN      11394/Xvnc          <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="配置防火墙，开通端口"><a href="#配置防火墙，开通端口" class="headerlink" title="配置防火墙，开通端口"></a>配置防火墙，开通端口</h3><p>如果没有开启防火墙，则这一步可以跳过<br>根据监听的端口，进行端口开放，每个用户会对应一个端口，第一个用户默认为<code>5901</code>端口，如果配置多个，则需要开放相应端口</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --add-port=5901/tcp --permanent</span>
<span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --reload</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="Windows安装VNC，连接Centos远程桌面"><a href="#Windows安装VNC，连接Centos远程桌面" class="headerlink" title="Windows安装VNC，连接Centos远程桌面"></a>Windows安装VNC，连接Centos远程桌面</h3><ol>
<li>到官方下载地址：<a href="https://www.realvnc.com/en/connect/download/viewer/" target="_blank" rel="noopener">https://www.realvnc.com/en/connect/download/viewer/</a>选择对应版本下载客户端</li>
<li>新建连接中VNC Server输入<code>IP地址:1</code>，输入密码即可连接成功</li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>VNC Viewer</tag>
      </tags>
  </entry>
  <entry>
    <title>HDP与CDH对比</title>
    <url>/2019/07/03/hdp-yu-cdh-dui-bi/</url>
    <content><![CDATA[<h3 id="HDP与CDH的对比"><a href="#HDP与CDH的对比" class="headerlink" title="HDP与CDH的对比"></a>HDP与CDH的对比</h3><h4 id="版本更新对比"><a href="#版本更新对比" class="headerlink" title="版本更新对比"></a>版本更新对比</h4><p>HDP版本更新较快，因为Hortonworks内部大部分员工都是apache代码贡献者，尤其是Hadoop 2.0的贡献者。</p>
<p>CDH版本更新比Apache版本慢。</p>
<p>目前Apache社区Hadoop最新版本：3.2.0</p>
<p>目前CDH最新版支持Hadoop版本：3.0.0</p>
<p>目前HDP最新版支持Hadoop版本：3.1.1</p>
<h4 id="支持主流组件版本对比"><a href="#支持主流组件版本对比" class="headerlink" title="支持主流组件版本对比"></a>支持主流组件版本对比</h4><p>参考官网：<br><a href="https://docs.cloudera.com/HDPDocuments/HDP3/HDP-3.1.4/release-notes/content/comp_versions.html" target="_blank" rel="noopener">HDP3.1.4组件版本</a><br><a href="https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_cdh_63_packaging.html#concept_rtm_b5p_m3b" target="_blank" rel="noopener">CDH6.3.0组件版本</a></p>
<table>
<thead>
<tr>
<th align="left">组件</th>
<th align="left">CDH 6.3.0</th>
<th align="left">HDP 3.1.4</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>Hadoop</strong></td>
<td align="left">3.0.0</td>
<td align="left">3.1.1🔺</td>
</tr>
<tr>
<td align="left"><strong>ZooKeeper</strong></td>
<td align="left">3.4.5</td>
<td align="left">3.4.6🔺</td>
</tr>
<tr>
<td align="left"><strong>Hive</strong></td>
<td align="left">2.1.1</td>
<td align="left">3.1.0🔺</td>
</tr>
<tr>
<td align="left"><strong>HBase</strong></td>
<td align="left">2.1.0🔺</td>
<td align="left">2.0.2</td>
</tr>
<tr>
<td align="left"><strong>Kafka</strong></td>
<td align="left">2.2.1🔺</td>
<td align="left">2.0.0</td>
</tr>
<tr>
<td align="left"><strong>Oozie</strong></td>
<td align="left">5.1.0🔺</td>
<td align="left">4.3.1</td>
</tr>
<tr>
<td align="left"><strong>Spark</strong></td>
<td align="left">2.4.0🔺</td>
<td align="left">2.3.2</td>
</tr>
<tr>
<td align="left">Impala</td>
<td align="left">3.2.0</td>
<td align="left">\</td>
</tr>
<tr>
<td align="left">Sentry</td>
<td align="left">2.1.0</td>
<td align="left">\</td>
</tr>
<tr>
<td align="left">Ranger</td>
<td align="left">\</td>
<td align="left">1.2.0</td>
</tr>
<tr>
<td align="left">Livy</td>
<td align="left">\</td>
<td align="left">0.5.0</td>
</tr>
<tr>
<td align="left">TEZ</td>
<td align="left">\</td>
<td align="left">0.9.1</td>
</tr>
<tr>
<td align="left">Zeppelin</td>
<td align="left">\</td>
<td align="left">0.8.0</td>
</tr>
<tr>
<td align="left">Phoenix</td>
<td align="left">\</td>
<td align="left">5.0.0</td>
</tr>
<tr>
<td align="left">Knox</td>
<td align="left">\</td>
<td align="left">1.0.0</td>
</tr>
<tr>
<td align="left">Atlas</td>
<td align="left">\</td>
<td align="left">1.1.0</td>
</tr>
<tr>
<td align="left">Druid</td>
<td align="left">\</td>
<td align="left">0.12.1 (incubating)</td>
</tr>
</tbody></table>
<h4 id="架构对比"><a href="#架构对比" class="headerlink" title="架构对比"></a>架构对比</h4><h5 id="CDH"><a href="#CDH" class="headerlink" title="CDH"></a>CDH</h5><p><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E6%9E%B6%E6%9E%84.png" alt=""></p>
<h5 id="HDP"><a href="#HDP" class="headerlink" title="HDP"></a>HDP</h5><p><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E6%9E%B6%E6%9E%84.png" alt=""></p>
<h4 id="原装支持组件对比"><a href="#原装支持组件对比" class="headerlink" title="原装支持组件对比"></a>原装支持组件对比</h4><p><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/%E7%BB%84%E4%BB%B6%E5%AF%B9%E6%AF%94.png" alt=""></p>
<ul>
<li>CDH支持的存储组件更丰富</li>
<li>HDP支持的数据分析组件更丰富</li>
<li>HDP对多维分析及可视化有了支持，引入Druid和Superset</li>
<li>HDP的HBase数据使用Phoenix的jdbc查询；CDH的HBase数据使用映射Hive到Impala的jdbc查询（CDH6.2支持Phoenix5），但分析数据可以存储Impala内部表，提高查询响应</li>
<li>多维分析Druid纳入集群，会方便管理；但可视化工具Superset可以单独安装使用</li>
<li>CDH没有时序数据库，HDP将Druid作为时序数据库使用</li>
</ul>
<h4 id="安全权限模块对比"><a href="#安全权限模块对比" class="headerlink" title="安全权限模块对比"></a>安全权限模块对比</h4><ol>
<li><p>HDP<br>包含Ranger组件，即使在没有Kerberos的情况下，也能作一些简单的权限分配管理。由于100%开源，所以支持Ldap+Kerberos+Ranger的权限配置方式，分配权限简单易用。另外，Kerberos配置具有向导式界面。</p>
</li>
<li><p>CDH<br>包含Sentry组件，Sentry与Ranger差别较大，Sentry没有图像化界面，只负责同步组件间的ACL授权。Cloudera express免费版只支持集成Kerberos，需要Ldap支持的需要企业版（<a href="#CDH免费版和企业版区别">CDH免费版和企业版区别对比</a>）。</p>
</li>
</ol>
<h4 id="运维管理对比"><a href="#运维管理对比" class="headerlink" title="运维管理对比"></a>运维管理对比</h4><h5 id="HDP-1"><a href="#HDP-1" class="headerlink" title="HDP"></a>HDP</h5><p>采用Apache Ambari进行统一管理，Ambari2.7之后的版本相对2.6有很大的改动，2.6个人看来也不够人性化，2.7界面布局更加人性化。</p>
<ol>
<li>Ambari不支持中文，整个管理页面都是英文呈现。</li>
<li>组件比较重要的基本配置都以图形化的方式呈现，比直接配文字版体验效果好。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A21.png" alt=""><br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22.png" alt=""><br>鼠标hover到配置项上面会有该项配置的说明。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22-1.png" alt=""></li>
<li>其他配置都是按照节点（如下图中的NameNode）、配置文件（如下图中的Advanced hdfs-site）来进行组织的，方便运维人员快速定位。另外配置有版本记录，可以回退到任意版本。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A23.png" alt=""></li>
<li>组件界面可以直接看到该组件的哪些服务以及服务情况，右边就有该服务的快速链接，下图为Yarn的界面。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E7%BB%84%E4%BB%B6%E7%95%8C%E9%9D%A21.png" alt=""></li>
<li>部分组件可以看到链接地址，比如Hive。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E7%BB%84%E4%BB%B6%E7%95%8C%E9%9D%A22.png" alt=""></li>
<li>Ambari服务本身不支持高可用。</li>
</ol>
<h5 id="CDH-1"><a href="#CDH-1" class="headerlink" title="CDH"></a>CDH</h5><p>采用Cloudera Manager（下文统一用cm代替）进行统一管理。</p>
<ol>
<li>cm可以根据浏览器配置进行语言选择，支持中文。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A20.png" alt=""></li>
<li>配置界面左边将所有配置按照范围、类别、状态进行分类，也能很方便的找到配置。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22.png" alt=""><br>右边提供每个配置的说明，点看可以看到各项配置的说明。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22-1.png" alt=""></li>
<li>配置版本控制免费版不支持<br>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_mc_revert_configs.html" target="_blank" rel="noopener">Viewing and Reverting Configuration Changes</a></li>
<li>组件服务的快速链接在tab页上<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A23.png" alt=""></li>
<li>cm服务可以配置高可用<br>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/admin_cm_ha_server.html" target="_blank" rel="noopener">Installing and Configuring Cloudera Manager Server for High Availability</a></li>
<li>cm支持数据加密，无论是静态加密或保护数据传输，但是可惜的是免费版cm支持很有限。另外加密前官方强烈建议安装Kerberos<br>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/sg_enc_overview.html" target="_blank" rel="noopener">Encryption Overview</a><br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E5%8A%A0%E5%AF%86%E9%85%8D%E7%BD%AE%E9%A1%B5%E9%9D%A2.png" alt=""></li>
<li>Cloudera Manager本身支持高可用，但是需要其他服务的配合。<br> 参考：<a href="https://docs.cloudera.com/documentation/enterprise/latest/topics/admin_cm_ha_overview.html" target="_blank" rel="noopener">Configuring Cloudera Manager for High Availability With a Load Balancer</a></li>
</ol>
<h3 id="CDH版本说明"><a href="#CDH版本说明" class="headerlink" title="CDH版本说明"></a>CDH版本说明</h3><h4 id="CDH6-X组件版本对应"><a href="#CDH6-X组件版本对应" class="headerlink" title="CDH6.X组件版本对应"></a>CDH6.X组件版本对应</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_cdh_6_packaging.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_cdh_6_packaging.html</a></p>
<h4 id="CDH5-X组件版本对应"><a href="#CDH5-X组件版本对应" class="headerlink" title="CDH5.X组件版本对应"></a>CDH5.X组件版本对应</h4><p><a href="https://www.cloudera.com/documentation/enterprise/release-notes/topics/cdh_vd_cdh_package_tarball.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/release-notes/topics/cdh_vd_cdh_package_tarball.html</a></p>
<h4 id="Impala版本说明"><a href="#Impala版本说明" class="headerlink" title="Impala版本说明"></a>Impala版本说明</h4><p>Impala在3.1之后才支持ORC格式HDFS文件，目前最高版本为3.2，CDH6.1对应的Impala版本为3.1，CDH6.2对应的Impala版本为3.2</p>
<h4 id="Docker-QuickStart版本说明"><a href="#Docker-QuickStart版本说明" class="headerlink" title="Docker QuickStart版本说明"></a>Docker QuickStart版本说明</h4><p>Cloudera <code>Quickstart</code>和HDP的<code>sandbox</code>类似，都是单机版的供学习交流使用的大数据集群。<br>目前Docker版启动的quickstart CDH版本最新为<strong>5.13.0</strong>，对应部分组件版本为：</p>
<table>
<thead>
<tr>
<th><strong>组件</strong></th>
<th><strong>组件包版本</strong></th>
<th><strong>压缩包下载地址</strong></th>
<th><strong>版本发布说明</strong></th>
<th align="left"><strong>更改文件</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Apache Hadoop</td>
<td>hadoop-2.6.0+cdh5.13.0+2639</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/hadoop-2.6.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/hadoop-2.6.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hadoop-2.6.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Hadoop Mrv1</td>
<td>hadoop-0.20-mapreduce-2.6.0+cdh5.13.0+2639</td>
<td>(none)</td>
<td>(none)</td>
<td align="left">(none)</td>
</tr>
<tr>
<td>Hbase</td>
<td>hbase-1.2.0+cdh5.13.0+411</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/hbase-1.2.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/hbase-1.2.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hbase-1.2.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Apache Hive</td>
<td>hive-1.1.0+cdh5.13.0+1269</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/hive-1.1.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/hive-1.1.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hive-1.1.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Hue</td>
<td>hue-3.9.0+cdh5.13.0+7079</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/hue-3.9.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/hue-3.9.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hue-3.9.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Apache Impala</td>
<td>impala-2.10.0+cdh5.13.0+0</td>
<td>(none)</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/impala-2.10.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/impala-2.10.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Apache Kudu</td>
<td>kudu-1.5.0+cdh5.13.0+0</td>
<td>(none)</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/kudu-1.5.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/kudu-1.5.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Apache Oozie</td>
<td>oozie-4.1.0+cdh5.13.0+458</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/oozie-4.1.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/oozie-4.1.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/oozie-4.1.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Cloudera Search</td>
<td>search-1.0.0+cdh5.13.0+0</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/search-1.0.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/search-1.0.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/search-1.0.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Apache Solr</td>
<td>solr-4.10.3+cdh5.13.0+519</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/solr-4.10.3-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/solr-4.10.3-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/solr-4.10.3-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Apache Spark</td>
<td>spark-1.6.0+cdh5.13.0+530</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/spark-1.6.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/spark-1.6.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/spark-1.6.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Apache Sqoop</td>
<td>sqoop-1.4.6+cdh5.13.0+116</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop-1.4.6-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop-1.4.6-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop-1.4.6-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Apache Sqoop2</td>
<td>sqoop2-1.99.5+cdh5.13.0+46</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop2-1.99.5-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop2-1.99.5-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop2-1.99.5-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
<tr>
<td>Zookeeper</td>
<td>zookeeper-3.4.5+cdh5.13.0+118</td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/zookeeper-3.4.5-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td>
<td><a href="https://archive.cloudera.com/cdh5/cdh/5/zookeeper-3.4.5-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td>
<td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/zookeeper-3.4.5-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td>
</tr>
</tbody></table>
<h3 id="CDH免费版和企业版区别"><a href="#CDH免费版和企业版区别" class="headerlink" title="CDH免费版和企业版区别"></a>CDH免费版和企业版区别</h3><p><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E5%85%8D%E8%B4%B9%E7%89%88%E5%92%8C%E4%BB%98%E8%B4%B9%E7%89%88%E5%8A%9F%E8%83%BD%E5%AF%B9%E6%AF%94%E5%9B%BE.png" alt="免费版和企业版功能对比图"><br>注：<br>1.snmp traps：SNMP是指简单网络管理协议，trap是它规定的一种通信方式，用于被管理的设备主动向充当管理者的设备报告自己的异常信息。</p>
<p><a href="https://www.cloudera.com/content/dam/www/marketing/resources/datasheets/cloudera-enterprise-datasheet.pdf.landing.html" target="_blank" rel="noopener">官网参考地址</a><br>截图来自<a href="https://blog.csdn.net/levy_cui/article/details/51143092" target="_blank" rel="noopener">CSDN</a><br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/%E5%AE%98%E7%BD%91%E8%A1%A81.jpg" alt=""><br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/%E5%AE%98%E7%BD%91%E8%A1%A82.jpg" alt=""></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>CDH</tag>
        <tag>HDP</tag>
      </tags>
  </entry>
  <entry>
    <title>文档网站生成工具选型</title>
    <url>/2019/05/15/wen-dang-wang-zhan-sheng-cheng-gong-ju-xuan-xing/</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol>
<li>要求部署一个静态网站，用于开发者文档的呈现。</li>
<li>要求所有文档采用markdown格式书写，md文件保存到git仓库（github），并且目录结构必须清晰</li>
<li>要求md文件解析操作是在前端完成</li>
</ol>
<h2 id="方案选择"><a href="#方案选择" class="headerlink" title="方案选择"></a>方案选择</h2><table>
<thead>
<tr>
<th align="center"></th>
<th align="center">方式一 预先渲染HTML</th>
<th align="center">方式二 运行时解析md</th>
</tr>
</thead>
<tbody><tr>
<td align="center">描述</td>
<td align="center">先将所有md文件解析成HTML文件，<br>然后前端进行HTML文件的展示<br>参考：Hexo</td>
<td align="center">前端直接读取md文件，<br>在渲染页面时进行md文件的解析<br>参考：docsify</td>
</tr>
<tr>
<td align="center">优点</td>
<td align="center">由于前端不需要渲染，直接展示，<br>理论上速度没有延迟</td>
<td align="center">由于每次都是即时渲染，<br>所以在更新md文件时不会有额外工作量</td>
</tr>
<tr>
<td align="center">缺点</td>
<td align="center">在更新md文件，哪怕只更新一点，<br>也需要所有md文件重新编译解析一次，<br>工作量较大</td>
<td align="center">需要前端实时解析md文件，<br>在文件较大时可能会有延迟</td>
</tr>
<tr>
<td align="center">选择</td>
<td align="center">x</td>
<td align="center"><code>√</code></td>
</tr>
</tbody></table>
<h2 id="网站生成逻辑"><a href="#网站生成逻辑" class="headerlink" title="网站生成逻辑"></a>网站生成逻辑</h2><p><img src="http://47.106.179.244/%E6%96%87%E6%A1%A3%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7%E9%80%89%E5%9E%8B/%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E9%80%BB%E8%BE%91%E5%9B%BE.png" alt=""></p>
<h2 id="各种开源工具对比"><a href="#各种开源工具对比" class="headerlink" title="各种开源工具对比"></a>各种开源工具对比</h2><table>
<thead>
<tr>
<th align="center">开源工具对比</th>
<th align="center">Hexo</th>
<th align="center">VuePress</th>
<th align="center">Docute</th>
<th align="center">Docsify</th>
</tr>
</thead>
<tbody><tr>
<td align="center">文档生成方式</td>
<td align="center">预先渲染HTML</td>
<td align="center">预先渲染HTML</td>
<td align="center">运行时解析</td>
<td align="center">运行时解析</td>
</tr>
<tr>
<td align="center">对SEO友好程度</td>
<td align="center">友好</td>
<td align="center">友好</td>
<td align="center">不友好</td>
<td align="center">不友好</td>
</tr>
<tr>
<td align="center">官网地址</td>
<td align="center"><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo</a></td>
<td align="center"><a href="https://vuepress.vuejs.org/zh/" target="_blank" rel="noopener">vuepress</a></td>
<td align="center"><a href="https://docute.org/zh/" target="_blank" rel="noopener">docute</a></td>
<td align="center"><a href="https://docsify.js.org/#/zh-cn/" target="_blank" rel="noopener">docsify</a></td>
</tr>
<tr>
<td align="center">适用场景</td>
<td align="center">个人博客</td>
<td align="center">需要SEO支持<br>的技术文档</td>
<td align="center">公司或团队内部<br>的文档系统</td>
<td align="center">公司或团队内部<br>的文档系统</td>
</tr>
<tr>
<td align="center">特点</td>
<td align="center">与主题解耦，<br>更换主题成本低</td>
<td align="center">采用vue，<br>对vue开发友好</td>
<td align="center">Docute（60kB）使用<br>Vue，Vue Router 和 Vuex</td>
<td align="center">Docsify（20kB）<br>使用的是 vanilla JavaScript</td>
</tr>
</tbody></table>
<h2 id="Docute与Docsify区别"><a href="#Docute与Docsify区别" class="headerlink" title="Docute与Docsify区别"></a>Docute与Docsify区别</h2><ol>
<li>Docsify官方文档更友好，内容更多，本身占用空间更小</li>
<li>同样的md文件，Docute解析代码段有问题，Docsify没问题</li>
<li>Docute提供一些官方组件，Badge、Note等，但是插件较少，而Docsify没有自带组件，但是支持很多有用的插件，如评论插件（Gitalk等）、全文搜索、谷歌统计等。而Docsify也支持Note插件：<a href="https://github.com/zanfab/docsify-plugin-flexible-alerts" target="_blank" rel="noopener">flexible-alerts</a></li>
<li>Docsify支持封面主页，Docute不支持</li>
<li>Docsify样式配置可以通过md文件进行配置，而Docute只能在index.html中配置</li>
<li>Docsify支持热部署，更新配置和文章不需要重启服务，Docute不支持</li>
</ol>
<h2 id="最终选型"><a href="#最终选型" class="headerlink" title="最终选型"></a>最终选型</h2><p>最终选型：<a href="https://docsify.js.org/#/zh-cn/" target="_blank" rel="noopener">Docsify</a><br>查看演示：<a href="https://docs.hming.org/#/" target="_blank" rel="noopener">https://docs.hming.org</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>部署</category>
      </categories>
      <tags>
        <tag>文档</tag>
        <tag>网站生成工具</tag>
      </tags>
  </entry>
  <entry>
    <title>SandBox HDFS上传文件失败问题</title>
    <url>/2019/04/16/sandbox-hdfs-shang-chuan-wen-jian-shi-bai-wen-ti/</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>远程（非Docker容器内、非宿主机）上传文件，新建文件成功，写入文件内容失败。查看<code>/var/log/hadoop/hdfs/hadoop-hdfs-namenode-sandbox-hdp.hortonworks.com.log</code>文件，发现如下错误：</p>
<pre><code>2019-04-15 10:51:33,322 INFO  ipc.Server (Server.java:logException(2726)) - IPC Server handler 74 on 8020, call Call#4 Retry#0 org.apache.hadoop.hdfs.protocol.ClientProtocol.addBlock from 172.18.0.3:48170
java.io.IOException: File /tmp/1.csv could only be written to 0 of the 1 minReplication nodes. There are 1 datanode(s) running and 1 node(s) are excluded in this operation.
        at org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.chooseTarget4NewBlock(BlockManager.java:2121)
        at org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp.chooseTargetForNewBlock(FSDirWriteFileOp.java:286)
        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getAdditionalBlock(FSNamesystem.java:2706)
        at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.addBlock(NameNodeRpcServer.java:875)
        at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.addBlock(ClientNamenodeProtocolServerSideTranslatorPB.java:561)
        at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
        at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:524)
        at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1025)
        at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:876)
        at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:822)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Subject.java:422)
        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
        at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2682)</code></pre><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>上传文件过程中，Client先向NameNode发送上传文件请求，NameNode将DataNode的地址返回给Client，Client再通过该地址，写入文件内容。<br>由于SandBox HDP是搭建在Docker容器内部，所以NameNode返回的是Docker容器的ip地址（这和Docker的网络模式有关），因为SandBox默认启动的是自定义网络，所以容器内部ip为<code>172.18.0.3</code>，返回给Client之后，Client通过该IP是无法找到DataNode的，所以导致文件的元数据存到了NameNode上，而文件内容无法写入DataNode。</p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="方案一（推荐）"><a href="#方案一（推荐）" class="headerlink" title="方案一（推荐）"></a>方案一（推荐）</h4><p>修改代码和增加端口映射<br>因为NameNode返回的是Docker的ip，Client访问不了DataNode，所以可以让NameNode返回主机名，然后Client配置host的方式请求到宿主机的地址</p>
<ol>
<li>修改Client host文件配置，增加host映射</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash">10.75.4.32 sandbox-hdp.hortonworks.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="2">
<li>java代码修改：</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java">Configuration conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
conf<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"fs.defaultFS"</span><span class="token punctuation">,</span> <span class="token string">"hdfs://10.75.4.32:8020/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//增加下面一行，设置返回DataNode的主机名而不是ip</span>
conf<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"dfs.client.use.datanode.hostname"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>此时还是不能访问到DataNode，因为<code>sandbox-proxy</code>容器并没有映射DataNode的端口（默认为<code>50010</code>）。<br>3. 修改<code>sandbox-proxy</code>端口映射，增加<code>50010</code>端口<br>停止、删除<code>sandbox-proxy</code>容器</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker stop sandbox-proxy</span>
sandbox-proxy
<span class="token punctuation">[</span>root@sandbox-host ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker rm sandbox-proxy</span>
sandbox-proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>修改<code>generate-proxy-deploy-script.sh</code>脚本，在<code>tcpPortsHDP=(...)</code>部分新增<code>50010</code>端口映射<br>VMware版本脚本路径：<code>/sandbox/proxy/generate-proxy-deploy-script.sh</code><br>纯Docker版脚本路径：<code>./assets/generate-proxy-deploy-script.sh</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">..</span>.
tcpPortsHDP<span class="token operator">=</span><span class="token punctuation">(</span>
<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>50010<span class="token punctuation">]</span><span class="token operator">=</span>50010
<span class="token punctuation">..</span>.
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="4">
<li>重新执行<code>docker-deploy-hdp30.sh</code>脚本中配置代理容器的脚本</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#Deploy the proxy container.</span>
<span class="token function">sed</span> <span class="token string">'s/sandbox-hdp-security/sandbox-hdp/g'</span> assets/generate-proxy-deploy-script.sh <span class="token operator">></span> assets/generate-proxy-deploy-script.sh.new
<span class="token function">mv</span> -f assets/generate-proxy-deploy-script.sh.new assets/generate-proxy-deploy-script.sh
<span class="token function">chmod</span> +x assets/generate-proxy-deploy-script.sh
assets/generate-proxy-deploy-script.sh 2<span class="token operator">></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="方案二（不推荐）"><a href="#方案二（不推荐）" class="headerlink" title="方案二（不推荐）"></a>方案二（不推荐）</h4><p>暴力取消Docker网络隔离层，<strong>这样也就失去了Docker容器网络隔离的特性，具体利弊需要斟酌</strong>。<br>因为原因是Client连不上DataNode节点，所以直接将Docker容器的网络模式设置成host模式（详细参照Docker网络模式），将容器的ip和端口直接和宿主机打通，这样就能远程连接DataNode了。</p>
<h5 id="纯Docker模式"><a href="#纯Docker模式" class="headerlink" title="纯Docker模式"></a>纯Docker模式</h5><ol>
<li>停止、删除已生成容器（<code>sandbox-proxy</code>和<code>sandbox-hdp</code>）</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker stop $(docker ps -aq)</span>
ef35a5989c71
25f814082615
<span class="token punctuation">[</span>root@sandbox proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker rm $(docker ps -aq)</span>
ef35a5989c71
25f814082615<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>修改脚本文件<code>docker-deploy-hdp30.sh</code>，将容器启动改为host网络模式，注释代理容器相关代码<blockquote>
<p>脚本文件为运行sandbox时的启动脚本</p>
</blockquote>
</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#!/usr/bin/env sh</span>
<span class="token comment" spellcheck="true">#This script downloads HDP sandbox along with their proxy docker container</span>
<span class="token keyword">set</span> -x

<span class="token comment" spellcheck="true"># CAN EDIT THESE VALUES</span>
registry<span class="token operator">=</span><span class="token string">"hortonworks"</span>
name<span class="token operator">=</span><span class="token string">"sandbox-hdp"</span>
version<span class="token operator">=</span><span class="token string">"3.0.1"</span>
proxyName<span class="token operator">=</span><span class="token string">"sandbox-proxy"</span>
proxyVersion<span class="token operator">=</span><span class="token string">"1.0"</span>
flavor<span class="token operator">=</span><span class="token string">"hdp"</span>

<span class="token comment" spellcheck="true"># NO EDITS BEYOND THIS LINE</span>
<span class="token comment" spellcheck="true"># housekeeping</span>
<span class="token comment" spellcheck="true"># 这里已经没用了，注释</span>
<span class="token comment" spellcheck="true">#echo $flavor > sandbox-flavor</span>


<span class="token comment" spellcheck="true"># create necessary folders for nginx and copy over our rule generation script there</span>
<span class="token comment" spellcheck="true">#这里也注释，不需要代理容器了</span>
<span class="token comment" spellcheck="true">#mkdir -p sandbox/proxy/conf.d</span>
<span class="token comment" spellcheck="true">#mkdir -p sandbox/proxy/conf.stream.d</span>

<span class="token comment" spellcheck="true"># pull and tag the sandbox and the proxy container</span>
<span class="token comment" spellcheck="true"># 本地已经存在镜像文件，这里可以注释减少脚本执行时间</span>
<span class="token comment" spellcheck="true">#docker pull "$registry/$name:$version"</span>
<span class="token comment" spellcheck="true">#docker pull "$registry/$proxyName:$proxyVersion"</span>

<span class="token comment" spellcheck="true"># start the docker container and proxy</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdf"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
 hostname<span class="token operator">=</span><span class="token string">"sandbox-hdf.hortonworks.com"</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdp"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
 hostname<span class="token operator">=</span><span class="token string">"sandbox-hdp.hortonworks.com"</span>
<span class="token keyword">fi</span>

version<span class="token operator">=</span><span class="token punctuation">$(</span>docker images <span class="token operator">|</span> <span class="token function">grep</span> <span class="token variable">$registry</span>/<span class="token variable">$name</span>  <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true"># Create cda docker network</span>
<span class="token comment" spellcheck="true"># 因为采用host网络模式，这里创建网络cda也注释</span>
<span class="token comment" spellcheck="true">#docker network create cda 2>/dev/null</span>

<span class="token comment" spellcheck="true"># Deploy the sandbox into the cda docker network</span>
<span class="token comment" spellcheck="true"># 将原本的run语句注释，修改为以下语句（将网络模式修改为host）</span>
<span class="token comment" spellcheck="true">#docker run --privileged --name $name -h $hostname --network=cda --network-alias=$hostname -d "$registry/$name:$version"</span>
docker run --privileged --name <span class="token variable">$name</span> -h <span class="token variable">$hostname</span> --network<span class="token operator">=</span>host -d <span class="token string">"<span class="token variable">$registry</span>/<span class="token variable">$name</span>:<span class="token variable">$version</span>"</span>

<span class="token keyword">echo</span> <span class="token string">" Remove existing postgres run files. Please wait"</span>
<span class="token function">sleep</span> 2
docker <span class="token function">exec</span> -t <span class="token string">"<span class="token variable">$name</span>"</span> sh -c <span class="token string">"rm -rf /var/run/postgresql/*; systemctl restart postgresql-9.6.service;"</span>


<span class="token comment" spellcheck="true">#Deploy the proxy container.</span>
<span class="token comment" spellcheck="true"># 这里为代理容器配置，因为host模式自动将所有端口映射到宿主机上，所以不再需要sandbox-proxy容器的支持</span>
<span class="token comment" spellcheck="true">#sed 's/sandbox-hdp-security/sandbox-hdp/g' assets/generate-proxy-deploy-script.sh > assets/generate-proxy-deploy-script.sh.new</span>
<span class="token comment" spellcheck="true">#mv -f assets/generate-proxy-deploy-script.sh.new assets/generate-proxy-deploy-script.sh</span>
<span class="token comment" spellcheck="true">#chmod +x assets/generate-proxy-deploy-script.sh</span>
<span class="token comment" spellcheck="true">#assets/generate-proxy-deploy-script.sh 2>/dev/null</span>

<span class="token comment" spellcheck="true">#check to see if it's windows</span>
<span class="token comment" spellcheck="true"># 以下为window环境代码，也注释</span>
<span class="token comment" spellcheck="true">#if uname | grep MINGW; then</span>
<span class="token comment" spellcheck="true"># sed -i -e 's/\( \/[a-z]\)/\U\1:/g' sandbox/proxy/proxy-deploy.sh</span>
<span class="token comment" spellcheck="true">#fi</span>
<span class="token comment" spellcheck="true">#chmod +x sandbox/proxy/proxy-deploy.sh 2>/dev/null</span>
<span class="token comment" spellcheck="true">#sandbox/proxy/proxy-deploy.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>重新运行<code>docker-deploy-hdp30.sh</code>脚本文件</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># sh docker-deploy-hdp30.sh </span>
+ registry<span class="token operator">=</span>hortonworks
+ name<span class="token operator">=</span>sandbox-hdp
+ version<span class="token operator">=</span>3.0.1
+ proxyName<span class="token operator">=</span>sandbox-proxy
+ proxyVersion<span class="token operator">=</span>1.0
+ flavor<span class="token operator">=</span>hdp
+ <span class="token keyword">echo</span> hdp
+ <span class="token function">mkdir</span> -p sandbox/proxy/conf.d
+ <span class="token function">mkdir</span> -p sandbox/proxy/conf.stream.d
+ <span class="token string">'['</span> hdp <span class="token operator">==</span> hdf <span class="token string">']'</span>
+ <span class="token string">'['</span> hdp <span class="token operator">==</span> hdp <span class="token string">']'</span>
+ hostname<span class="token operator">=</span>sandbox-hdp.hortonworks.com
++ docker images
++ <span class="token function">grep</span> hortonworks/sandbox-hdp
++ <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span>
+ version<span class="token operator">=</span>3.0.1
+ docker run --privileged --name sandbox-hdp -h sandbox-hdp.hortonworks.com --network<span class="token operator">=</span>host -d hortonworks/sandbox-hdp:3.0.1
b91b70d7792a806310c067e7792f4c3930a5329261128d5a4c211b804a923342
+ <span class="token keyword">echo</span> <span class="token string">' Remove existing postgres run files. Please wait'</span>
 Remove existing postgres run files. Please <span class="token function">wait</span>
+ <span class="token function">sleep</span> 2
+ docker <span class="token function">exec</span> -t sandbox-hdp sh -c <span class="token string">'rm -rf /var/run/postgresql/*; systemctl restart postgresql-9.6.service;'</span>

<span class="token comment" spellcheck="true"># 可以看到此时只剩下sandbox-hdp一个容器在运行</span>
<span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker ps</span>
CONTAINER ID        IMAGE                           COMMAND             CREATED             STATUS              PORTS               NAMES
b91b70d7792a        hortonworks/sandbox-hdp:3.0.1   <span class="token string">"/usr/sbin/init"</span>    8 minutes ago       Up 8 minutes                            sandbox-hdp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="4">
<li>最后进行各种初始化配置即可<br>进入sandbox容器，重置Ambari admin密码</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker exec -it sandbox-hdp /bin/bash</span>
<span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-admin-password-reset </span>
Please <span class="token keyword">set</span> the password <span class="token keyword">for</span> admin: 
Please retype the password <span class="token keyword">for</span> admin: 

The admin password has been set.
Restarting ambari-server to <span class="token function">make</span> the password change effective<span class="token punctuation">..</span>.

Using python  /usr/bin/python
Restarting ambari-server
Ambari Server is not running
Ambari Server running with administrator privileges.
Organizing resource files at /var/lib/ambari-server/resources<span class="token punctuation">..</span>.
Ambari database consistency check started<span class="token punctuation">..</span>.
Server PID at: /var/run/ambari-server/ambari-server.pid
Server out at: /var/log/ambari-server/ambari-server.out
Server log at: /var/log/ambari-server/ambari-server.log
Waiting <span class="token keyword">for</span> server start<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
Server started listening on 8080

DB configs consistency check: no errors and warnings were found.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>访问8080端口，到Ambari界面，登录后重启服务即可。</p>
<p>SandBox使用参照：<br><a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/">SandBox-HDP使用详解</a><br><strong>注意：由于没有运行sandbox-proxy容器，1080端口已经无法访问</strong></p>
<h5 id="VMware模式"><a href="#VMware模式" class="headerlink" title="VMware模式"></a>VMware模式</h5><ol>
<li>通过ssh连接22端口登录到VMware虚拟机（sandbox的宿主机）里面<br>也可以通过XShell等工具进入<br>默认<code>root</code>初始密码为<code>hadoop</code></li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh 10.75.4.6 -p 22</span>
root@10.75.4.6's password: 
Last failed login: Tue Apr 16 15:38:03 UTC 2019 from 10.75.4.32 on ssh:notty
There was 1 failed login attempt since the last successful login.
Last login: Mon Apr 15 16:34:49 2019 from 10.75.4.11
<span class="token punctuation">[</span>root@sandbox-host ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker images</span>
REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE
hortonworks/sandbox-proxy          1.0                 ca272ae0e63a        4 months ago        109MB
hortonworks/sandbox-hdp-security   3.0                 ae1d1779b081        4 months ago        27.5GB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>停止、删除已生成容器（<code>sandbox-proxy</code>和<code>sandbox-hdp-security</code>）</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker stop $(docker ps -aq)</span>
ef35a5989c71
25f814082615
<span class="token punctuation">[</span>root@sandbox-host proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker rm $(docker ps -aq)</span>
ef35a5989c71
25f814082615<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>修改脚本文件<code>/sandbox/sandbox-deploy.sh</code>，将容器启动改为host网络模式，注释代理容器相关代码</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#!/usr/bin/env bash</span>

flavor<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /sandbox-flavor<span class="token variable">)</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdf"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
 name<span class="token operator">=</span><span class="token string">"sandbox-hdf-standalone-cda-ready"</span>
 hostname<span class="token operator">=</span><span class="token string">"sandbox-hdf.hortonworks.com"</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdp"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
 name<span class="token operator">=</span><span class="token string">"sandbox-hdp-security"</span>
 hostname<span class="token operator">=</span><span class="token string">"sandbox-hdp.hortonworks.com"</span>
<span class="token keyword">fi</span>

version<span class="token operator">=</span><span class="token punctuation">$(</span>docker images <span class="token operator">|</span> <span class="token function">grep</span> <span class="token variable">$name</span>  <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
image<span class="token operator">=</span><span class="token string">"hortonworks/<span class="token variable">$name</span>:<span class="token variable">$version</span>"</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true"># Create cda docker network</span>
<span class="token comment" spellcheck="true"># 因为采用host网络模式，这里注释创建网络cda</span>
<span class="token comment" spellcheck="true">#docker network create cda</span>

<span class="token comment" spellcheck="true"># Deploy the sandbox into the cda docker network</span>
<span class="token comment" spellcheck="true"># 将原本的run语句注释，修改为以下语句（将网络模式修改为host）</span>
<span class="token comment" spellcheck="true">#docker run --privileged --name $name -h $hostname --network=cda --network-alias=$hostname -d $image</span>
docker run --privileged --name <span class="token variable">$name</span> -h <span class="token variable">$hostname</span> --network<span class="token operator">=</span>host -d <span class="token variable">$image</span>

<span class="token comment" spellcheck="true"># Deploy the proxy container.  This script was generated by running</span>
<span class="token comment" spellcheck="true"># 这里为代理容器配置，因为host模式自动将所有端口映射到宿主机上，所以不再需要sandbox-proxy容器的支持</span>
<span class="token comment" spellcheck="true">#/sandbox/proxy/generate-proxy-deploy-script.sh</span>
<span class="token comment" spellcheck="true">#/sandbox/proxy/proxy-deploy.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="4">
<li>运行脚本文件<code>/sandbox/sandbox-deploy.sh</code>，重新生成容器</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># sh sandbox-deploy.sh </span>
12e3df82d057057c6af78eea1c8bd9eb9156ebe0bac3dc90d2fec8377f48aa6f

<span class="token comment" spellcheck="true"># 可以看到此时只剩下sandbox-hdp-security一个容器在运行</span>
<span class="token punctuation">[</span>root@sandbox-host sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker ps</span>
CONTAINER ID  IMAGE                                  COMMAND           CREATED        STATUS       PORTS  NAMES
12e3df82d057  hortonworks/sandbox-hdp-security:3.0   <span class="token string">"/usr/sbin/init"</span>  6 seconds ago  Up 3 seconds        sandbox-hdp-security<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="5">
<li>最后进行各种初始化配置即可<br>进入sandbox容器，重置Ambari admin密码</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker exec -it sandbox-hdp-security /bin/bash</span>
<span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-admin-password-reset </span>
Please <span class="token keyword">set</span> the password <span class="token keyword">for</span> admin: 
Please retype the password <span class="token keyword">for</span> admin: 

The admin password has been set.
Restarting ambari-server to <span class="token function">make</span> the password change effective<span class="token punctuation">..</span>.

Using python  /usr/bin/python
Restarting ambari-server
Ambari Server is not running
Ambari Server running with administrator privileges.
Organizing resource files at /var/lib/ambari-server/resources<span class="token punctuation">..</span>.
Ambari database consistency check started<span class="token punctuation">..</span>.
Server PID at: /var/run/ambari-server/ambari-server.pid
Server out at: /var/log/ambari-server/ambari-server.out
Server log at: /var/log/ambari-server/ambari-server.log
Waiting <span class="token keyword">for</span> server start<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
Server started listening on 8080

DB configs consistency check: no errors and warnings were found.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>访问8080端口，到Ambari界面，登录后重启服务即可。</p>
<p>SandBox使用参照：<br><a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/">SandBox-HDP使用详解</a><br><strong>注意：由于没有运行sandbox-proxy容器，1080端口已经无法访问</strong></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>HDP</tag>
        <tag>SandBox</tag>
        <tag>HDFS</tag>
      </tags>
  </entry>
  <entry>
    <title>SandBox-HDP使用详解</title>
    <url>/2019/04/04/sandbox-hdp-shi-yong-xiang-jie/</url>
    <content><![CDATA[<p>官方文档介绍得非常详细，本文提取一些关键点作介绍，参考官网教程：<br><a href="https://hortonworks.com/tutorial/hortonworks-sandbox-guide/section/1/" target="_blank" rel="noopener">Sandbox Docs</a><br><a href="https://hortonworks.com/tutorial/hortonworks-sandbox-guide/section/3/" target="_blank" rel="noopener">Sandbox Port Forwards</a><br><a href="https://hortonworks.com/tutorial/sandbox-architecture/" target="_blank" rel="noopener">Sandbox Architecture</a><br><a href="https://hortonworks.com/tutorial/learning-the-ropes-of-the-hortonworks-sandbox/" target="_blank" rel="noopener">Learning the Ropes of the HDP Sandbox</a></p>
<h3 id="SandBox是什么"><a href="#SandBox是什么" class="headerlink" title="SandBox是什么"></a>SandBox是什么</h3><blockquote>
<p>The Sandbox is a straightforward, pre-configured, learning environment that contains the latest developments from Apache Hadoop, specifically the Hortonworks Data Platform (HDP). The Sandbox comes packaged in a virtual environment that can run in the cloud or on your personal machine. The Sandbox allows you to learn and explore HDP on your own.</p>
</blockquote>
<p>SandBox是Hortonworks提供的单机版HDP或HDF环境，主要用于测试和学习使用，对于没有服务器集群又想使用HDP/HDF的情况，SandBox是不二之选。<br>另外，SandBox里面内置了<code>DAS（Data Analytics Studio）</code>，非SandBox版本是没有这个的，需要购买Hortonworks服务才的获取到安装包。<br>SandBox提供三种安装方式：<code>VirtualBox虚拟机</code>、<code>VMware虚拟机</code>、<code>Docker容器</code>。<br>本文主要针对讲SandBox-HDP，HDF安装使用和HDP大致相同。<br>安装教程参考：<br><a href="http://blog.hming.org/2019/04/02/an-zhuang-sandbox-hdp-docker-ban/">安装SandBox HDP（Docker版）</a><br><a href="http://blog.hming.org/2019/04/02/an-zhuang-sandbox-hdp-vmware-ban/">安装SandBox HDP（VMware版）</a></p>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>一个运行中的SandBox-HDP 3.0.1</p>
<h3 id="web访问"><a href="#web访问" class="headerlink" title="web访问"></a>web访问</h3><p>1080端口为sandbox容器web服务端口，可以通过浏览器访问该端口，得到以下界面：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/sandbox%E9%A1%B5%E9%9D%A2.png" alt="sandbox页面"><br>左侧launch dashboard直接进入ambari管理界面，登录admin账号需要进入容器修改ambari管理员密码<br>右侧则是一些链接，包括ambari管理地址、Ranger地址、DAS地址等</p>
<p>4200端口则提供了一个浏览器访问命令行的接口：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AEhdp%E5%AE%B9%E5%99%A8.png" alt="浏览器访问hdp容器"><br>使用<code>root</code>登录，默认密码为<code>hadoop</code>，第一次登录会提示修改root密码，对密码强度会有要求</p>
<h3 id="登录到HDP环境主机"><a href="#登录到HDP环境主机" class="headerlink" title="登录到HDP环境主机"></a>登录到HDP环境主机</h3><p>在运行docker的主机上可以通过<code>2222</code>端口登录到HDP docker主机中，也可以通过<code>docker exec</code>命令进入<br>在其他机器上想登录到HDP主机就只能通过SSH了</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># SSH登录需要输入密码，root初始密码为hadoop</span>
<span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh 127.0.0.1 -p 2222</span>
root@127.0.0.1`s password: 
Last login: Thu Apr  4 08:22:27 2019 from 172.18.0.3
<span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span>

<span class="token comment" spellcheck="true"># docker命令可以直接进入</span>
<span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker exec -it sandbox-hdp /bin/bash</span>
<span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="登录到Ambari界面"><a href="#登录到Ambari界面" class="headerlink" title="登录到Ambari界面"></a>登录到Ambari界面</h3><p>默认提供的账户，更多账号信息参考<a href="https://hortonworks.com/tutorial/learning-the-ropes-of-the-hortonworks-sandbox/#login-credentials" target="_blank" rel="noopener">官网</a></p>
<table>
<thead>
<tr>
<th align="center">用户</th>
<th align="center">密码</th>
</tr>
</thead>
<tbody><tr>
<td align="center">admin</td>
<td align="center">参考<a href="http://blog.hming.org/2019/04/04/sandbox-hdp-shi-yong-xiang-jie/#toc-heading-6">重置管理员密码</a></td>
</tr>
<tr>
<td align="center">maria_dev</td>
<td align="center">maria_dev</td>
</tr>
<tr>
<td align="center">raj_ops</td>
<td align="center">raj_ops</td>
</tr>
<tr>
<td align="center">holger_gov</td>
<td align="center">holger_gov</td>
</tr>
<tr>
<td align="center">amy_ds</td>
<td align="center">amy_ds</td>
</tr>
</tbody></table>
<h3 id="重置Ambari管理员密码"><a href="#重置Ambari管理员密码" class="headerlink" title="重置Ambari管理员密码"></a>重置Ambari管理员密码</h3><ol>
<li>以root用户登录到HDP主机</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh 127.0.0.1 -p 2222</span>
root@127.0.0.1`s password: 
Last login: Thu Apr  4 08:22:27 2019 from 172.18.0.3
<span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>运行<code>ambari-admin-password-reset</code>命令，根据提示修改密码</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-admin-password-reset</span>
Please <span class="token keyword">set</span> the password <span class="token keyword">for</span> admin: 
Please retype the password <span class="token keyword">for</span> admin: 

The admin password has been set.
Restarting ambari-server to <span class="token function">make</span> the password change effective<span class="token punctuation">..</span>.

Using python  /usr/bin/python
Restarting ambari-server
Waiting <span class="token keyword">for</span> server stop<span class="token punctuation">..</span>.
Ambari Server stopped
Ambari Server running with administrator privileges.
Organizing resource files at /var/lib/ambari-server/resources<span class="token punctuation">..</span>.
Ambari database consistency check started<span class="token punctuation">..</span>.
Server PID at: /var/run/ambari-server/ambari-server.pid
Server out at: /var/log/ambari-server/ambari-server.out
Server log at: /var/log/ambari-server/ambari-server.log
Waiting <span class="token keyword">for</span> server start<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
DB configs consistency check: no errors and warnings were found.
ERROR: Exiting with <span class="token keyword">exit</span> code 1. 
REASON: Server not yet listening on http port 8080 after 90 seconds. Exiting.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>可能会遇到报错<br>  <code>ERROR: Exiting with exit code 1. 
   REASON: Server not yet listening on http port 8080 after 90 seconds. Exiting.</code><br>  这是由于SandBox中所有服务都在一个节点上，启动Ambari比较慢，超过了90秒，实际上这个错不会有任何影响<br>  可以通过编辑<code>/etc/ambari-server/conf/ambari.properties</code>文件，添加一行<code>server.startup.web.timeout = 150</code>来增加超时时间的方法解决</p>
</blockquote>
<ol start="3">
<li>执行命令后Ambari服务会重启，然后就可以通过新的admin密码登录Ambari</li>
</ol>
<h3 id="新增host映射"><a href="#新增host映射" class="headerlink" title="新增host映射"></a>新增host映射</h3><p>Ambari中有些内部链接是通过<code>sandbox-hdp.hortonworks.com</code>域名去访问的，比如<code>HDFS NameNode UI</code><br>可以在需要访问的主机上增加host映射方便访问</p>
<h3 id="数据库初始密码"><a href="#数据库初始密码" class="headerlink" title="数据库初始密码"></a>数据库初始密码</h3><h4 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h4><p>查看ambari用户的密码，默认为<code>bigdata</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># grep "password" /etc/ambari-server/conf/ambari.properties</span>
server.jdbc.rca.user.passwd<span class="token operator">=</span>/etc/ambari-server/conf/password.dat
server.jdbc.user.passwd<span class="token operator">=</span>/etc/ambari-server/conf/password.dat
<span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /etc/ambari-server/conf/password.dat </span>
bigdata<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用ambari用户登录postgreSQL</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># psql -U ambari -W</span>
Password <span class="token keyword">for</span> user ambari: 
psql <span class="token punctuation">(</span>9.6.11<span class="token punctuation">)</span>
Type <span class="token string">"help"</span> <span class="token keyword">for</span> help.

ambari<span class="token operator">=</span><span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h4><p>内置MySQL使用的是Hive新建的MySQL，初始密码为<code>hortonworks1</code><br>登录ambari postgreSQL查找密码</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># psql -U ambari -W</span>
Password <span class="token keyword">for</span> user ambari: 
psql <span class="token punctuation">(</span>9.6.11<span class="token punctuation">)</span>
Type <span class="token string">"help"</span> <span class="token keyword">for</span> help.

ambari<span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">select</span> version,config_id,type_name,config_data from clusterconfig where type_name<span class="token operator">=</span><span class="token string">'hive-site'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在结果里查找内容：javax.jdo.option.ConnectionPassword</p>
<h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><h4 id="远程向HDFS上传文件失败问题"><a href="#远程向HDFS上传文件失败问题" class="headerlink" title="远程向HDFS上传文件失败问题"></a>远程向HDFS上传文件失败问题</h4><p>参照<a href="http://blog.hming.org/2019/04/16/sandbox-hdfs-shang-chuan-wen-jian-shi-bai-wen-ti/">SandBox HDFS上传文件失败问题</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>HDP</tag>
        <tag>SandBox</tag>
      </tags>
  </entry>
  <entry>
    <title>安装SandBox HDP（VMware版）</title>
    <url>/2019/04/02/an-zhuang-sandbox-hdp-vmware-ban/</url>
    <content><![CDATA[<p>参考官网教程：<a href="https://hortonworks.com/tutorial/sandbox-deployment-and-install-guide/section/2/" target="_blank" rel="noopener">Deploying Hortonworks Sandbox on VMWare</a></p>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><table>
<thead>
<tr>
<th align="center">方面</th>
<th align="center">要求</th>
</tr>
</thead>
<tbody><tr>
<td align="center">软件</td>
<td align="center"><a href="https://my.vmware.com/cn/web/vmware/downloads" target="_blank" rel="noopener">安装VMware</a></td>
</tr>
<tr>
<td align="center">内存</td>
<td align="center">推荐16G以上（会开一个内存为10G的虚拟机）</td>
</tr>
</tbody></table>
<h3 id="运行原理"><a href="#运行原理" class="headerlink" title="运行原理"></a>运行原理</h3><p>VMware启动了一个Linux虚拟机，在Linux虚拟机里面会启动两个docker容器</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker images</span>
REPOSITORY                         TAG     IMAGE ID        CREATED        SIZE
hortonworks/sandbox-proxy          1.0     ca272ae0e63a    4 months ago   109MB
hortonworks/sandbox-hdp-security   3.0     ae1d1779b081    4 months ago   27.5GB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>sandbox-proxy</code>容器负责代理转发一些端口<br><code>sandbox-hdp-security</code>容器则是HDP环境<br>所以，要对HDP环境进行修改，比如修改ambari管理员密码，就需要进入docker容器里面<br>可以通过<code>ssh</code>登录<code>2222</code>端口，也可以通过<code>docker exec</code>命令进入，docker相关命令参考<a href="http://blog.hming.org/2018/09/18/Docker%E6%9B%BF%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/">Docker替换镜像源与常用命令</a></p>
<h3 id="下载镜像文件"><a href="#下载镜像文件" class="headerlink" title="下载镜像文件"></a>下载镜像文件</h3><p>到<a href="https://hortonworks.com/downloads/#sandbox" target="_blank" rel="noopener">官网</a>下载ova格式的镜像文件（HDP_3.0.1_vmware_181205.ova 20.5G）<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-VMware/VMware%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD.png" alt="镜像文件下载"><br>下载可能需要注册，随便填就行了</p>
<h3 id="将-ova镜像导入到VMware中"><a href="#将-ova镜像导入到VMware中" class="headerlink" title="将.ova镜像导入到VMware中"></a>将.ova镜像导入到VMware中</h3><ol>
<li>打开VMware，点击<code>文件</code>-&gt;<code>打开</code>，导入刚才下载的文件：<code>HDP_3.0.1_vmware_181205.ova</code><br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-VMware/VMware%E5%AF%BC%E5%85%A5%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6.png" alt="导入镜像文件"></li>
<li>开启虚拟机（这里可以看到虚拟机的一些信息，包括内存磁盘等）<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-VMware/VMware%E5%BC%80%E5%90%AF%E8%99%9A%E6%8B%9F%E6%9C%BA.png" alt="开启虚拟机"></li>
<li>开启后可能会遇到无法连接网络的问题，这时候选择桥接模式，重启一下就行<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-VMware/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F.png" alt="虚拟机网络连接方式"><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3>成功运行后窗口会打印一些信息，可以通过这些信息连接到虚拟机<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-VMware/%E8%BF%90%E8%A1%8C%E6%88%90%E5%8A%9F%E5%90%8E%E6%89%93%E5%8D%B0%E4%BF%A1%E6%81%AF.png" alt="运行成功后打印信息"><br>上图中的1080端口为sandbox端口，可以通过浏览器访问该端口，得到以下界面：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/sandbox%E9%A1%B5%E9%9D%A2.png" alt="sandbox页面"><br>左侧launch dashboard直接进入ambari管理界面，右侧则是一些链接，包括ambari管理地址、Ranger地址、DAS地址等<br>4200端口则提供了一个浏览器访问命令行的接口：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AEhdp%E5%AE%B9%E5%99%A8.png" alt="浏览器访问hdp容器"><br>使用<code>root</code>登录，默认密码为<code>hadoop</code>，第一次登录会提示修改root密码，对密码强度会有要求</li>
</ol>
<p>本文到此为止，更详细的使用教程，请参照<a href="http://blog.hming.org/2019/04/04/sandbox-hdp-shi-yong-xiang-jie/">SandBox-HDP使用详解</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>HDP</tag>
        <tag>SandBox</tag>
        <tag>虚拟机</tag>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>安装SandBox HDP（Docker版）</title>
    <url>/2019/04/02/an-zhuang-sandbox-hdp-docker-ban/</url>
    <content><![CDATA[<p>参考官网教程：<a href="https://hortonworks.com/tutorial/sandbox-deployment-and-install-guide/section/3/" target="_blank" rel="noopener">Deploying Hortonworks Sandbox on Docker</a></p>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><table>
<thead>
<tr>
<th align="center">方面</th>
<th align="center">要求</th>
</tr>
</thead>
<tbody><tr>
<td align="center">软件</td>
<td align="center"><a href="http://blog.hming.org/2018/09/18/Docker%E6%9B%BF%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#%E5%AE%89%E8%A3%85">安装docker</a></td>
</tr>
<tr>
<td align="center">内存</td>
<td align="center">官方推荐docker容器至少10G</td>
</tr>
<tr>
<td align="center">磁盘</td>
<td align="center">docker镜像目录至少30G（sandbox镜像27.5G）</td>
</tr>
</tbody></table>
<h3 id="下载脚本文件"><a href="#下载脚本文件" class="headerlink" title="下载脚本文件"></a>下载脚本文件</h3><p>到<a href="https://hortonworks.com/downloads/#sandbox" target="_blank" rel="noopener">官网</a>下载zip格式的shell脚本文件<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-docker/docker%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD.png" alt="脚本下载"><br>下载可能需要注册，随便填就行了。压缩包内容如下：<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-docker/docker%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E9%A2%84%E8%A7%88.png" alt="">)<img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-docker/docker%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E9%A2%84%E8%A7%882.png" alt=""><br>需要将脚本上传到Linux并解压</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
assets  docker-deploy-hdp30.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h3><h4 id="1-在Linux中执行docker-deploy-hdp30-sh脚本，拉取镜像，运行容器"><a href="#1-在Linux中执行docker-deploy-hdp30-sh脚本，拉取镜像，运行容器" class="headerlink" title="1. 在Linux中执行docker-deploy-hdp30.sh脚本，拉取镜像，运行容器"></a>1. 在Linux中执行<code>docker-deploy-hdp30.sh</code>脚本，拉取镜像，运行容器</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># sh docker-deploy-hdp30.sh </span>
+ registry<span class="token operator">=</span>hortonworks
+ name<span class="token operator">=</span>sandbox-hdp
+ version<span class="token operator">=</span>3.0.1
+ proxyName<span class="token operator">=</span>sandbox-proxy
+ proxyVersion<span class="token operator">=</span>1.0
+ flavor<span class="token operator">=</span>hdp
+ <span class="token keyword">echo</span> hdp
+ <span class="token function">mkdir</span> -p sandbox/proxy/conf.d
+ <span class="token function">mkdir</span> -p sandbox/proxy/conf.stream.d
+ docker pull hortonworks/sandbox-hdp:3.0.1
Trying to pull repository docker.io/hortonworks/sandbox-hdp <span class="token punctuation">..</span>. 
3.0.1: Pulling from docker.io/hortonworks/sandbox-hdp
70799bbf2226: Pull complete 
40963917cdad: Pull complete 
3fe9adbb8d7e: Pull complete 
ee3ec4e8cb3d: Pull complete 
7ea5917732c0: Pull complete 
2d951411620c: Pull complete 
f4c5e354e7fd: Pull complete 
22ffa6ef360f: Pull complete 
2060aa0f3751: Pull complete 
ca01ba34744d: Pull complete 
83326dded077: Pull complete 
eb3d71b90b73: Pull complete 
bdd1cab41c81: Pull complete 
500cc770c4bd: Pull complete 
0cb1decd5474: Pull complete 
b9591f4b6855: Pull complete 
f28e56086127: Pull complete 
e7de4e7d0bca: Pull complete 
ec77967d2166: Pull complete 
4fdcae170114: Pull complete 
6347f5df8ffc: Pull complete 
6a6ecc232709: Pull complete 
ea845898ff50: Pull complete 
02135573b1bf: Pull complete 
cb0176867cd8: Pull complete 
3c08321268fd: Pull complete 
82e82a97c465: Pull complete 
8aaaa48ed101: Pull complete 
74b321ac2ac5: Pull complete 
569da02c0a66: Pull complete 
af40820407ef: Pull complete 
Digest: sha256:7b767af7b42030fb1dd0f672b801199241e6bef1258e3ce57361edb779d95921
Status: Downloaded newer image <span class="token keyword">for</span> docker.io/hortonworks/sandbox-hdp:3.0.1
+ docker pull hortonworks/sandbox-proxy:1.0
Trying to pull repository docker.io/hortonworks/sandbox-proxy <span class="token punctuation">..</span>. 
1.0: Pulling from docker.io/hortonworks/sandbox-proxy
951bdea65c93: Pull complete 
4b9047c5fbbb: Pull complete 
773156407aae: Pull complete 
d8524176841d: Pull complete 
Digest: sha256:42e4cfbcbb76af07e5d8f47a183a0d4105e65a1e7ef39fe37ab746e8b2523e9e
Status: Downloaded newer image <span class="token keyword">for</span> docker.io/hortonworks/sandbox-proxy:1.0
+ <span class="token string">'['</span> hdp <span class="token operator">==</span> hdf <span class="token string">']'</span>
+ <span class="token string">'['</span> hdp <span class="token operator">==</span> hdp <span class="token string">']'</span>
+ hostname<span class="token operator">=</span>sandbox-hdp.hortonworks.com
++ docker images
++ <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span>
++ <span class="token function">grep</span> hortonworks/sandbox-hdp
+ version<span class="token operator">=</span>3.0.1
+ docker network create cda
7f641a6c16cf73df1079f241e76a318f3094f4303feaeae1c0a50c1b58c9d1ee
+ docker run --privileged --name sandbox-hdp -h sandbox-hdp.hortonworks.com --network<span class="token operator">=</span>cda --network-alias<span class="token operator">=</span>sandbox-hdp.hortonworks.com -d hortonworks/sandbox-hdp:3.0.1
59cb51cd71faa11218a12ee3f8c8ea1e58790025428a4573e476c1ddd118c202
+ <span class="token keyword">echo</span> <span class="token string">' Remove existing postgres run files. Please wait'</span>
 Remove existing postgres run files. Please <span class="token function">wait</span>
+ <span class="token function">sleep</span> 2
+ docker <span class="token function">exec</span> -t sandbox-hdp sh -c <span class="token string">'rm -rf /var/run/postgresql/*; systemctl restart postgresql-9.6.service;'</span>
+ <span class="token function">sed</span> s/sandbox-hdp-security/sandbox-hdp/g assets/generate-proxy-deploy-script.sh
+ <span class="token function">mv</span> -f assets/generate-proxy-deploy-script.sh.new assets/generate-proxy-deploy-script.sh
+ <span class="token function">chmod</span> +x assets/generate-proxy-deploy-script.sh
+ assets/generate-proxy-deploy-script.sh
+ <span class="token function">grep</span> MINGW
+ <span class="token function">uname</span>
+ <span class="token function">chmod</span> +x sandbox/proxy/proxy-deploy.sh
+ sandbox/proxy/proxy-deploy.sh
c1f52cfec560982477e4b6c69f4cc95309bd93907196761ed5eff7222744743e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>注意：镜像文件特别大，国内拉取非常慢，可通过代理等方式拉取。</p>
</blockquote>
<h4 id="2-使用docker-ps查看生成的容器"><a href="#2-使用docker-ps查看生成的容器" class="headerlink" title="2. 使用docker ps查看生成的容器"></a>2. 使用<code>docker ps</code>查看生成的容器</h4><p><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-docker/docker-ps-hdp-output.jpg" alt=""><br>可以看到有两个容器生成正在运行<br><code>sandbox-proxy</code>容器负责将HDP中的各个端口映射到主机上<br><code>sandbox-hdp</code>则是HDP主要环境的容器，所有的hdp组件都是在这个容器里面运行</p>
<h4 id="3-执行完脚本，相应的目录下会生成一个文件sandbox-flavor和一个文件夹sandbox"><a href="#3-执行完脚本，相应的目录下会生成一个文件sandbox-flavor和一个文件夹sandbox" class="headerlink" title="3. 执行完脚本，相应的目录下会生成一个文件sandbox-flavor和一个文件夹sandbox"></a>3. 执行完脚本，相应的目录下会生成一个文件<code>sandbox-flavor</code>和一个文件夹<code>sandbox</code></h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos4 opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
assets  docker-deploy-hdp30.sh  sandbox  sandbox-flavor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="4-脚本文件只需要执行一次，如果需要停止或重启HDP环境，只需要停止-重启相应的docker容器"><a href="#4-脚本文件只需要执行一次，如果需要停止或重启HDP环境，只需要停止-重启相应的docker容器" class="headerlink" title="4. 脚本文件只需要执行一次，如果需要停止或重启HDP环境，只需要停止/重启相应的docker容器"></a>4. 脚本文件只需要执行<code>一次</code>，如果需要停止或重启HDP环境，只需要停止/重启相应的docker容器</h4><p>停止HDP集群</p>
<pre class="line-numbers language-bash"><code class="language-bash">docker stop sandbox-hdp
docker stop sandbox-proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>启动HDP集群</p>
<pre class="line-numbers language-bash"><code class="language-bash">docker start sandbox-hdp
docker start sandbox-proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>删除HDP容器</p>
<pre class="line-numbers language-bash"><code class="language-bash">docker stop sandbox-hdp
docker stop sandbox-proxy
docker <span class="token function">rm</span> sandbox-hdp
docker <span class="token function">rm</span> sandbox-proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>移除sandbox镜像</p>
<pre class="line-numbers language-bash"><code class="language-bash">docker rmi hortonworks/sandbox-hdp:<span class="token punctuation">{</span>release<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>上图中的1080端口为sandbox端口，可以通过浏览器访问该端口，得到以下界面：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/sandbox%E9%A1%B5%E9%9D%A2.png" alt="sandbox页面"><br>左侧launch dashboard直接进入ambari管理界面，右侧则是一些链接，包括ambari管理地址、Ranger地址、DAS地址等<br>4200端口则提供了一个浏览器访问命令行的接口：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AEhdp%E5%AE%B9%E5%99%A8.png" alt="浏览器访问hdp容器"><br>使用<code>root</code>登录，默认密码为<code>hadoop</code>，第一次登录会提示修改root密码，对密码强度会有要求</p>
<p>本文到此为止，更详细的使用教程，请参照<a href="http://blog.hming.org/2019/04/04/sandbox-hdp-shi-yong-xiang-jie/">SandBox-HDP使用详解</a></p>
<h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos4 opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker logs sandbox-proxy</span>
2019/04/04 05:53:28 <span class="token punctuation">[</span>emerg<span class="token punctuation">]</span> 1<span class="token comment" spellcheck="true">#1: host not found in upstream "sandbox-hdp" in /etc/nginx/conf.d/http-hdp.conf:9</span>
nginx: <span class="token punctuation">[</span>emerg<span class="token punctuation">]</span> host not found <span class="token keyword">in</span> upstream <span class="token string">"sandbox-hdp"</span> <span class="token keyword">in</span> /etc/nginx/conf.d/http-hdp.conf:9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>这种情况是因为docker网络没有配置好，导致proxy容器无法使用nginx代理hdp容器<br>检查docker网络配置</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Docker</tag>
        <tag>HDP</tag>
        <tag>SandBox</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux制作离线yum源</title>
    <url>/2019/03/29/linux-zhi-zuo-chi-xian-yum-yuan/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/huangjin0507/article/details/51351807" target="_blank" rel="noopener">参考</a></p>
<h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><ol>
<li>制作或挂载一个本地yum源目录</li>
<li>修改或增加repo配置文件指向</li>
</ol>
<h3 id="离线yum包制作"><a href="#离线yum包制作" class="headerlink" title="离线yum包制作"></a>离线yum包制作</h3><h4 id="利用官方包"><a href="#利用官方包" class="headerlink" title="利用官方包"></a>利用官方包</h4><h5 id="下载ISO文件"><a href="#下载ISO文件" class="headerlink" title="下载ISO文件"></a>下载ISO文件</h5><p>到官网<a href="http://isoredirect.centos.org/" target="_blank" rel="noopener">http://isoredirect.centos.org/</a>下载镜像包，尽量下载<code>Everything ISO</code>版本，这里面的包最全，另外一个“DVD ISO”是通用版，里面的包并不全，还有一个“Minimal ISO”是Centos最小安装版（相当于是windows的纯净系统）。<br>下载文件名如：CentOS-7-x86_64-Everything-1810.iso</p>
<h5 id="挂载ISO到目录"><a href="#挂载ISO到目录" class="headerlink" title="挂载ISO到目录"></a>挂载ISO到目录</h5><h4 id="自己制作包"><a href="#自己制作包" class="headerlink" title="自己制作包"></a>自己制作包</h4><h5 id="查看rpm包依赖与下载依赖包"><a href="#查看rpm包依赖与下载依赖包" class="headerlink" title="查看rpm包依赖与下载依赖包"></a>查看rpm包依赖与下载依赖包</h5><ol>
<li><p>查看.rpm 包依赖：<br><code>rpm -qpR [package]</code></p>
</li>
<li><p>通过<code>yum install --downloadonly --downloaddir=[download_dir] [package]</code> 来只下载所有依赖包不安装包<strong><code>(前提是当前环境没有安装该包)</code></strong></p>
<blockquote>
<p>在CentOS/RHEL 6或更早期的版本中，你需要安装一个单独yum插件(名称为<code>yum-plugin-downloadonly</code>)才能使用<code>--downloadonly</code>命令选项：</p>
</blockquote>
<pre class="line-numbers language-bash"><code class="language-bash">yum <span class="token function">install</span> -y yum-plugin-downloadonly
<span class="token comment" spellcheck="true">#如果没有该插件，你会在使用yum时得到以下错误：</span>
Command line error: no such option: --downloadonly<span class="token operator">&lt;</span>/package<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>运行<code>yum list [package] --showduplicates</code> 来查看包的多个版本</p>
</li>
</ol>
<h5 id="利用rpm包制作yum包"><a href="#利用rpm包制作yum包" class="headerlink" title="利用rpm包制作yum包"></a>利用rpm包制作yum包</h5><ol>
<li>安装<code>createrepo</code>工具<br><code>createrepo</code>命令用来制作yum包，没有安装该软件可以通过下载<code>createrepo</code>的rpm包，通过rpm命令进行安装。</li>
<li>将所有的rpm包放到一个目录下</li>
<li>到rpm包的目录执行<code>createrepo .</code>命令<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop001 yum-repo<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># createrepo .</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>之后会生成一个<code>repodata</code>的目录,该目录就成了一个yum源</li>
</ol>
<h3 id="离线yum源配置"><a href="#离线yum源配置" class="headerlink" title="离线yum源配置"></a>离线yum源配置</h3><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>yum</tag>
        <tag>离线</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux修改命令终端提示符</title>
    <url>/2019/03/29/linux-xiu-gai-ming-ling-zhong-duan-ti-shi-fu/</url>
    <content><![CDATA[<h3 id="命令行提示符代表含义"><a href="#命令行提示符代表含义" class="headerlink" title="命令行提示符代表含义"></a>命令行提示符代表含义</h3><p>命令行提示符一般格式含义：<br><code>[root@sandbox ~]#</code></p>
<blockquote>
<p>其中@前<code>root</code>表示当前用户，@后<code>sandbox</code>表示当前主机名，<code>~</code>表示当前目录为家目录</p>
</blockquote>
<p>Linux命令行结尾的提示符有<code>#</code>和<code>$</code>两种不同的符号，如下所示：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#    #&lt;==这是超级管理员root用户对应的命令行。</span>
<span class="token punctuation">[</span>liming@sandbox ~<span class="token punctuation">]</span>$  <span class="token comment" spellcheck="true">#&lt;==这是普通用户liming对应的命令行。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="修改命令行提示符格式"><a href="#修改命令行提示符格式" class="headerlink" title="修改命令行提示符格式"></a>修改命令行提示符格式</h3><p>Linux命令提示符由PS1环境变量控制，可以通过全局配置文件<code>/etc/bashrc</code>或<code>/etc/profile</code>中进行按需配置和调整。<br>查看当前PS1设置：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># set|grep PS1</span>
PS1<span class="token operator">=</span><span class="token string">'[\u@\h \W]\$ '</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="PS1变量"><a href="#PS1变量" class="headerlink" title="PS1变量"></a>PS1变量</h4><p>最终使用：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">export</span> PS1<span class="token operator">=</span><span class="token string">'[\[\e[32;1m\]\u@\h \W\[\e[0m\]]\$ '</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>参考：<a href="https://blog.51cto.com/oldboy/1926142" target="_blank" rel="noopener">1</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>命令行提示符</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Alpine容器介绍</title>
    <url>/2019/03/06/docker-alpine-rong-qi-jie-shao/</url>
    <content><![CDATA[<p><a href="http://www.voidcn.com/article/p-ulbbnkky-brh.html" target="_blank" rel="noopener">http://www.voidcn.com/article/p-ulbbnkky-brh.html</a><br><a href="https://blog.phpgao.com/docker_alpine.html" target="_blank" rel="noopener">https://blog.phpgao.com/docker_alpine.html</a><br><a href="https://marshal.ohtly.com/2016/12/21/docker-container-and-alpine-bash-not-found/" target="_blank" rel="noopener">https://marshal.ohtly.com/2016/12/21/docker-container-and-alpine-bash-not-found/</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>容器</category>
      </categories>
      <tags>
        <tag>容器</tag>
        <tag>Docker</tag>
        <tag>Alpine</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7离线安装HDF</title>
    <url>/2019/02/14/centos7-chi-xian-an-zhuang-hdf/</url>
    <content><![CDATA[<h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><p>已存在Ambari和HDP环境，Ambari搭建参照<a href="https://blog.hming.org/2019/01/09/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/">CentOS7离线安装HDP</a></p>
<h3 id="下载离线包"><a href="#下载离线包" class="headerlink" title="下载离线包"></a>下载离线包</h3><p><a href="https://docs.hortonworks.com/HDPDocuments/HDF3/HDF-3.3.1/release-notes/content/hdf_repository_locations.html" target="_blank" rel="noopener">HDF仓库地址</a><br>找到对应操作系统的包，下载HDF Management Pack与HDF RPM tarball两个包即可。（本文为CentOS7的包）</p>
<blockquote>
<p>注意：HDF RPM tarball包大小<code>3.6G</code>左右，HDF Management Pack包<code>96M</code>左右，请确保保存路径有足够空间</p>
</blockquote>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll -h</span>
total 3.7G
drwxr-xr-x 3 root      root  4.0K Jan 16 15:00 ambari
-rw-r--r-- 1 root      root  3.6G Dec 15 02:36 HDF-3.3.1.0-centos7-rpm.tar.gz
-rw-r--r-- 1 root      root   96M Dec 15 02:13 hdf-ambari-mpack-3.3.1.0-10.tar.gz
drwxr-xr-x 3 ambari-qa <span class="token function">users</span> 4.0K Dec 11 11:49 HDP
drwxr-xr-x 3 ambari-qa <span class="token function">users</span> 4.0K Aug 13  2018 HDP-UTILS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中ambari、HDP、HDP-UTILS为<a href="https://blog.hming.org/2019/01/09/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/">CentOS7离线安装HDP</a>中制作的yum本地源地址</p>
<h3 id="制作HDF-yum镜像源"><a href="#制作HDF-yum镜像源" class="headerlink" title="制作HDF yum镜像源"></a>制作HDF yum镜像源</h3><p>参考<a href="https://blog.hming.org/2019/01/09/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/#%E5%88%B6%E4%BD%9C%E6%9C%AC%E5%9C%B0%E6%BA%90">制作本地源</a>，将<code>HDF-3.3.1.0-centos7-rpm.tar.gz</code>包解压，制作yum本地源。</p>
<ol>
<li>解压到<code>httpd</code>服务路径(本文httpd服务路径为<code>/cloud/ambari</code>)</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>
/cloud/ambari
<span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -zxvf HDF-3.3.1.0-centos7-rpm.tar.gz </span>
<span class="token punctuation">[</span>root@node1 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll -h</span>
total 3.7G
drwxr-xr-x 3 root      root  4.0K Jan 16 15:00 ambari
drwxr-xr-x 3 ambari-qa <span class="token function">users</span> 4.0K Dec 15 02:19 HDF
-rw-r--r-- 1 root      root  3.6G Dec 15 02:36 HDF-3.3.1.0-centos7-rpm.tar.gz
-rw-r--r-- 1 root      root   96M Dec 15 02:13 hdf-ambari-mpack-3.3.1.0-10.tar.gz
drwxr-xr-x 3 ambari-qa <span class="token function">users</span> 4.0K Dec 11 11:49 HDP
drwxr-xr-x 3 ambari-qa <span class="token function">users</span> 4.0K Aug 13  2018 HDP-UTILS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>修改<code>./HDF/centos7/3.3.1.0-10/hdf.repo</code>文件为以下内容</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#VERSION_NUMBER=3.3.1.0-10</span>
<span class="token punctuation">[</span>HDF-3.3.1.0<span class="token punctuation">]</span>
name<span class="token operator">=</span>HDF Version - HDF-3.3.1.0
baseurl<span class="token operator">=</span>http://192.168.0.151:88/ambari/HDF/centos7/3.3.1.0-10
gpgcheck<span class="token operator">=</span>1
gpgkey<span class="token operator">=</span>http://192.168.0.151:88/ambari/HDF/centos7/3.3.1.0-10/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled<span class="token operator">=</span>1
priority<span class="token operator">=</span>1


<span class="token punctuation">[</span>HDP-UTILS-1.1.0.22<span class="token punctuation">]</span>
name<span class="token operator">=</span>HDP-UTILS Version - HDP-UTILS-1.1.0.22
baseurl<span class="token operator">=</span>http://192.168.0.151:88/ambari/HDP-UTILS/centos7/1.1.0.22
gpgcheck<span class="token operator">=</span>1
gpgkey<span class="token operator">=</span>http://192.168.0.151:88/ambari/HDP-UTILS/centos7/1.1.0.22/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled<span class="token operator">=</span>1
priority<span class="token operator">=</span>1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>1)其中192.168.0.151:88为httpd的路径和端口，需根据实际情况修改。<br>2)HDP-UTILS如果在HDP中已经配置过，则这里可以删除。</p>
</blockquote>
<ol start="3">
<li><p>拷贝<code>hdf.repo</code>文件到<code>/etc/yum.repos.d/</code>目录下，进行yum更新</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp hdf.repo /etc/yum.repos.d/</span>
<span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum clean all</span>
<span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum makecache</span>
<span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum repolist</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>如果yum报错，则可能是hdf源没有配置成功，或者<code>hdf.repo</code>文件有误，更正后重试即可。</p>
</blockquote>
</li>
<li><p>将<code>hdf.repo</code>拷贝到其他节点，然后每个节点进行yum更新</p>
</li>
</ol>
<h3 id="安装HDF-Management-Pack"><a href="#安装HDF-Management-Pack" class="headerlink" title="安装HDF Management Pack"></a>安装HDF Management Pack</h3><p>此处参考<a href="https://docs.hortonworks.com/HDPDocuments/HDF3/HDF-3.3.1/installing-hdf-on-hdp/content/installing_the_hdf_management_pack.html" target="_blank" rel="noopener">官方文档</a></p>
<ol>
<li>使用<code>ambari-server install-mpack</code>命令安装Management Pack</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-server install-mpack --mpack=./hdf-ambari-mpack-3.3.1.0-10.tar.gz --verbose</span>
Using python  /usr/bin/python
Installing management pack
INFO: Loading properties from /etc/ambari-server/conf/ambari.properties
INFO: Installing management pack ./hdf-ambari-mpack-3.3.1.0-10.tar.gz
INFO: Loading properties from /etc/ambari-server/conf/ambari.properties
INFO: Download management pack to temp location /var/lib/ambari-server/data/tmp/hdf-ambari-mpack-3.3.1.0-10.tar.gz
INFO: Loading properties from /etc/ambari-server/conf/ambari.properties
<span class="token punctuation">..</span>.
INFO: Loading properties from /etc/ambari-server/conf/ambari.properties
INFO: Successfully switched addon services using config <span class="token function">file</span> /var/lib/ambari-server/resources/mpacks/hdf-ambari-mpack-3.3.1.0-10/hooks/HDF-3.3.json

INFO: Loading properties from /etc/ambari-server/conf/ambari.properties
Ambari Server <span class="token string">'install-mpack'</span> completed successfully.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>使用<code>ambari-server restart</code>命令重启ambari服务</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-server restart</span>
Using python  /usr/bin/python
Restarting ambari-server
Waiting <span class="token keyword">for</span> server stop<span class="token punctuation">..</span>.
Ambari Server stopped
Ambari Server running with administrator privileges.
Organizing resource files at /var/lib/ambari-server/resources<span class="token punctuation">..</span>.
Ambari database consistency check started<span class="token punctuation">..</span>.
Server PID at: /var/run/ambari-server/ambari-server.pid
Server out at: /var/log/ambari-server/ambari-server.out
Server log at: /var/log/ambari-server/ambari-server.log
Waiting <span class="token keyword">for</span> server start<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.
Server started listening on 8080

DB configs consistency check: no errors and warnings were found.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="更新ambari服务中HDF源地址"><a href="#更新ambari服务中HDF源地址" class="headerlink" title="更新ambari服务中HDF源地址"></a>更新ambari服务中HDF源地址</h3><p>参考<a href="https://docs.hortonworks.com/HDPDocuments/HDF3/HDF-3.3.1/installing-hdf-on-hdp/content/update_the_hdf_base_url.html" target="_blank" rel="noopener">官方文档</a></p>
<ol>
<li>浏览器进入Ambari服务地址（默认端口为8080）</li>
<li>在右上角admin下拉框中选择Manage Ambari</li>
<li>选择左边栏的Versions，点击HDP版本链接</li>
<li>此时会发现Repositories中多出HDF-3.3一栏，填入之前制作的本地源地址即可<br>本文地址为：<a href="http://192.168.0.151:88/ambari/HDF/centos7/3.3.1.0-10" target="_blank" rel="noopener">http://192.168.0.151:88/ambari/HDF/centos7/3.3.1.0-10</a></li>
<li>点击save保存</li>
<li>返回主界面，添加service时就会发现多了NiFi等HDF支持的组件</li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>HDF</tag>
        <tag>离线安装</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven使用Hortonworks依赖包</title>
    <url>/2019/01/12/maven-shi-yong-hortonworks-yi-lai-bao/</url>
    <content><![CDATA[<p>参考链接：<a href="https://community.hortonworks.com/questions/74655/where-can-i-find-hdp-maven-repos.html" target="_blank" rel="noopener">where can i find HDP maven Repos</a><br>在项目中连接HDP时，会出现HortonWorks的Maven依赖包下载不了的情况，只需要在pom.xml中添加如下代码：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>hortonworks.extrepo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Hortonworks HDP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://repo.hortonworks.com/content/repositories/releases<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>hortonworks.other<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Hortonworks Other Dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://repo.hortonworks.com/content/groups/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>另外，在<a href="https://mvnrepository.com" target="_blank" rel="noopener">mvnrepository官网</a>最新版可能没有更新，可以去<a href="http://repo.hortonworks.com/content/repositories/releases" target="_blank" rel="noopener">HortonWorks依赖包官网</a>查看最新版本</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Maven</tag>
        <tag>HDP</tag>
        <tag>Hortonworks</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7离线安装HDP</title>
    <url>/2019/01/09/centos7-chi-xian-an-zhuang-hdp/</url>
    <content><![CDATA[<h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><table>
<thead>
<tr>
<th align="center">节点</th>
<th align="center">IP地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">hdp001</td>
<td align="center">192.168.171.10</td>
</tr>
<tr>
<td align="center">hdp002</td>
<td align="center">192.168.171.11</td>
</tr>
<tr>
<td align="center">hdp003</td>
<td align="center">192.168.171.12</td>
</tr>
</tbody></table>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="磁盘准备"><a href="#磁盘准备" class="headerlink" title="磁盘准备"></a>磁盘准备</h4><p>离线安装包共计10G左右，解压后共计11G左右，请保证有足够空间。</p>
<h4 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h4><p>配置免密码登录教程请点击<a href="http://blog.hming.org/2018/09/16/linux-ji-qun-pei-zhi-mian-mi-ma-deng-lu/">这里</a></p>
<h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><p>查看防火墙状态<br><code>firewall-cmd --state</code>或<code>systemctl status firewalld</code><br>临时关闭防火墙<br><code>systemctl stop firewalld</code><br>禁止开机启动<br><code>systemctl disable firewalld</code></p>
<h4 id="设置SELinux模式"><a href="#设置SELinux模式" class="headerlink" title="设置SELinux模式"></a>设置SELinux模式</h4><p>不关闭可能导致Apache http服务无法访问。</p>
<ol>
<li>查看SELinux状态：<code>getenforce</code><br>如果是<code>Permissive</code>或者<code>Disabled</code>则可以继续安装，如果显示<code>enforcing</code>，则需要进行以下步骤修改模式</li>
<li>编辑<code>/etc/selinux/config</code>文件</li>
<li>修改<code>SELINUX=enforcing</code>行内容为<code>SELINUX=permissive</code>或者<code>SELINUX=disabled</code></li>
<li>重启系统或者运行<code>setenforce 0</code>命令禁用SELinux</li>
</ol>
<h4 id="安装jdk、Python（所有节点）、MySQL（安装一个即可）"><a href="#安装jdk、Python（所有节点）、MySQL（安装一个即可）" class="headerlink" title="安装jdk、Python（所有节点）、MySQL（安装一个即可）"></a>安装jdk、Python（所有节点）、MySQL（安装一个即可）</h4><ol>
<li>配置java环境教程点击<a href="http://blog.hming.org/2018/09/14/linux-xia-an-zhuang-java/">这里</a></li>
<li>安装/更新Python <code>yum -y install python</code></li>
<li>离线安装MySQL教程点击<a href="http://blog.hming.org/2018/12/08/centos7-xia-chi-xian-an-zhuang-mysql/">这里</a><br>新建数据库hive、ambari（为后续安装做准备）。</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash">mysql<span class="token operator">></span> create database hive<span class="token punctuation">;</span>
Query OK, 1 row affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>

mysql<span class="token operator">></span> create database ambari<span class="token punctuation">;</span>
Query OK, 1 row affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="下载离线包（包含HDP、ambari、HDP-UTILS、HDP-GPL（非必须））"><a href="#下载离线包（包含HDP、ambari、HDP-UTILS、HDP-GPL（非必须））" class="headerlink" title="下载离线包（包含HDP、ambari、HDP-UTILS、HDP-GPL（非必须））"></a>下载离线包（包含HDP、ambari、HDP-UTILS、HDP-GPL（非必须））</h4><p><a href="https://docs.hortonworks.com/HDPDocuments/Ambari-2.7.3.0/bk_ambari-installation/content/ambari_repositories.html" target="_blank" rel="noopener">Ambari-2.7.3.0下载地址</a><br><a href="https://docs.hortonworks.com/HDPDocuments/Ambari-2.7.3.0/bk_ambari-installation/content/hdp_31_repositories.html" target="_blank" rel="noopener">HDP-3.1.0.0相关包下载地址</a></p>
<blockquote>
<p>注意：ambari包大小<code>1.81G</code>左右，HDP包<code>8.44G</code>左右，HDP-UTILS包<code>86.4M</code>左右，请确保保存路径有足够空间</p>
</blockquote>
<h4 id="安装httpd服务（Apache服务，ambari-server节点安装即可）"><a href="#安装httpd服务（Apache服务，ambari-server节点安装即可）" class="headerlink" title="安装httpd服务（Apache服务，ambari-server节点安装即可）"></a>安装httpd服务（Apache服务，ambari-server节点安装即可）</h4><blockquote>
<p>注意：selinux未关闭可能导致Apache服务地址403。</p>
</blockquote>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install httpd</span>
<span class="token punctuation">[</span>root@hdp001 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service httpd restart</span>
Redirecting to /bin/systemctl restart httpd.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>访问服务器80端口，查看httpd服务是否开启。</p>
<blockquote>
<p>注意：配置信息如端口、映射路径可以通过编辑<code>/etc/httpd/conf/httpd.conf</code>文件进行修改</p>
</blockquote>
<h4 id="将压缩包解压到-var-www-html-下"><a href="#将压缩包解压到-var-www-html-下" class="headerlink" title="将压缩包解压到/var/www/html/下"></a>将压缩包解压到/var/www/html/下</h4><blockquote>
<p>注意：<br>1.如果httpd映射路径修改过，则以修改后的为准。<br>2.解压后一共约11G左右大小，请确保有足够空间。</p>
</blockquote>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>
/var/www/html/ambari
<span class="token punctuation">[</span>root@hdp001 html<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># du -h -d 1</span>
11G    ./ambari
11G    <span class="token keyword">.</span>
<span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
ambari-2.7.3.0-centos7.tar.gz  HDP-3.1.0.0-centos7-rpm.tar.gz  HDP-UTILS-1.1.0.22-centos7.tar.gz
<span class="token comment" spellcheck="true"># 解压...</span>
<span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
ambari ambari-2.7.3.0-centos7.tar.gz  HDP HDP-3.1.0.0-centos7-rpm.tar.gz  HDP-UTILS HDP-UTILS-1.1.0.22-centos7.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>访问服务器80端口相应/ambari/地址，可以访问到文件和文件夹即可<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/httpd%E8%AE%BF%E9%97%AEambari%E5%9C%B0%E5%9D%80.png" alt=""></p>
<h3 id="制作本地源"><a href="#制作本地源" class="headerlink" title="制作本地源"></a>制作本地源</h3><ol>
<li><p>修改repo源文件</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim ambari/centos7/2.7.3.0-139/ambari.repo</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p> 修改<code>baseurl</code>与<code>gpgkey</code>值为Apache httpd服务能访问到的地址，如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token comment" spellcheck="true">#VERSION_NUMBER=2.7.3.0-139</span>
 <span class="token punctuation">[</span>ambari-2.7.3.0<span class="token punctuation">]</span>
 <span class="token comment" spellcheck="true">#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json</span>
 name<span class="token operator">=</span>ambari Version - ambari-2.7.3.0
 baseurl<span class="token operator">=</span>http://hdp001:80/ambari/ambari/centos7/2.7.3.0-139
 gpgcheck<span class="token operator">=</span>1
 gpgkey<span class="token operator">=</span>http://hdp001:80/ambari/ambari/centos7/2.7.3.0-139/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
 priority<span class="token operator">=</span>1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p> HDP源修改方式同上</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim HDP/centos7/3.1.0.0-78/hdp.repo</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token comment" spellcheck="true">#VERSION_NUMBER=3.1.0.0-78</span>
 <span class="token punctuation">[</span>HDP-3.1.0.0<span class="token punctuation">]</span>
 name<span class="token operator">=</span>HDP Version - HDP-3.1.0.0
 baseurl<span class="token operator">=</span>http://hdp001:80/ambari/HDP/centos7/3.1.0.0-78
 gpgcheck<span class="token operator">=</span>1
 gpgkey<span class="token operator">=</span>http://hdp001:80/ambari/HDP/centos7/3.1.0.0-78/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
 enabled<span class="token operator">=</span>1
 priority<span class="token operator">=</span>1

 <span class="token punctuation">[</span>HDP-UTILS-1.1.0.22<span class="token punctuation">]</span>
 name<span class="token operator">=</span>HDP-UTILS Version - HDP-UTILS-1.1.0.22
 baseurl<span class="token operator">=</span>http://hdp001:80/ambari/HDP-UTILS/centos7/1.1.0.22
 gpgcheck<span class="token operator">=</span>1
 gpgkey<span class="token operator">=</span>http://hdp001:80/ambari/HDP-UTILS/centos7/1.1.0.22/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
 enabled<span class="token operator">=</span>1
 priority<span class="token operator">=</span>1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p> 将repo文件拷贝到<code>/etc/yum.repos.d/</code>目录</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp ambari/centos7/2.7.3.0-139/ambari.repo /etc/yum.repos.d/</span>
 <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp HDP/centos7/3.1.0.0-78/hdp.repo /etc/yum.repos.d/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>将repo文件拷贝到子节点</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /etc/yum.repos.d/</span>
 <span class="token punctuation">[</span>root@hdp001 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>
 /etc/yum.repos.d
 <span class="token punctuation">[</span>root@hdp001 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp ambari.repo hdp002:/etc/yum.repos.d/</span>
 ambari.repo                                                                 100%  329   467.5KB/s   00:00    
 <span class="token punctuation">[</span>root@hdp001 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp ambari.repo hdp003:/etc/yum.repos.d/</span>
 ambari.repo                                                                 100%  329   510.4KB/s   00:00    
 <span class="token punctuation">[</span>root@hdp001 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp hdp.repo hdp002:/etc/yum.repos.d/</span>
 hdp.repo                                                                    100%  483   570.3KB/s   00:00    
 <span class="token punctuation">[</span>root@hdp001 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp hdp.repo hdp003:/etc/yum.repos.d/</span>
 hdp.repo                                                                    100%  483   352.4KB/s   00:00 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>每个节点清除yum缓存，重新建立缓存<br> 该环节遇到报错说明yum源配置不正确，检查一下所有repo文件</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum clean all</span>
 <span class="token punctuation">..</span>.
 <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum makecache</span>
 <span class="token punctuation">..</span>.
 <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum repolist</span>
 <span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="安装Ambari-server"><a href="#安装Ambari-server" class="headerlink" title="安装Ambari-server"></a>安装Ambari-server</h3><p>本次安装使用第三方数据库MySQL模式，默认为PostgreSQL模式（生产环境不推荐）。<br>需提前准备好MySQL数据库连接jar包，<a href="http://blog.hming.org/2018/12/09/mysql-lian-jie-qu-dong-bao-xia-zai-fang-fa/">MySQL连接驱动包下载方法</a></p>
<h4 id="Ambari-server节点（主节点）安装Ambari-server"><a href="#Ambari-server节点（主节点）安装Ambari-server" class="headerlink" title="Ambari-server节点（主节点）安装Ambari-server"></a>Ambari-server节点（主节点）安装Ambari-server</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install ambari-server</span>
<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="初始化设置"><a href="#初始化设置" class="headerlink" title="初始化设置"></a>初始化设置</h4><p>使用<code>ambari-server setup</code>命令进行初始化操作。</p>
<blockquote>
<p>以下代码段中<code>#(1)</code>类似标识为注解。</p>
</blockquote>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-server setup</span>
Using python  /usr/bin/python
Setup ambari-server
Checking SELinux<span class="token punctuation">..</span>.
SELinux status is <span class="token string">'disabled'</span>
Customize user account <span class="token keyword">for</span> ambari-server daemon <span class="token punctuation">[</span>y/n<span class="token punctuation">]</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span>? y  <span class="token comment" spellcheck="true">#(1)选择自定义配置</span>
Enter user account <span class="token keyword">for</span> ambari-server daemon <span class="token punctuation">(</span>root<span class="token punctuation">)</span>:  <span class="token comment" spellcheck="true">#(2)选择用户</span>
Adjusting ambari-server permissions and ownership<span class="token punctuation">..</span>.
Checking firewall status<span class="token punctuation">..</span>.
Checking JDK<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>1<span class="token punctuation">]</span> Oracle JDK 1.8 + Java Cryptography Extension <span class="token punctuation">(</span>JCE<span class="token punctuation">)</span> Policy Files 8
<span class="token punctuation">[</span>2<span class="token punctuation">]</span> Custom JDK
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
Enter choice <span class="token punctuation">(</span>1<span class="token punctuation">)</span>: 2  <span class="token comment" spellcheck="true">#(3)选择2，自定义jdk</span>
WARNING: JDK must be installed on all hosts and JAVA_HOME must be valid on all hosts.
WARNING: JCE Policy files are required <span class="token keyword">for</span> configuring Kerberos security. If you plan to use Kerberos,please <span class="token function">make</span> sure JCE Unlimited Strength Jurisdiction Policy Files are valid on all hosts.
Path to JAVA_HOME: /home/jdk  <span class="token comment" spellcheck="true">#(4)输入自己安装的jdk路径</span>
Validating JDK on Ambari Server<span class="token punctuation">..</span>.done.
Check JDK version <span class="token keyword">for</span> Ambari Server<span class="token punctuation">..</span>.
JDK version found: 8
Minimum JDK version is 8 <span class="token keyword">for</span> Ambari. Skipping to setup different JDK <span class="token keyword">for</span> Ambari Server.
Checking GPL software agreement<span class="token punctuation">..</span>.
GPL License <span class="token keyword">for</span> LZO: https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html
Enable Ambari Server to download and <span class="token function">install</span> GPL Licensed LZO packages <span class="token punctuation">[</span>y/n<span class="token punctuation">]</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span>?   <span class="token comment" spellcheck="true">#(5)是否安装GPL，这里默认选择否</span>
Completing setup<span class="token punctuation">..</span>.
Configuring database<span class="token punctuation">..</span>.
Enter advanced database configuration <span class="token punctuation">[</span>y/n<span class="token punctuation">]</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span>? y  <span class="token comment" spellcheck="true">#(6)高级数据库配置，选是</span>
Configuring database<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
Choose one of the following options:
<span class="token punctuation">[</span>1<span class="token punctuation">]</span> - PostgreSQL <span class="token punctuation">(</span>Embedded<span class="token punctuation">)</span>
<span class="token punctuation">[</span>2<span class="token punctuation">]</span> - Oracle
<span class="token punctuation">[</span>3<span class="token punctuation">]</span> - MySQL / MariaDB
<span class="token punctuation">[</span>4<span class="token punctuation">]</span> - PostgreSQL
<span class="token punctuation">[</span>5<span class="token punctuation">]</span> - Microsoft SQL Server <span class="token punctuation">(</span>Tech Preview<span class="token punctuation">)</span>
<span class="token punctuation">[</span>6<span class="token punctuation">]</span> - SQL Anywhere
<span class="token punctuation">[</span>7<span class="token punctuation">]</span> - BDB
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
Enter choice <span class="token punctuation">(</span>1<span class="token punctuation">)</span>: 3  <span class="token comment" spellcheck="true">#(7)选择MySQL</span>
Hostname <span class="token punctuation">(</span>localhost<span class="token punctuation">)</span>: hdp002  <span class="token comment" spellcheck="true">#(8)MySQL地址，这里选择hdp002主机上安装的MySQL</span>
Port <span class="token punctuation">(</span>3306<span class="token punctuation">)</span>:    <span class="token comment" spellcheck="true">#(9)MySQL端口，默认3306</span>
Database name <span class="token punctuation">(</span>ambari<span class="token punctuation">)</span>:     <span class="token comment" spellcheck="true">#(10)MySQL中数据库名称，默认ambari（之前步骤提前建好的）</span>
Username <span class="token punctuation">(</span>ambari<span class="token punctuation">)</span>: root     <span class="token comment" spellcheck="true">#(11)MySQL用户名</span>
Enter Database Password <span class="token punctuation">(</span>bigdata<span class="token punctuation">)</span>:  <span class="token comment" spellcheck="true">#(12)MySQL密码</span>
Re-enter password:      <span class="token comment" spellcheck="true">#(13)再次输入密码</span>
Configuring ambari database<span class="token punctuation">..</span>.
Enter full path to custom jdbc driver: /home/mysql-connector-java-5.1.47.jar    <span class="token comment" spellcheck="true">#(14)这里输入提前准备好的MySQL连接包地址</span>
Copying /home/mysql-connector-java-5.1.47.jar to /usr/share/java
Configuring remote database connection properties<span class="token punctuation">..</span>.
WARNING: Before starting Ambari Server, you must run the following DDL directly from the database shell to create the schema:
/var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql     <span class="token comment" spellcheck="true">#(15)这里会提示开启ambari服务之前需要执行DDl建表语句</span>
Proceed with configuring remote database connection properties <span class="token punctuation">[</span>y/n<span class="token punctuation">]</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span>?    <span class="token comment" spellcheck="true">#(16)继续配置远程数据库连接属性</span>
Extracting system views<span class="token punctuation">..</span>.
ambari-admin-2.7.3.0.139.jar
<span class="token punctuation">..</span><span class="token punctuation">..</span>
Ambari repo <span class="token function">file</span> contains latest json url http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json, updating stacks repoinfos with it<span class="token punctuation">..</span>.
Adjusting ambari-server permissions and ownership<span class="token punctuation">..</span>.
Ambari Server <span class="token string">'setup'</span> completed successfully.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>根据上文提示执行DDL语句。<br>将<code>/var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql</code>文件拷贝到MySQL安装节点，并在ambari数据库中执行该脚本。</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql hdp002:/home</span>
Ambari-DDL-MySQL-CREATE.sql                                        100%   82KB  39.1MB/s   00:00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp002 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>
/home
<span class="token punctuation">[</span>root@hdp002 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
Ambari-DDL-MySQL-CREATE.sql  jdk

<span class="token punctuation">[</span>root@hdp002 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p</span>
Enter password: 
Welcome to the MySQL monitor.  Commands end with <span class="token punctuation">;</span> or \g.
Your MySQL connection <span class="token function">id</span> is 4
Server version: 5.7.24 MySQL Community Server <span class="token punctuation">(</span>GPL<span class="token punctuation">)</span>

Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2018, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.

mysql<span class="token operator">></span> use ambari<span class="token punctuation">;</span>
Database changed
mysql<span class="token operator">></span> <span class="token function">source</span> /home/Ambari-DDL-MySQL-CREATE.sql<span class="token punctuation">;</span>
<span class="token punctuation">..</span>.
<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="启动ambari-server"><a href="#启动ambari-server" class="headerlink" title="启动ambari-server"></a>启动ambari-server</h4><p>执行<code>ambari-server start</code>命令启动服务</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-server start</span>
Using python  /usr/bin/python
Starting ambari-server
Ambari Server running with administrator privileges.
ERROR: Exiting with <span class="token keyword">exit</span> code -1. 
REASON: Before starting Ambari Server, you must copy the MySQL JDBC driver JAR <span class="token function">file</span> to
/usr/share/java and <span class="token keyword">set</span> property <span class="token string">"server.jdbc.driver.path=[path/to/custom_jdbc_driver]"</span> <span class="token keyword">in</span> ambari.properties.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>报错。根据提示信息，将MySQL连接包拷贝到<code>/usr/share/java/</code>目录下，并设置参数路径（也可在之后安装hive相关组件时设置该参数）。<br>可能会遇到<code>/usr/share/java</code>不是一个目录的情况，此时删掉该文件，新建一个java目录即可。</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp /home/mysql-connector-java-5.1.47.jar /usr/share/java/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>再次启动ambari-server即可启动成功</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-server start</span>
Using python  /usr/bin/python
Starting ambari-server
Ambari Server running with administrator privileges.
Organizing resource files at /var/lib/ambari-server/resources<span class="token punctuation">..</span>.
Ambari database consistency check started<span class="token punctuation">..</span>.
Server PID at: /var/run/ambari-server/ambari-server.pid
Server out at: /var/log/ambari-server/ambari-server.out
Server log at: /var/log/ambari-server/ambari-server.log
Waiting <span class="token keyword">for</span> server start<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
Server started listening on 8080

DB configs consistency check: no errors and warnings were found.
Ambari Server <span class="token string">'start'</span> completed successfully.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="访问服务器8080端口"><a href="#访问服务器8080端口" class="headerlink" title="访问服务器8080端口"></a>访问服务器8080端口</h4><p>默认用户名和密码都为admin<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/ambari%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2.png" alt=""><br>根据提示安装集群<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E6%A0%B9%E6%8D%AE%E6%8F%90%E7%A4%BA%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4.png" alt=""><br>设置集群名字，比如my_hadoop<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E4%B8%BA%E9%9B%86%E7%BE%A4%E8%B5%B7%E5%90%8D%E5%AD%97.png" alt=""><br>选择HDP版本，配置yum源地址<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/HDP%E7%89%88%E6%9C%AC%E9%80%89%E6%8B%A9%E4%B8%8Eyum%E6%BA%90%E5%9C%B0%E5%9D%80%E9%85%8D%E7%BD%AE.png" alt=""><br>配置host与ssh<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E9%85%8D%E7%BD%AEhost%E4%B8%8Essh.png" alt=""><br>确认后开始在节点上安装ambari-agent<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/agent%E5%AE%89%E8%A3%85%E9%A1%B5%E9%9D%A2.png" alt=""></p>
<blockquote>
<p>安装agent时可能报错：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">..</span>.
Connection to node1 closed.
SSH <span class="token function">command</span> execution finished
host<span class="token operator">=</span>node1, exitcode<span class="token operator">=</span>0
Command end <span class="token function">time</span> 2019-01-15 15:52:22

Registering with the server<span class="token punctuation">..</span>.
Registration with the server failed.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>解决方法：<br>报错的节点编辑文件：<code>/etc/ambari-agent/conf/ambari-agent.ini</code>，将hostname修改为正确值</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">..</span>.
<span class="token punctuation">[</span>server<span class="token punctuation">]</span>
hostname<span class="token operator">=</span>master1
url_port<span class="token operator">=</span>8440
secured_url_port<span class="token operator">=</span>8441
connect_retry_delay<span class="token operator">=</span>10
max_reconnect_retry_delay<span class="token operator">=</span>30
<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</blockquote>
<p>ambari-agent安装成功<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/agent%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt=""><br>选择hadoop组件进行安装，建议安装少量组件，之后可以再添加<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E9%80%89%E6%8B%A9%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E7%9A%84hadoop%E7%BB%84%E4%BB%B6.png" alt=""><br>选择主节点安装位置（如NameNode）<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E9%80%89%E6%8B%A9%E4%B8%BB%E8%8A%82%E7%82%B9.png" alt=""><br>选择从节点安装位置（如DataNode）<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E9%80%89%E6%8B%A9%E4%BB%8E%E8%8A%82%E7%82%B9.png" alt=""><br>进行其他设置（如密码、数据保存路径、用户/用户组、参数配置等）<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE1.png" alt=""><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE2.png" alt=""><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE3.png" alt=""><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE4.png" alt=""><br>配置完成后，查看配置项是否无误，确认无误后点击发布开始安装<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E9%85%8D%E7%BD%AE%E5%AE%8C%E6%88%90%E7%A1%AE%E8%AE%A4%E5%AE%89%E8%A3%85.png" alt=""><br>等待安装进度完成即可，如果安装过程中出错，可根据报错信息进行修改直到安装成功<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/hadoop%E7%BB%84%E4%BB%B6%E5%AE%89%E8%A3%85%E8%BF%9B%E5%BA%A6.png" alt=""></p>
<h3 id="使用HDP"><a href="#使用HDP" class="headerlink" title="使用HDP"></a>使用HDP</h3><h4 id="HDP安装路径"><a href="#HDP安装路径" class="headerlink" title="HDP安装路径"></a>HDP安装路径</h4><table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">安装路径</th>
</tr>
</thead>
<tbody><tr>
<td align="center">HDP各组件默认安装目录</td>
<td align="center">/usr/hdp/版本号</td>
</tr>
<tr>
<td align="center">ambari-server安装目录</td>
<td align="center">/usr/lib/ambari-server</td>
</tr>
<tr>
<td align="center">ambari-agent安装目录</td>
<td align="center">/usr/lib/ambari-agent</td>
</tr>
<tr>
<td align="center">日志安装目录</td>
<td align="center">/var/log</td>
</tr>
</tbody></table>
<blockquote>
<p>ambari安装的hdp路径是不能更改的，但是可以用软链接将以上路径链接到其他路径。</p>
</blockquote>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>离线安装</tag>
        <tag>HDP</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive2之LLAP搭建</title>
    <url>/2019/01/03/hive2-zhi-llap-da-jian/</url>
    <content><![CDATA[<p><a href="https://cwiki.apache.org/confluence/display/Hive/LLAP" target="_blank" rel="noopener">官方介绍</a><br><a href="https://www.slideshare.net/Hadoop_Summit/llap-longlived-execution-in-hive" target="_blank" rel="noopener">llap-longlived-execution-in-hive</a><br><a href="https://zh.hortonworks.com/blog/announcing-apache-hive-2-1-25x-faster-queries-much/" target="_blank" rel="noopener">Hortonworks介绍</a><br>参考搭建文章：<br><a href="https://blog.csdn.net/zhoudetiankong/article/details/73089225" target="_blank" rel="noopener">tez hive llap安装</a><br><a href="https://blog.csdn.net/qingzhenli/article/details/72723018" target="_blank" rel="noopener">Hive llap服务安装说明及测试</a><br><a href="http://housong.github.io/2017/hive-llap/" target="_blank" rel="noopener">Hive Llap尝试（0）</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Hive</tag>
        <tag>LLAP</tag>
        <tag>Tez</tag>
      </tags>
  </entry>
  <entry>
    <title>Tez以及Tez UI安装方法</title>
    <url>/2019/01/03/tez-yi-ji-tez-ui-an-zhuang-fang-fa/</url>
    <content><![CDATA[<p>本文Tez版本：0.9.1</p>
<h3 id="安装Tez"><a href="#安装Tez" class="headerlink" title="安装Tez"></a>安装Tez</h3><p><a href="https://blog.csdn.net/YonJarLuo/article/details/78223843" target="_blank" rel="noopener">安装Tez 0.9.0</a></p>
<h3 id="Tez-UI安装"><a href="#Tez-UI安装" class="headerlink" title="Tez UI安装"></a>Tez UI安装</h3><p><a href="http://tez.apache.org/tez-ui.html" target="_blank" rel="noopener">官方文档</a><br><a href="http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/TimelineServer.html" target="_blank" rel="noopener">yarn timeline server</a><br>大致步骤：</p>
<ol>
<li>安装tomcat（ui需要运行在tomcat下）</li>
<li>将<code>tez-ui.war</code>包解压到tomcat中<code>webapp/tez-ui/</code>目录下</li>
<li>修改<code>../tomcat/webapps/tez-ui/config/configs.env</code>文件指定timeline地址和resourceManager地址</li>
<li>修改<code>tez-site.xml</code>文件，修改<code>yarn-site.xml</code>文件，使其支持timeline</li>
<li>启动timeline，<code>yarn-daemon.sh start timelineserver</code>或者<code>yarn timelineserver</code></li>
<li>启动tomcat，访问<code>http://hadoopmaster:8080/tez-ui</code>地址</li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Tez</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7下搭建HBase集群+HBase基本操作</title>
    <url>/2018/12/15/centos7-xia-da-jian-hbase-ji-qun-hbase-ji-ben-cao-zuo/</url>
    <content><![CDATA[<h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><table>
<thead>
<tr>
<th align="center">节点</th>
<th align="center">IP地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">hadoopmaster</td>
<td align="center">192.168.171.10</td>
</tr>
<tr>
<td align="center">hadoop001</td>
<td align="center">192.168.171.11</td>
</tr>
<tr>
<td align="center">hadoop002</td>
<td align="center">192.168.171.12</td>
</tr>
</tbody></table>
<h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>下载地址：<a href="http://archive.apache.org/dist/hbase/" target="_blank" rel="noopener">http://archive.apache.org/dist/hbase/</a><br>根据需要选择合适的版本，本文为<code>hbase-1.4.8-bin.tar.gz</code></p>
<h3 id="上传、解压"><a href="#上传、解压" class="headerlink" title="上传、解压"></a>上传、解压</h3><p>使用<a href="http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#rz%E4%B8%8Esz%EF%BC%88%E4%B8%8A%E4%BC%A0%E3%80%81%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%EF%BC%89">rz 命令</a>上传到服务器并解压</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -zxvf hbase-1.4.8-bin.tar.gz</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="配置环境变量（每个节点都需要配置）"><a href="#配置环境变量（每个节点都需要配置）" class="headerlink" title="配置环境变量（每个节点都需要配置）"></a>配置环境变量（每个节点都需要配置）</h3><p><code>vim /etc/profile</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># hbase</span>
<span class="token function">export</span> HBASE_HOME<span class="token operator">=</span>/home/hbase <span class="token comment" spellcheck="true"># hbase解压安装路径</span>
<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$HBASE_HOME</span>/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>配置后使用<code>source /etc/profile</code>刷新配置文件</p>
<h3 id="配置java路径，关闭内置zk集群"><a href="#配置java路径，关闭内置zk集群" class="headerlink" title="配置java路径，关闭内置zk集群"></a>配置java路径，关闭内置zk集群</h3><p>修改<code>hbase/conf/hbase-env.sh</code>，修改或增加以下内容</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">..</span>.
<span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/home/jdk
<span class="token punctuation">..</span>.
<span class="token function">export</span> HBASE_MANAGES_ZK<span class="token operator">=</span>fakse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><ol>
<li>修改<code>hbase/conf/hbase-site.xml</code>配置文件<br> 更多参数配置参考：<a href="http://hbase.apache.org/book.html#hbase_default_configurations" target="_blank" rel="noopener">hbase_default_configurations</a><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.cluster.distributed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.rootdir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hadoopmaster:9000/hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
              <span class="token comment" spellcheck="true">&lt;!-- 配置master节点ip地址/主机名 --></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.master.hostname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
              <span class="token comment" spellcheck="true">&lt;!-- 配置master节点端口 --></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.master.port<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>16000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.zookeeper.quorum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster:2181,hadoop001:2181,hadoop002:2181<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
     <span class="token comment" spellcheck="true">&lt;!-- 不需要
     &lt;property>
             &lt;name>hbase.zookeeper.property.dataDir&lt;/name>
             &lt;value>/home/centos/hbase/zk&lt;/value>
     &lt;/property>
     --></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
 <strong>注意：</strong><ul>
<li>需要指定HDFS中储存路径，hadoop集群搭建参考：<a href="http://blog.hming.org/2018/09/16/CentOS7%E4%B8%8B%E6%90%AD%E5%BB%BAHadoop%E9%9B%86%E7%BE%A4/">CentOS7下搭建Hadoop集群</a></li>
<li>需要指定Zookeeper服务，Zookeeper集群搭建参考：<a href="http://blog.hming.org/2018/12/15/%E6%90%AD%E5%BB%BAZookeeper%E9%9B%86%E7%BE%A4/">搭建Zookeeper集群</a></li>
</ul>
</li>
<li>修改<code>hbase/conf/regionservers</code>文件<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token comment" spellcheck="true"># 增加从节点地址（这里由于配置了hosts，直接使用主机名，也可以配ip地址）</span>
 hadoop001
 hadoop002<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="将文件夹copy到其他子节点"><a href="#将文件夹copy到其他子节点" class="headerlink" title="将文件夹copy到其他子节点"></a>将文件夹copy到其他子节点</h3>通过<a href="http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#scp%EF%BC%88%E8%B7%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%B7%E8%B4%9D%EF%BC%89">scp 命令</a>将修改好的文件夹拷贝到各个从节点上<pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster ~]# scp -r /opt/hbase-1.4.8/ hadoop001:/opt
...
[root@hadoopmaster ~]# scp -r /opt/hbase-1.4.8/ hadoop002:/opt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="确保HDFS与Zookeeper启动"><a href="#确保HDFS与Zookeeper启动" class="headerlink" title="确保HDFS与Zookeeper启动"></a>确保HDFS与Zookeeper启动</h3><code>xzk_cluster</code>脚本参考：<a href="http://blog.hming.org/2018/12/15/%E6%90%AD%E5%BB%BAZookeeper%E9%9B%86%E7%BE%A4/#zk%E9%9B%86%E7%BE%A4%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99">zk集群脚本编写</a><pre class="line-numbers language-bash"><code class="language-bash">xzk-cluster.sh start
start-dfs.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="启动HBase集群"><a href="#启动HBase集群" class="headerlink" title="启动HBase集群"></a>启动HBase集群</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># start-hbase.sh </span>
running master, logging to /home/hbase/logs/hbase-root-master-hadoopmaster.out
hadoop001: running regionserver, logging to /home/hbase/bin/<span class="token punctuation">..</span>/logs/hbase-root-regionserver-hadoop001.out
hadoop002: running regionserver, logging to /home/hbase/bin/<span class="token punctuation">..</span>/logs/hbase-root-regionserver-hadoop002.out<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<p><strong><code>出现警告：Java HotSpot(TM) 64-Bit Server VM warning: ignoring option PermSize=128m; support was removed in 8.0</code></strong><br>解决方法：<br>注释<code>hbase/conf/hbase-env.sh</code>脚本中以下代码，分发到节点</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Configure PermSize. Only needed in JDK7. You can safely remove it for JDK8+</span>
<span class="token function">export</span> HBASE_MASTER_OPTS<span class="token operator">=</span><span class="token string">"<span class="token variable">$HBASE_MASTER_OPTS</span> -XX:PermSize=128m -XX:MaxPermSize=128m -XX:ReservedCodeCacheSize=256m"</span>
<span class="token function">export</span> HBASE_REGIONSERVER_OPTS<span class="token operator">=</span><span class="token string">"<span class="token variable">$HBASE_REGIONSERVER_OPTS</span> -XX:PermSize=128m -XX:MaxPermSize=128m -XX:ReservedCodeCacheSize=256m"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="验证web界面"><a href="#验证web界面" class="headerlink" title="验证web界面"></a>验证web界面</h3><p>访问：<a href="http://hadoopmaster:16010" target="_blank" rel="noopener">http://hadoopmaster:16010</a></p>
<h3 id="单例管理HBase的每个进程"><a href="#单例管理HBase的每个进程" class="headerlink" title="单例管理HBase的每个进程"></a>单例管理HBase的每个进程</h3><pre class="line-numbers language-bash"><code class="language-bash">$<span class="token operator">></span> start-hbase.sh            //启动所有节点
$<span class="token operator">></span> stop-hbase.sh                //停止所有节点
$<span class="token operator">></span> hbase-daemon.sh start master        //启动master节点
$<span class="token operator">></span> hbase-daemons.sh start regionserver    //启动所有rs节点
$<span class="token operator">></span> hbase-daemon.sh start regionserver    //启动单个rs节点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="HBase在HDFS中目录表示含义"><a href="#HBase在HDFS中目录表示含义" class="headerlink" title="HBase在HDFS中目录表示含义"></a>HBase在HDFS中目录表示含义</h3><table>
<thead>
<tr>
<th align="center">路径</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/hbase/WALs</td>
<td align="center">写前日志</td>
</tr>
<tr>
<td align="center">/hbase/data</td>
<td align="center">数据</td>
</tr>
<tr>
<td align="center">/hbase/data/default</td>
<td align="center">hbase内置默认名字空间</td>
</tr>
<tr>
<td align="center">/hbase/data/hbase</td>
<td align="center">hbase内置的名字空间（相当于hive中的数据库）</td>
</tr>
</tbody></table>
<p>文件表示完整路径示意：<br><code>/hbase/data/${namespace}/${tablename}/${region_name}/${column_family}/${file_name}</code></p>
<h3 id="HBase常用命令"><a href="#HBase常用命令" class="headerlink" title="HBase常用命令"></a>HBase常用命令</h3><pre class="line-numbers language-bash"><code class="language-bash">$<span class="token operator">></span> hbase shell                //进入hbase shell
<span class="token variable">$hbase</span><span class="token operator">></span> <span class="token function">help</span>                //查看帮助
<span class="token variable">$hbase</span><span class="token operator">></span> list_namespace            //查看名字空间<span class="token punctuation">(</span>数据库<span class="token punctuation">)</span>
<span class="token variable">$hbase</span><span class="token operator">></span> list_namespace_tables <span class="token string">'hbase'</span>    //查看指定空间（hbase空间）下的表
<span class="token variable">$hbase</span><span class="token operator">></span> scan <span class="token string">'hbase:meta'</span>        //查看表
<span class="token variable">$hbase</span><span class="token operator">></span> create_namespace <span class="token string">'ns1'</span>        //创建名字空间
<span class="token variable">$hbase</span><span class="token operator">></span> create <span class="token string">'ns1:t1'</span> , <span class="token string">'f1'</span>        //创建表
<span class="token variable">$hbase</span><span class="token operator">></span> scan <span class="token string">'ns1:t1'</span>            //扫描表
<span class="token variable">$hbase</span><span class="token operator">></span> describe <span class="token string">'t1'</span> 或者 desc <span class="token string">'t1'</span>    //查看表结构
<span class="token variable">$hbase</span><span class="token operator">></span> truncate <span class="token string">'ns1:t1'</span>        //清空表数据
<span class="token variable">$hbase</span><span class="token operator">></span> put <span class="token string">'ns1:t1'</span>,<span class="token string">'row1'</span>,<span class="token string">'f1:id'</span>,1    //插入数据table,row,f:c,value
<span class="token variable">$hbase</span><span class="token operator">></span> delete <span class="token string">'ns1:t1'</span>,<span class="token string">'row1'</span>,<span class="token string">'f1:id'</span>    //删除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>HBase</tag>
        <tag>集群</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建Zookeeper集群</title>
    <url>/2018/12/15/da-jian-zookeeper-ji-qun/</url>
    <content><![CDATA[<h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><table>
<thead>
<tr>
<th align="center">节点</th>
<th align="center">IP地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">hadoopmaster</td>
<td align="center">192.168.171.10</td>
</tr>
<tr>
<td align="center">hadoop001</td>
<td align="center">192.168.171.11</td>
</tr>
<tr>
<td align="center">hadoop002</td>
<td align="center">192.168.171.12</td>
</tr>
</tbody></table>
<h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>下载地址：<a href="http://mirrors.shu.edu.cn/apache/zookeeper/" target="_blank" rel="noopener">http://mirrors.shu.edu.cn/apache/zookeeper/</a><br>根据需要选择合适的版本，本文为<code>zookeeper-3.4.12.tar.gz</code></p>
<h3 id="上传、解压"><a href="#上传、解压" class="headerlink" title="上传、解压"></a>上传、解压</h3><p>使用<a href="http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#rz%E4%B8%8Esz%EF%BC%88%E4%B8%8A%E4%BC%A0%E3%80%81%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%EF%BC%89">rz 命令</a>上传到服务器并解压</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -zxvf zookeeper-3.4.12.tar.gz </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="配置环境变量（每个节点都需要配置）"><a href="#配置环境变量（每个节点都需要配置）" class="headerlink" title="配置环境变量（每个节点都需要配置）"></a>配置环境变量（每个节点都需要配置）</h3><p><code>vim /etc/profile</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># zookeeper</span>
<span class="token function">export</span> ZK_HOME<span class="token operator">=</span>/home/zookeeper <span class="token comment" spellcheck="true"># zookeeper解压安装目录</span>
<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$ZK_HOME</span>/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>配置后使用<code>source /etc/profile</code>刷新配置文件</p>
<h3 id="配置参数文件"><a href="#配置参数文件" class="headerlink" title="配置参数文件"></a>配置参数文件</h3><ol>
<li>配置<code>conf/zoo.cfg</code>文件<br> 拷贝配置文件<code>cp zoo_sample.cfg zoo.cfg</code><pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
 configuration.xsl  log4j.properties  zoo_sample.cfg
 <span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp zoo_sample.cfg zoo.cfg</span>
 <span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
 configuration.xsl  log4j.properties  zoo.cfg  zoo_sample.cfg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
 编辑配置文件<code>(每个节点配置一样)</code><pre class="line-numbers language-bash"><code class="language-bash"> tickTime<span class="token operator">=</span>2000
 initLimit<span class="token operator">=</span>5
 syncLimit<span class="token operator">=</span>2
 dataDir<span class="token operator">=</span>/home/zookeeper/data
 clientPort<span class="token operator">=</span>2181
 server.1<span class="token operator">=</span>hadoopmaster:2888:3888
 server.2<span class="token operator">=</span>hadoop001:2888:3888
 server.3<span class="token operator">=</span>hadoop002:2888:3888<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>配置<code>data/myid</code>文件<br> 新建<code>myid</code>文件，路径为<code>zoo.cfg</code>文件中<code>dataDir</code>指定的路径，本文为<code>/home/zookeeper/data</code><br> hadoopmaster节点：<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo 1  >> /home/zookeeper/data/myid</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
 hadoop001节点：<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoop001 conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo 2  >> /home/zookeeper/data/myid</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
 hadoop002节点：<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoop002 conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo 3  >> /home/zookeeper/data/myid</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="启动服务器集群（每个节点都要启动）"><a href="#启动服务器集群（每个节点都要启动）" class="headerlink" title="启动服务器集群（每个节点都要启动）"></a>启动服务器集群（每个节点都要启动）</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /home/zookeeper/bin/zkServer.sh start</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop001 opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /home/zookeeper/bin/zkServer.sh start</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop002 opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /home/zookeeper/bin/zkServer.sh start</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
使用<code>zkServer.sh status</code>命令查看状态<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /home/zookeeper/bin/zkServer.sh status</span>
ZooKeeper JMX enabled by default
Using config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Mode: follower<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="zk集群脚本编写"><a href="#zk集群脚本编写" class="headerlink" title="zk集群脚本编写"></a>zk集群脚本编写</h3>将脚本放到<code>/usr/local/bin/</code>目录方便使用<br><code>vim /usr/local/bin/xzk-cluster.sh</code><br><code>chmod 755 /usr/local/bin/xzk-cluster.sh</code>修改权限<br>脚本内容如下<pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
cmd<span class="token operator">=</span><span class="token variable">$1</span>
servers<span class="token operator">=</span><span class="token string">"hadoopmaster hadoop001 hadoop002"</span>
<span class="token keyword">for</span> s <span class="token keyword">in</span> <span class="token variable">$servers</span> <span class="token punctuation">;</span> <span class="token keyword">do</span>
tput setaf 3
<span class="token keyword">echo</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> <span class="token variable">$s</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
tput setaf 7
<span class="token function">ssh</span> <span class="token variable">$s</span> <span class="token string">"source /etc/profile ; zkServer.sh <span class="token variable">$cmd</span>"</span>
<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
使用脚本范例：<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># xzk-cluster.sh status</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoopmaster <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
ZooKeeper JMX enabled by default
Using config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Mode: follower
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoop001 <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
ZooKeeper JMX enabled by default
Using config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Mode: leader
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoop002 <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
ZooKeeper JMX enabled by default
Using config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Mode: follower<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># xzk-cluster.sh stop</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoopmaster <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
ZooKeeper JMX enabled by default
Using config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Stopping zookeeper <span class="token punctuation">..</span>. STOPPED
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoop001 <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
ZooKeeper JMX enabled by default
Using config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Stopping zookeeper <span class="token punctuation">..</span>. STOPPED
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoop002 <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
ZooKeeper JMX enabled by default
Using config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Stopping zookeeper <span class="token punctuation">..</span>. STOPPED<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive使用Spark引擎替代MR（Hive on Spark）</title>
    <url>/2018/12/09/hive-shi-yong-spark-yin-qing-ti-dai-mr-hive-on-spark/</url>
    <content><![CDATA[<p><a href="https://cwiki.apache.org/confluence/display/Hive/Hive+on+Spark%3A+Getting+Started" target="_blank" rel="noopener">官方文档</a><br><a href="https://blog.csdn.net/Dante_003/article/details/72867493" target="_blank" rel="noopener">参考文章</a></p>
<p>编译成功示例：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">..</span>.
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> --- maven-antrun-plugin:1.8:run <span class="token punctuation">(</span>default<span class="token punctuation">)</span> @ spark-assembly_2.11 ---
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Executing tasks

main:
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Executed tasks
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Reactor Summary:
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> 
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Parent POM 2.0.0 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>02:06 min<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Tags <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>01:33 min<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Sketch <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 12.649 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Networking <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 22.077 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Shuffle Streaming Service <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span> 15.268 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Unsafe <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 24.808 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Launcher <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 54.464 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Core <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>07:09 min<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project GraphX <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 31.348 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Streaming <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>01:04 min<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Catalyst <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>02:22 min<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project SQL <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>02:50 min<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project ML Local Library <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 27.201 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project ML Library <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>02:25 min<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Tools <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>  7.599 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Hive <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>01:15 min<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project REPL <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>  9.934 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project YARN Shuffle Service <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 14.017 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project YARN <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 39.637 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Assembly <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>  3.878 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project External Flume Sink <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span> 24.054 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project External Flume <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 21.908 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project External Flume Assembly <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>  5.095 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Integration <span class="token keyword">for</span> Kafka 0.8 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span> 20.951 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Examples <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 37.750 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project External Kafka Assembly <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>  6.523 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Integration <span class="token keyword">for</span> Kafka 0.10 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 20.073 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Integration <span class="token keyword">for</span> Kafka 0.10 Assembly <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>  5.019 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Java 8 Tests 2.0.0 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 11.790 s<span class="token punctuation">]</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> BUILD SUCCESS
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Total time: 27:45 min
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Finished at: 2018-12-09T20:51:07+08:00
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------
+ <span class="token function">rm</span> -rf /opt/spark-2.0.0/dist
+ <span class="token function">mkdir</span> -p /opt/spark-2.0.0/dist/jars
+ <span class="token keyword">echo</span> <span class="token string">'Spark 2.0.0 built for Hadoop 2.7.2'</span>
+ <span class="token keyword">echo</span> <span class="token string">'Build flags: -Pyarn,hadoop-provided,hadoop-2.7,parquet-provided'</span>
<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Hive</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL连接驱动包下载方法</title>
    <url>/2018/12/09/mysql-lian-jie-qu-dong-bao-xia-zai-fang-fa/</url>
    <content><![CDATA[<h3 id="下载链接地址"><a href="#下载链接地址" class="headerlink" title="下载链接地址"></a>下载链接地址</h3><p>官方下载地址：<a href="https://dev.mysql.com/downloads/connector/j/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/connector/j/</a></p>
<h3 id="下载步骤"><a href="#下载步骤" class="headerlink" title="下载步骤"></a>下载步骤</h3><h4 id="选择版本"><a href="#选择版本" class="headerlink" title="选择版本"></a>选择版本</h4><p>默认为最新版本，可以按如下所示选择历史版本<br><img src="http://47.106.179.244/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%95%8C%E9%9D%A2%E9%80%89%E6%8B%A9%E5%85%B6%E4%BB%96%E7%89%88%E6%9C%AC.png" alt=""><br><img src="http://47.106.179.244/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%95%8C%E9%9D%A2%E9%80%89%E6%8B%A9%E5%85%B6%E4%BB%96%E7%89%88%E6%9C%AC2.png" alt=""></p>
<h4 id="选择操作系统"><a href="#选择操作系统" class="headerlink" title="选择操作系统"></a>选择操作系统</h4><p><img src="http://47.106.179.244/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%95%8C%E9%9D%A21.png" alt=""></p>
<h4 id="确认下载后缀为-tar-gz"><a href="#确认下载后缀为-tar-gz" class="headerlink" title="确认下载后缀为.tar.gz"></a>确认下载后缀为.tar.gz</h4><p><img src="http://47.106.179.244/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%95%8C%E9%9D%A22.png" alt=""></p>
<h4 id="跳过登录直接下载"><a href="#跳过登录直接下载" class="headerlink" title="跳过登录直接下载"></a>跳过登录直接下载</h4><p><img src="http://47.106.179.244/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%95%8C%E9%9D%A23.png" alt=""></p>
<h3 id="压缩包中jar包"><a href="#压缩包中jar包" class="headerlink" title="压缩包中jar包"></a>压缩包中jar包</h3><p><img src="http://47.106.179.244/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85tar%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6%E8%AF%A6%E6%83%85.png" alt=""></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>驱动包</tag>
        <tag>连接</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7下离线安装MySQL/Mariadb</title>
    <url>/2018/12/08/centos7-xia-chi-xian-an-zhuang-mysql/</url>
    <content><![CDATA[<h2 id="安装Mariadb"><a href="#安装Mariadb" class="headerlink" title="安装Mariadb"></a>安装Mariadb</h2><h3 id="配置离线yum源"><a href="#配置离线yum源" class="headerlink" title="配置离线yum源"></a>配置离线yum源</h3><p>配置了离线yum源之后就可以直接用yum命令进行安装，非常方便。<br>参考：<a href="http://blog.hming.org/2019/03/29/linux-zhi-zuo-chi-xian-yum-yuan/">Linux制作离线yum源</a></p>
<h3 id="安装Mariadb-1"><a href="#安装Mariadb-1" class="headerlink" title="安装Mariadb"></a>安装Mariadb</h3><p>直接用yum命令进行安装server</p>
<pre class="line-numbers language-bash"><code class="language-bash">yum -y <span class="token function">install</span> mariadb-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="修改配置文件（可选）"><a href="#修改配置文件（可选）" class="headerlink" title="修改配置文件（可选）"></a>修改配置文件（可选）</h3><p>修改配置文件<code>/etc/my.cnf</code>为以下内容</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
datadir<span class="token operator">=</span>/var/lib/mysql
socket<span class="token operator">=</span>/var/lib/mysql/mysql.sock
transaction-isolation <span class="token operator">=</span> READ-COMMITTED
<span class="token comment" spellcheck="true"># Disabling symbolic-links is recommended to prevent assorted security risks;</span>
<span class="token comment" spellcheck="true"># to do so, uncomment this line:</span>
symbolic-links <span class="token operator">=</span> 0
<span class="token comment" spellcheck="true"># Settings user and group are ignored when systemd is used.</span>
<span class="token comment" spellcheck="true"># If you need to run mysqld under a different user or group,</span>
<span class="token comment" spellcheck="true"># customize your systemd unit file for mariadb according to the</span>
<span class="token comment" spellcheck="true"># instructions in http://fedoraproject.org/wiki/Systemd</span>

key_buffer <span class="token operator">=</span> 16M
key_buffer_size <span class="token operator">=</span> 32M
max_allowed_packet <span class="token operator">=</span> 32M
thread_stack <span class="token operator">=</span> 256K
thread_cache_size <span class="token operator">=</span> 64
query_cache_limit <span class="token operator">=</span> 8M
query_cache_size <span class="token operator">=</span> 64M
query_cache_type <span class="token operator">=</span> 1

max_connections <span class="token operator">=</span> 550
<span class="token comment" spellcheck="true">#expire_logs_days = 10</span>
<span class="token comment" spellcheck="true">#max_binlog_size = 100M</span>

<span class="token comment" spellcheck="true">#log_bin should be on a disk with enough free space.</span>
<span class="token comment" spellcheck="true">#Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your</span>
<span class="token comment" spellcheck="true">#system and chown the specified folder to the mysql user.</span>
<span class="token comment" spellcheck="true">#建议单独磁盘装binlog，并且修改目录拥有者为mysql</span>
log_bin<span class="token operator">=</span>/var/lib/mysql/mysql_binary_log
<span class="token comment" spellcheck="true">#日志超过3天自动过期</span>
expire_logs_days <span class="token operator">=</span> 3

<span class="token comment" spellcheck="true">#In later versions of MariaDB, if you enable the binary log and do not set</span>
<span class="token comment" spellcheck="true">#a server_id, MariaDB will not start. The server_id must be unique within</span>
<span class="token comment" spellcheck="true">#the replicating group.</span>
server_id<span class="token operator">=</span>1

binlog_format <span class="token operator">=</span> mixed

read_buffer_size <span class="token operator">=</span> 2M
read_rnd_buffer_size <span class="token operator">=</span> 16M
sort_buffer_size <span class="token operator">=</span> 8M
join_buffer_size <span class="token operator">=</span> 8M

<span class="token comment" spellcheck="true"># InnoDB settings</span>
innodb_file_per_table <span class="token operator">=</span> 1
innodb_flush_log_at_trx_commit  <span class="token operator">=</span> 2
innodb_log_buffer_size <span class="token operator">=</span> 64M
innodb_buffer_pool_size <span class="token operator">=</span> 4G <span class="token comment" spellcheck="true">#内存大小根据实际情况调整，该值超过物理内存会导致Mariadb无法启动</span>
innodb_thread_concurrency <span class="token operator">=</span> 8
innodb_flush_method <span class="token operator">=</span> O_DIRECT
innodb_log_file_size <span class="token operator">=</span> 512M

<span class="token punctuation">[</span>mysqld_safe<span class="token punctuation">]</span>
log-error<span class="token operator">=</span>/var/log/mariadb/mariadb.log
pid-file<span class="token operator">=</span>/var/run/mariadb/mariadb.pid

<span class="token comment" spellcheck="true">#</span>
<span class="token comment" spellcheck="true"># include all files from the config directory</span>
<span class="token comment" spellcheck="true">#</span>
<span class="token operator">!</span>includedir /etc/my.cnf.d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="启动Mariadb，并加入开机自启动"><a href="#启动Mariadb，并加入开机自启动" class="headerlink" title="启动Mariadb，并加入开机自启动"></a>启动Mariadb，并加入开机自启动</h3><pre class="line-numbers language-bash"><code class="language-bash">systemctl start mariadb
systemctl <span class="token function">enable</span> mariadb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="初始化Mariadb"><a href="#初始化Mariadb" class="headerlink" title="初始化Mariadb"></a>初始化Mariadb</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh cdh6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql_secure_installation</span>
<span class="token punctuation">..</span>.
Enter current password <span class="token keyword">for</span> root <span class="token punctuation">(</span>enter <span class="token keyword">for</span> none<span class="token punctuation">)</span>: <span class="token comment" spellcheck="true">#第一次直接回车</span>
OK, successfully used password, moving on<span class="token punctuation">..</span>.
<span class="token punctuation">..</span>.
Set root password? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y
New password: <span class="token comment" spellcheck="true"># 设置root密码</span>
Re-enter new password: 
<span class="token punctuation">..</span>.
Remove anonymous users? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y
<span class="token punctuation">..</span>.
Disallow root login remotely? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> N
<span class="token punctuation">..</span>.
Remove <span class="token function">test</span> database and access to it <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y
<span class="token punctuation">..</span>.
Reload privilege tables now? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y
<span class="token punctuation">..</span>.
All done<span class="token operator">!</span>  If you've completed all of the above steps, your MariaDB
installation should now be secure.

Thanks <span class="token keyword">for</span> using MariaDB<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><h3 id="下载社区版离线安装包"><a href="#下载社区版离线安装包" class="headerlink" title="下载社区版离线安装包"></a>下载社区版离线安装包</h3><p>本文为<code>mysql-5.7.24-1.el7.x86_64.rpm-bundle.tar</code><br>下载路径：<a href="https://dev.mysql.com/downloads/mysql/5.7.html#downloads" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/5.7.html#downloads</a></p>
<ol>
<li>选择适合CentOS的版本<br><img src="http://47.106.179.244/centos7%E4%B8%8B%E5%AE%89%E8%A3%85mysql/%E4%B8%8B%E8%BD%BD%E9%A1%B5%E9%9D%A21.png" alt="下载页面1"></li>
<li>跳过登录直接下载<br><img src="http://47.106.179.244/centos7%E4%B8%8B%E5%AE%89%E8%A3%85mysql/%E4%B8%8B%E8%BD%BD%E9%A1%B5%E9%9D%A22.png" alt="下载页面2"></li>
</ol>
<h3 id="卸载系统自带的mariadb-lib"><a href="#卸载系统自带的mariadb-lib" class="headerlink" title="卸载系统自带的mariadb-lib"></a>卸载系统自带的mariadb-lib</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rpm -qa|grep mariadb</span>
mariadb-libs-5.5.56-2.el7.x86_64
<span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rpm -e --nodeps mariadb-libs-5.5.56-2.el7.x86_64</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="解压mysql"><a href="#解压mysql" class="headerlink" title="解压mysql"></a>解压mysql</h3><ol>
<li>使用<a href="http://http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#rz%E4%B8%8Esz%EF%BC%88%E4%B8%8A%E4%BC%A0%E3%80%81%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%EF%BC%89" target="_blank" rel="noopener">rz 命令</a>上传文件到服务器</li>
<li>解压<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -xf mysql-5.7.24-1.el7.x86_64.rpm-bundle.tar</span>
<span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>
mysql-5.7.24-1.el7.x86_64.rpm-bundle.tar
mysql-community-client-5.7.24-1.el7.x86_64.rpm
mysql-community-common-5.7.24-1.el7.x86_64.rpm
mysql-community-devel-5.7.24-1.el7.x86_64.rpm
mysql-community-embedded-5.7.24-1.el7.x86_64.rpm
mysql-community-embedded-compat-5.7.24-1.el7.x86_64.rpm
mysql-community-embedded-devel-5.7.24-1.el7.x86_64.rpm
mysql-community-libs-5.7.24-1.el7.x86_64.rpm
mysql-community-libs-compat-5.7.24-1.el7.x86_64.rpm
mysql-community-minimal-debuginfo-5.7.24-1.el7.x86_64.rpm
mysql-community-server-5.7.24-1.el7.x86_64.rpm
mysql-community-server-minimal-5.7.24-1.el7.x86_64.rpm
mysql-community-test-5.7.24-1.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>使用<code>rpm -ivh</code>命令依次进行安装<br>按顺序安装以下软件包</p>
<pre class="line-numbers language-bash"><code class="language-bash">mysql-community-common-5.7.24-1.el7.x86_64.rpm
mysql-community-libs-5.7.24-1.el7.x86_64.rpm
mysql-community-client-5.7.24-1.el7.x86_64.rpm
mysql-community-server-5.7.24-1.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>有时可能需要安装以下包</p>
<pre class="line-numbers language-bash"><code class="language-bash">mysql-community-libs-compat-5.7.24-1.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>安装具体如下</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rpm -ivh mysql-community-common-5.7.24-1.el7.x86_64.rpm </span>
警告：mysql-community-common-5.7.24-1.el7.x86_64.rpm: 头V3 DSA/SHA1 Signature, 密钥 ID 5072e1f5: NOKEY
准备中<span class="token punctuation">..</span>.                          <span class="token comment" spellcheck="true">################################# [100%]</span>
正在升级/安装<span class="token punctuation">..</span>.
   1:mysql-community-common-5.7.24-1.e<span class="token comment" spellcheck="true">################################# [100%]</span>
<span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rpm -ivh mysql-community-libs-5.7.24-1.el7.x86_64.rpm </span>
警告：mysql-community-libs-5.7.24-1.el7.x86_64.rpm: 头V3 DSA/SHA1 Signature, 密钥 ID 5072e1f5: NOKEY
准备中<span class="token punctuation">..</span>.                          <span class="token comment" spellcheck="true">################################# [100%]</span>
正在升级/安装<span class="token punctuation">..</span>.
   1:mysql-community-libs-5.7.24-1.el7<span class="token comment" spellcheck="true">################################# [100%]</span>
<span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rpm -ivh mysql-community-client-5.7.24-1.el7.x86_64.rpm </span>
警告：mysql-community-client-5.7.24-1.el7.x86_64.rpm: 头V3 DSA/SHA1 Signature, 密钥 ID 5072e1f5: NOKEY
准备中<span class="token punctuation">..</span>.                          <span class="token comment" spellcheck="true">################################# [100%]</span>
正在升级/安装<span class="token punctuation">..</span>.
   1:mysql-community-client-5.7.24-1.e<span class="token comment" spellcheck="true">################################# [100%]</span>
<span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rpm -ivh mysql-community-server-5.7.24-1.el7.x86_64.rpm</span>
警告：mysql-community-server-5.7.24-1.el7.x86_64.rpm: 头V3 DSA/SHA1 Signature, 密钥 ID 5072e1f5: NOKEY
准备中<span class="token punctuation">..</span>.                          <span class="token comment" spellcheck="true">################################# [100%]</span>
正在升级/安装<span class="token punctuation">..</span>.
   1:mysql-community-server-5.7.24-1.e<span class="token comment" spellcheck="true">################################# [100%]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>注意：安装mysql-community-server-5.7.24-1.el7.x86_64.rpm时可能会遇到问题:`</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rpm -ivh mysql-community-server-5.7.24-1.el7.x86_64.rpm </span>
警告：mysql-community-server-5.7.24-1.el7.x86_64.rpm: 头V3 DSA/SHA1 Signature, 密钥 ID 5072e1f5: NOKEY
错误：依赖检测失败：
   libaio.so.1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>64bit<span class="token punctuation">)</span> 被 mysql-community-server-5.7.24-1.el7.x86_64 需要
   libaio.so.1<span class="token punctuation">(</span>LIBAIO_0.1<span class="token punctuation">)</span><span class="token punctuation">(</span>64bit<span class="token punctuation">)</span> 被 mysql-community-server-5.7.24-1.el7.x86_64 需要
   libaio.so.1<span class="token punctuation">(</span>LIBAIO_0.4<span class="token punctuation">)</span><span class="token punctuation">(</span>64bit<span class="token punctuation">)</span> 被 mysql-community-server-5.7.24-1.el7.x86_64 需要
   net-tools 被 mysql-community-server-5.7.24-1.el7.x86_64 需要<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>解决办法：</p>
<pre class="line-numbers language-bash"><code class="language-bash">1）缺少libaio
<span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install libaio</span>
2）缺少net-tools
<span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install net-tools</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</blockquote>
<h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><p>初始化后会在<code>/var/log/mysqld.log</code>生成随机密码</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysqld --initialize</span>
<span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /var/log/mysqld.log</span>
2018-12-08T07:53:52.970182Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option <span class="token punctuation">(</span>see documentation <span class="token keyword">for</span> <span class="token function">more</span> details<span class="token punctuation">)</span>.
2018-12-08T07:53:54.251035Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> InnoDB: New log files created, LSN<span class="token operator">=</span>45790
2018-12-08T07:53:54.313973Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> InnoDB: Creating foreign key constraint system tables.
2018-12-08T07:53:54.388855Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> No existing UUID has been found, so we assume that this is the first <span class="token function">time</span> that this server has been started. Generating a new UUID: 68ce693c-fabe-11e8-a2ff-000c298184c2.
2018-12-08T07:53:54.389442Z 0 <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> Gtid table is not ready to be used. Table <span class="token string">'mysql.gtid_executed'</span> cannot be opened.
2018-12-08T07:53:54.390177Z 1 <span class="token punctuation">[</span>Note<span class="token punctuation">]</span> A temporary password is generated <span class="token keyword">for</span> root@localhost: qHQHahCw<span class="token punctuation">(</span>7n<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>最后一串随机字符串为初始密码，本文中为<code>qHQHahCw(7n)</code></p>
<h3 id="修改配置文件（可选）-1"><a href="#修改配置文件（可选）-1" class="headerlink" title="修改配置文件（可选）"></a>修改配置文件（可选）</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
datadir<span class="token operator">=</span>/var/lib/mysql
socket<span class="token operator">=</span>/var/lib/mysql/mysql.sock
transaction-isolation <span class="token operator">=</span> READ-COMMITTED
<span class="token comment" spellcheck="true"># Disabling symbolic-links is recommended to prevent assorted security risks;</span>
<span class="token comment" spellcheck="true"># to do so, uncomment this line:</span>
symbolic-links <span class="token operator">=</span> 0

key_buffer_size <span class="token operator">=</span> 32M
max_allowed_packet <span class="token operator">=</span> 32M
thread_stack <span class="token operator">=</span> 256K
thread_cache_size <span class="token operator">=</span> 64
query_cache_limit <span class="token operator">=</span> 8M
query_cache_size <span class="token operator">=</span> 64M
query_cache_type <span class="token operator">=</span> 1

max_connections <span class="token operator">=</span> 550
<span class="token comment" spellcheck="true">#expire_logs_days = 10</span>
<span class="token comment" spellcheck="true">#max_binlog_size = 100M</span>

<span class="token comment" spellcheck="true">#log_bin should be on a disk with enough free space.</span>
<span class="token comment" spellcheck="true">#Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your</span>
<span class="token comment" spellcheck="true">#system and chown the specified folder to the mysql user.</span>
<span class="token comment" spellcheck="true">#建议单独磁盘装binlog，并且修改目录拥有者为mysql</span>
log_bin<span class="token operator">=</span>/var/lib/mysql/mysql_binary_log
<span class="token comment" spellcheck="true">#日志超过3天自动过期</span>
expire_logs_days <span class="token operator">=</span> 3

<span class="token comment" spellcheck="true">#In later versions of MySQL, if you enable the binary log and do not set</span>
<span class="token comment" spellcheck="true">#a server_id, MySQL will not start. The server_id must be unique within</span>
<span class="token comment" spellcheck="true">#the replicating group.</span>
server_id<span class="token operator">=</span>1

binlog_format <span class="token operator">=</span> mixed

read_buffer_size <span class="token operator">=</span> 2M
read_rnd_buffer_size <span class="token operator">=</span> 16M
sort_buffer_size <span class="token operator">=</span> 8M
join_buffer_size <span class="token operator">=</span> 8M

<span class="token comment" spellcheck="true"># InnoDB settings</span>
innodb_file_per_table <span class="token operator">=</span> 1
innodb_flush_log_at_trx_commit  <span class="token operator">=</span> 2
innodb_log_buffer_size <span class="token operator">=</span> 64M
innodb_buffer_pool_size <span class="token operator">=</span> 4G <span class="token comment" spellcheck="true">#内存大小根据实际情况调整，该值超过物理内存会导致MySQL无法启动</span>
innodb_thread_concurrency <span class="token operator">=</span> 8
innodb_flush_method <span class="token operator">=</span> O_DIRECT
innodb_log_file_size <span class="token operator">=</span> 512M

<span class="token punctuation">[</span>mysqld_safe<span class="token punctuation">]</span>
log-error<span class="token operator">=</span>/var/log/mysqld.log
pid-file<span class="token operator">=</span>/var/run/mysqld/mysqld.pid

sql_mode<span class="token operator">=</span>STRICT_ALL_TABLES<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="修改用户及用户组，启动mysql数据库"><a href="#修改用户及用户组，启动mysql数据库" class="headerlink" title="修改用户及用户组，启动mysql数据库"></a>修改用户及用户组，启动mysql数据库</h3><p>修改mysql数据库目录的所属用户及其所属组，然后启动mysql数据库</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chown mysql:mysql /var/lib/mysql -R</span>
<span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start mysqld.service</span>
<span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl status mysqld.service</span>
● mysqld.service - MySQL Server
   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/mysqld.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: disabled<span class="token punctuation">)</span>
   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since 六 2018-12-08 15:59:12 CST<span class="token punctuation">;</span> 6s ago
     Docs: man:mysqld<span class="token punctuation">(</span>8<span class="token punctuation">)</span>
           http://dev.mysql.com/doc/refman/en/using-systemd.html
  Process: 23162 ExecStart<span class="token operator">=</span>/usr/sbin/mysqld --daemonize --pid-file<span class="token operator">=</span>/var/run/mysqld/mysqld.pid <span class="token variable">$MYSQLD_OPTS</span> <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, status<span class="token operator">=</span>0/SUCCESS<span class="token punctuation">)</span>
  Process: 23145 ExecStartPre<span class="token operator">=</span>/usr/bin/mysqld_pre_systemd <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, status<span class="token operator">=</span>0/SUCCESS<span class="token punctuation">)</span>
 Main PID: 23165 <span class="token punctuation">(</span>mysqld<span class="token punctuation">)</span>
   CGroup: /system.slice/mysqld.service
           └─23165 /usr/sbin/mysqld --daemonize --pid-file<span class="token operator">=</span>/var/run/mysqld/mysqld.pid

12月 08 15:59:10 hadoopmaster systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: Starting MySQL Server<span class="token punctuation">..</span>.
12月 08 15:59:12 hadoopmaster systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: Started MySQL Server.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h3><p>查看是否开启开机自启动</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster mysql-install<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl list-unit-files | grep mysqld</span>
mysqld.service                                enabled 
mysqld@.service                               disabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><code>注意：mysql5.7.23安装后已默认设置为开机启动，如果没有设置，可以使用下面命令设置为开机启动</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable mysqld.service</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="登录，更改root用户密码"><a href="#登录，更改root用户密码" class="headerlink" title="登录，更改root用户密码"></a>登录，更改root用户密码</h3><p>登录mysql，更改root用户密码<code>（系统强制要求，否则不能操作mysql）</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster mysql-install<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p'qHQHahCw(7n)'</span>
mysql: <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> Using a password on the <span class="token function">command</span> line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with <span class="token punctuation">;</span> or \g.
Your MySQL connection <span class="token function">id</span> is 2
Server version: 5.7.24

Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2018, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.

mysql<span class="token operator">></span> <span class="token keyword">set</span> password<span class="token operator">=</span>password<span class="token punctuation">(</span><span class="token string">'1234'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Query OK, 0 rows affected, 1 warning <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>

mysql<span class="token operator">></span> show databases<span class="token punctuation">;</span>
+--------------------+
<span class="token operator">|</span> Database           <span class="token operator">|</span>
+--------------------+
<span class="token operator">|</span> information_schema <span class="token operator">|</span>
<span class="token operator">|</span> mysql              <span class="token operator">|</span>
<span class="token operator">|</span> performance_schema <span class="token operator">|</span>
<span class="token operator">|</span> sys                <span class="token operator">|</span>
+--------------------+
4 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="远程登录授权"><a href="#远程登录授权" class="headerlink" title="远程登录授权"></a>远程登录授权</h2><p>命令为：<br><code>grant all privileges on *.* to 'root'@'%' identified by '1234' with grant option;</code><br><code>flush privileges;</code></p>
<blockquote>
<p><code>*.*</code> 表示授权任何库任何表，如果想只授权test库的user表可以写为：<code>test.user</code><br><code>'root'@'%'</code> 其中root表示以root用户授权，<code>@</code>为连接符，<code>%</code>表示匹配所有的主机，如果想单独给某主机授权，可以将<code>%</code>替换为需要授权的主机<code>ip地址</code><br><code>'1234'</code> 表示授权访问的密码，可以自行设置密码<br>设置授权后需要用<code>flush privileges</code>命令刷新一下</p>
</blockquote>
<p>示例：</p>
<pre class="line-numbers language-bash"><code class="language-bash">mysql<span class="token operator">></span> grant all privileges on *.* to <span class="token string">'root'</span>@<span class="token string">'%'</span> identified by <span class="token string">'1234'</span> with grant option<span class="token punctuation">;</span>
Query OK, 0 rows affected, 1 warning <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>

mysql<span class="token operator">></span> flush privileges<span class="token punctuation">;</span>
Query OK, 0 rows affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Linux</tag>
        <tag>Mariadb</tag>
      </tags>
  </entry>
  <entry>
    <title>使用图形化界面工具DbVisualizer连接Hive数据库</title>
    <url>/2018/12/08/shi-yong-tu-xing-hua-jie-mian-gong-ju-dbvisualizer-lian-jie-hive-shu-ju-ku/</url>
    <content><![CDATA[<p>参考链接：<a href="https://www.cnblogs.com/qingyunzong/p/8715250.html" target="_blank" rel="noopener">https://www.cnblogs.com/qingyunzong/p/8715250.html</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>Hive</tag>
        <tag>DbVisualizer</tag>
        <tag>图形化工具</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7下搭建Hive</title>
    <url>/2018/12/06/centos7-xia-da-jian-hive/</url>
    <content><![CDATA[<h3 id="搭建Hadoop集群"><a href="#搭建Hadoop集群" class="headerlink" title="搭建Hadoop集群"></a>搭建Hadoop集群</h3><p>参考<a href="http://blog.hming.org/2018/09/16/CentOS7%E4%B8%8B%E6%90%AD%E5%BB%BAHadoop%E9%9B%86%E7%BE%A4/">CentOS7下搭建Hadoop集群</a></p>
<h3 id="下载Hive压缩包"><a href="#下载Hive压缩包" class="headerlink" title="下载Hive压缩包"></a>下载Hive压缩包</h3><p>找到合适版本下载hive，本文压缩包为<code>apache-hive-2.3.4-bin.tar.gz</code><br><a href="http://ftp.riken.jp/net/apache/hive/" target="_blank" rel="noopener">下载地址</a></p>
<h3 id="解压，配置环境变量"><a href="#解压，配置环境变量" class="headerlink" title="解压，配置环境变量"></a>解压，配置环境变量</h3><ol>
<li><p>解压到指定目录（本文目录为/home/hive）<br><code>tar -zxvf apache-hive-2.3.4-bin.tar.gz</code></p>
</li>
<li><p>配置环境变量<br><code>vim /etc/profile</code>，添加以下代码</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># hive</span>
<span class="token function">export</span> HIVE_HOME<span class="token operator">=</span>/home/hive <span class="token comment" spellcheck="true"># 为hive解压目录</span>
<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">${HIVE_HOME}</span>/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>刷新配置文件<br><code>source /etc/profile</code></p>
</li>
</ol>
<h3 id="验证hive版本"><a href="#验证hive版本" class="headerlink" title="验证hive版本"></a>验证hive版本</h3><p><code>hive --version</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster hive<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hive --version</span>
Hive 2.3.4
Git git://daijymacpro-2.local/Users/daijy/commit/hive -r 56acdd2120b9ce6790185c679223b8b5e884aaf2
Compiled by daijy on Wed Oct 31 14:20:50 PDT 2018
From <span class="token function">source</span> with checksum 9f2d17b212f3a05297ac7dd40b65bab0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="hive-env-sh配置"><a href="#hive-env-sh配置" class="headerlink" title="hive-env.sh配置"></a>hive-env.sh配置</h3><ol>
<li>复制<code>/home/hive/conf/hive-env.sh.template</code> -&gt; <code>/home/hive/conf/hive-env.sh</code><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /home/hive/conf</span>
<span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp hive-env.sh.template hive-env.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li>修改<code>/home/hive/conf/hive-env.sh</code>，找到以下配置，根据实际情况修改<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/home/jdk <span class="token comment" spellcheck="true">#jdk安装目录</span>
<span class="token function">export</span> HADOOP_HOME<span class="token operator">=</span>/home/hadoop <span class="token comment" spellcheck="true">#hadoop安装目录</span>
<span class="token function">export</span> HIVE_HOME<span class="token operator">=</span>/home/hive <span class="token comment" spellcheck="true">#hive安装目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="hive-site-xml配置"><a href="#hive-site-xml配置" class="headerlink" title="hive-site.xml配置"></a>hive-site.xml配置</h3><ol>
<li><p>复制<code>/home/hive/conf/hive-default.template</code> -&gt; <code>/home/hive/conf/hive-site.xml</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp hive-default.xml.template  hive-site.xml</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>修改<code>/home/hive/conf/hive-site.xml</code>，找到文件中以下配置，根据实际情况修改<br>hive其他配置参考：<a href="https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties" target="_blank" rel="noopener">Hive Configuration Properties</a></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- mysql数据库配置 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionPassword<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>1234<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>mysql密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionUserName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>mysql用户名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionURL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>jdbc:mysql://hadoopmaster:3306/hive?useSSL=false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>JDBC连接路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionDriverName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>com.mysql.jdbc.Driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Driver class name for a JDBC metastore<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

<span class="token comment" spellcheck="true">&lt;!-- 其他配置 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.cli.print.header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>是否显示查询结果的列名，默认为不显示。 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.cli.print.current.db<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>是否显示数据库名称，默认为不显示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.server2.webui.port<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>10002<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>HiveServer2 Web页面端口设置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.exec.local.scratchdir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/home/hive/tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Hive作业的本地临时空间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.downloaded.resources.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/home/hive/downloads<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>用于在远程文件系统中添加资源的临时本地目录。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.querylog.location<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/home/hive/querylog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Hive 实时查询日志所在的目录，如果该值为空，将不创建实时的查询日志。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.server2.logging.operation.log.location<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/home/hive/server2_logs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>如果启用了日志记录功能，则存储操作日志的顶级目录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="复制mysql驱动到hive安装目录的lib下"><a href="#复制mysql驱动到hive安装目录的lib下" class="headerlink" title="复制mysql驱动到hive安装目录的lib下"></a>复制mysql驱动到hive安装目录的lib下</h3><p><code>mysql-connector-java-5.1.46.jar</code><br><a href="http://blog.hming.org/2018/12/09/MySQL连接驱动包下载方法/">点我查看驱动包下载方式</a></p>
<h3 id="初始化元数据"><a href="#初始化元数据" class="headerlink" title="初始化元数据"></a>初始化元数据</h3><ol>
<li>在mysql中创建hive数据库</li>
<li>运行hive的SchemaTool进行初始化hive的元数据<br><code>schematool -dbType mysql -initSchema</code><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /home/hive/bin</span>
<span class="token punctuation">[</span>root@hadoopmaster bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./schematool    # 查看帮助</span>
<span class="token punctuation">[</span>root@hadoopmaster bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./schematool -dbType mysql -initSchema</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Hive</tag>
        <tag>数据仓库</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Docker搭建Nginx图片服务器</title>
    <url>/2018/12/05/shi-yong-docker-da-jian-nginx-tu-pian-fu-wu-qi/</url>
    <content><![CDATA[<h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>见<a href="http://blog.hming.org/2018/09/18/Docker%E6%9B%BF%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/">Docker常用命令</a></p>
<h3 id="编写Nginx配置文件"><a href="#编写Nginx配置文件" class="headerlink" title="编写Nginx配置文件"></a>编写Nginx配置文件</h3><p><code>vim default.conf</code></p>
<pre class="line-numbers language-bash"><code class="language-bash">server <span class="token punctuation">{</span>
    listen       80<span class="token punctuation">;</span>
    server_name  localhost<span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">#(5)</span>
    <span class="token comment" spellcheck="true">#charset koi8-r;</span>
    <span class="token comment" spellcheck="true">#access_log  /var/log/nginx/host.access.log  main;</span>

    location / <span class="token punctuation">{</span>
        root   /usr/share/nginx/html<span class="token punctuation">;</span>
        index  index.html index.htm<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">#(1)</span>
    location /images/ <span class="token punctuation">{</span>
        root  /mnt/<span class="token punctuation">;</span>
        autoindex on<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#(2)</span>
        autoindex_exact_size off<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#(3)</span>
        autoindex_localtime on<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#(4)</span>
        charset utf-8,gbk<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#(5)</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">#error_page  404              /404.html;</span>

    <span class="token comment" spellcheck="true"># redirect server error pages to the static page /50x.html</span>
    <span class="token comment" spellcheck="true">#</span>
    error_page   500 502 503 504  /50x.html<span class="token punctuation">;</span>
    location <span class="token operator">=</span> /50x.html <span class="token punctuation">{</span>
        root   /usr/share/nginx/html<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参数说明：<br><code>(1)</code>：添加图片目录映射，映射目录为/mnt/images/<br><code>(2)</code>：在Nginx下默认是不允许列出整个目录的。如需此功能，将该项设置为on<br><code>(3)</code>：默认为on，显示出文件的确切大小，单位是bytes<br>    改为off后，显示出文件的大概大小，单位是kB或者MB或者GB<br><code>(4)</code>：默认为off，显示的文件时间为GMT时间<br>    注意:改为on后，显示的文件时间为文件的服务器时间<br><code>(5)</code>:设置编码（防止中文乱码），可以设置对全局生效或者部分路径生效</p>
</blockquote>
<h3 id="编写Dockerfile"><a href="#编写Dockerfile" class="headerlink" title="编写Dockerfile"></a>编写Dockerfile</h3><p><code>vim Dockerfile</code></p>
<pre class="line-numbers language-dockerfile"><code class="language-dockerfile"># 使用最小化镜像（只有17.7m）
FROM nginx:stable-alpine

# 这里替换为自己的信息
MAINTAINER liming <1322260665@qq.com>

# 覆盖容器里默认配置
COPY default.conf /etc/nginx/conf.d/default.conf

EXPOSE 80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h3><pre class="line-numbers language-bash"><code class="language-bash">docker build -t image-nginx <span class="token keyword">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="运行生成容器"><a href="#运行生成容器" class="headerlink" title="运行生成容器"></a>运行生成容器</h3><pre class="line-numbers language-bash"><code class="language-bash">docker run -d --name image-nginx -p 80:80 -v /mnt/nginx/images:/mnt/images image-nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>-v 将服务器本地<code>/mnt/nginx/images</code>映射到容器内<code>/mnt/images</code>目录，容器目录与<code>default.conf</code>文件中配置对应</p>
</blockquote>
<h3 id="访问图片"><a href="#访问图片" class="headerlink" title="访问图片"></a>访问图片</h3><p>通过<code>ip地址/images/aaa.jpg</code>访问图片<br>配置文件服务器同理</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Nginx</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-Boot使用JDBC连接Hive</title>
    <url>/2018/11/19/spring-boot-shi-yong-jdbc-lian-jie-hive/</url>
    <content><![CDATA[<h3 id="添加Maven依赖"><a href="#添加Maven依赖" class="headerlink" title="添加Maven依赖"></a>添加Maven依赖</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- hive --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.hive<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hive-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- hive === end --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h3><p>数据库连接池使用HikariCP，参数设置参考：<a href="https://github.com/brettwooldridge/HikariCP" target="_blank" rel="noopener">https://github.com/brettwooldridge/HikariCP</a></p>
<ol>
<li>在../resources目录下创建配置文件<code>application-hive.yml</code>，文件格式也可以使用<code>properties</code>格式<pre class="line-numbers language-yaml"><code class="language-yaml"> <span class="token key atrule">hive</span><span class="token punctuation">:</span>
   <span class="token key atrule">jdbcurl</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>hive2<span class="token punctuation">:</span>//10.75.4.31<span class="token punctuation">:</span>10000/mydb
   <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> org.apache.hive.jdbc.HiveDriver
   <span class="token key atrule">username</span><span class="token punctuation">:</span> root
   <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>
   <span class="token comment" spellcheck="true"># 下面为连接池的补充设置，应用到上面所有数据源中</span>
   <span class="token comment" spellcheck="true"># 初始化大小，最小连接数，最大连接数</span>
   <span class="token key atrule">initialSize</span><span class="token punctuation">:</span> <span class="token number">1</span>
   <span class="token key atrule">minimumIdle</span><span class="token punctuation">:</span> <span class="token number">3</span>
   <span class="token key atrule">maximumPoolSize</span><span class="token punctuation">:</span> <span class="token number">10</span>
   <span class="token comment" spellcheck="true"># 等待来自池的连接的最大毫秒数(创建连接超时时间)</span>
   <span class="token key atrule">connectionTimeout</span><span class="token punctuation">:</span> <span class="token number">120000</span>
   <span class="token comment" spellcheck="true"># 验证超时时间</span>
   <span class="token key atrule">validationTimeout</span><span class="token punctuation">:</span> <span class="token number">10000</span>
   <span class="token comment" spellcheck="true"># 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span>
   <span class="token key atrule">idleTimeout</span><span class="token punctuation">:</span> <span class="token number">30000</span>
   <span class="token comment" spellcheck="true"># 配置一个连接在池中最大生存的时间，单位是毫秒</span>
   <span class="token key atrule">maxLifeTime</span><span class="token punctuation">:</span> <span class="token number">600000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>在<code>application.yml</code>文件中指定激活<code>application-hive.yml</code>配置文件（这里也可以不配置，在config类中另外配置）。<pre class="line-numbers language-yaml"><code class="language-yaml"> <span class="token key atrule">spring</span><span class="token punctuation">:</span>
   <span class="token key atrule">application</span><span class="token punctuation">:</span>
     <span class="token key atrule">name</span><span class="token punctuation">:</span> ProjectName
   <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
     <span class="token key atrule">active</span><span class="token punctuation">:</span> hive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="编写config配置类，将Hive的JdbcTemplate加载到Spring容器中"><a href="#编写config配置类，将Hive的JdbcTemplate加载到Spring容器中" class="headerlink" title="编写config配置类，将Hive的JdbcTemplate加载到Spring容器中"></a>编写config配置类，将Hive的JdbcTemplate加载到Spring容器中</h3><ol>
<li>采用手动加载DataSource配置方式（不推荐）</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>zaxxer<span class="token punctuation">.</span>hikari<span class="token punctuation">.</span>HikariDataSource<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Qualifier<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>DataSourceProperties<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>env<span class="token punctuation">.</span>Environment<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>JdbcTemplate<span class="token punctuation">;</span>

<span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DataSource<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Objects<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * Hive-JDBC配置
 *
 * @author liming
 * @date Created in 2018/11/15 11:58
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HiveJdbcConfig</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>HiveJdbcConfig<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> Environment env<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"hiveJdbcDataSource"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> DataSource <span class="token function">dataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        DataSourceProperties dataSourceProperties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSourceProperties<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"hive.url"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSourceProperties<span class="token punctuation">.</span><span class="token function">setDriverClassName</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"hive.driver-class-name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSourceProperties<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"hive.username"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSourceProperties<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"hive.password"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        HikariDataSource dataSource <span class="token operator">=</span> dataSourceProperties<span class="token punctuation">.</span><span class="token function">initializeDataSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>HikariDataSource<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//下面的配置根据实际情况添加、修改</span>
        <span class="token comment" spellcheck="true">//连接超时时间</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setConnectionTimeout</span><span class="token punctuation">(</span>Long<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"hive.connectionTimeout"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//连接池最大连接数</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setMaximumPoolSize</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"hive.maximumPoolSize"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//最小闲置连接数</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setMinimumIdle</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"hive.minimumIdle"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setIdleTimeout</span><span class="token punctuation">(</span>Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"hive.idleTimeout"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//连接最大生存时间</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setMaxLifetime</span><span class="token punctuation">(</span>Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"hive.maxLifeTime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//验证超时时间</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setValidationTimeout</span><span class="token punctuation">(</span>Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"hive.validationTimeout"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Hive DataSource Inject Successfully..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> dataSource<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"hiveJdbcTemplate"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> JdbcTemplate <span class="token function">hiveJdbcTemplate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"hiveJdbcDataSource"</span><span class="token punctuation">)</span> DataSource dataSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JdbcTemplate</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>采用自动加载DataSource配置方式（推荐）<br>该方式需要yml配置文件中变量名与DataSource类里面的变量名对应</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> tech<span class="token punctuation">.</span>segma<span class="token punctuation">.</span>bi<span class="token punctuation">.</span>config<span class="token punctuation">;</span>

<span class="token keyword">import</span> com<span class="token punctuation">.</span>zaxxer<span class="token punctuation">.</span>hikari<span class="token punctuation">.</span>HikariDataSource<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Qualifier<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>DataSourceProperties<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>ConfigurationProperties<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>JdbcTemplate<span class="token punctuation">;</span>

<span class="token keyword">import</span> javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DataSource<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * Hive-JDBC配置
 *
 * @author liming
 * @date Created in 2018/11/15 11:58
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HiveJdbcConfig</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger LOGGER <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>HiveJdbcConfig<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"hive"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//需要配置前缀</span>
    <span class="token keyword">public</span> DataSourceProperties <span class="token function">dataSourceProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"hiveJdbcDataSource"</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"hive"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//需要配置前缀</span>
    <span class="token keyword">public</span> DataSource <span class="token function">dataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">dataSourceProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">initializeDataSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>HikariDataSource<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"hiveJdbcTemplate"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> JdbcTemplate <span class="token function">hiveJdbcTemplate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"hiveJdbcDataSource"</span><span class="token punctuation">)</span> DataSource dataSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        LOGGER<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Hive DataSource Inject Successfully..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JdbcTemplate</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="在代码中使用JdbcTemplate"><a href="#在代码中使用JdbcTemplate" class="headerlink" title="在代码中使用JdbcTemplate"></a>在代码中使用JdbcTemplate</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Resource</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"hiveJdbcTemplate"</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> JdbcTemplate hiveJdbcTemplate<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">loadFileToTable</span><span class="token punctuation">(</span>String filePath<span class="token punctuation">,</span> String tableName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment" spellcheck="true">//    String filePath = "/home/hadoop/user_sample.txt";</span>
    String sql <span class="token operator">=</span> <span class="token string">"load data local inpath '"</span> <span class="token operator">+</span> filePath <span class="token operator">+</span> <span class="token string">"' into table "</span> <span class="token operator">+</span> tableName<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        hiveJdbcTemplate<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">DataAccessException</span> dae<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Load data into table encounter an error: "</span> <span class="token operator">+</span> dae<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>Hive</tag>
        <tag>Spring Boot</tag>
        <tag>JDBC</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop修改端口后Hive连接方法</title>
    <url>/2018/11/16/hadoop-xiu-gai-duan-kou-hou-hive-lian-jie-fang-fa/</url>
    <content><![CDATA[<h3 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h3><p>Hadoop修改端口后，hive继续操作会报错，找不到HDFS，此时需要到元数据库中（本文为mysql）修改对应数据</p>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><p>元数据库mysql里面两张表：<br>DBS ： Hive数据仓库的路径<br>SDS ： Hive每张表对应的路径<br>找到对应路径端口，修改</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Hive</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7下搭建Kubernetes环境</title>
    <url>/2018/10/31/centos7-xia-da-jian-kubernetes-huan-jing/</url>
    <content><![CDATA[<p><a href="https://www.kubernetes.org.cn/4256.html" target="_blank" rel="noopener">1.11多主高可用</a><br><a href="https://www.qikqiak.com/post/use-kubeadm-install-kubernetes-1.10/" target="_blank" rel="noopener">1.10kubeadm安装</a></p>
<h3 id="安装配置docker"><a href="#安装配置docker" class="headerlink" title="安装配置docker"></a>安装配置docker</h3><blockquote>
<p>v1.11.0版本推荐使用docker v17.03,<br>  v1.11,v1.12,v1.13, 也可以使用，再高版本的docker可能无法正常使用。<br>  测试发现17.09无法正常使用，不能使用资源限制(内存CPU)</p>
</blockquote>
<blockquote>
<p>如下操作在所有节点操作</p>
</blockquote>
<p>安装docker</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 卸载安装指定版本docker-ce</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum remove -y docker-ce docker-ce-selinux container-selinux</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install -y --setopt=obsoletes=0 \</span>
docker-ce-17.03.1.ce-1.el7.centos \
docker-ce-selinux-17.03.1.ce-1.el7.centos<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>启动docker</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable docker &amp;&amp; systemctl restart docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="安装-kubeadm-kubelet-和-kubectl"><a href="#安装-kubeadm-kubelet-和-kubectl" class="headerlink" title="安装 kubeadm, kubelet 和 kubectl"></a>安装 kubeadm, kubelet 和 kubectl</h3><blockquote>
<p>如下操作在所有节点操作</p>
</blockquote>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 配置源</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span>
<span class="token function">cat</span> <span class="token operator">&lt;&lt;</span>EOF <span class="token operator">></span> /etc/yum.repos.d/kubernetes.repo
<span class="token punctuation">[</span>kubernetes<span class="token punctuation">]</span>
name<span class="token operator">=</span>Kubernetes
baseurl<span class="token operator">=</span>https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
enabled<span class="token operator">=</span>1
gpgcheck<span class="token operator">=</span>1
repo_gpgcheck<span class="token operator">=</span>1
gpgkey<span class="token operator">=</span>https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF

<span class="token comment" spellcheck="true"># 安装</span>
<span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="禁用交换分区swap"><a href="#禁用交换分区swap" class="headerlink" title="禁用交换分区swap"></a>禁用交换分区swap</h3><p>查看交换分区：<code>free -h</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># free -h</span>
              total        used        <span class="token function">free</span>      shared  buff/cache   available
Mem:           2.8G        159M        404M        112M        2.2G        2.3G
Swap:          3.0G        2.8M        3.0G<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>swapoff -a</code> 临时禁用所有交换</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s003 save<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># swapoff -a</span>
<span class="token punctuation">[</span>root@k8s003 save<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># free -h</span>
              total        used        <span class="token function">free</span>      shared  buff/cache   available
Mem:           2.8G        158M        403M        113M        2.2G        2.3G
Swap:            0B          0B          0B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>永久禁用，<code>vim /etc/fstab</code>注释swap行，重启</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#</span>
<span class="token comment" spellcheck="true"># /etc/fstab</span>
<span class="token comment" spellcheck="true"># Created by anaconda on Mon Nov  5 19:49:25 2018</span>
<span class="token comment" spellcheck="true">#</span>
<span class="token comment" spellcheck="true"># Accessible filesystems, by reference, are maintained under '/dev/disk'</span>
<span class="token comment" spellcheck="true"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span>
<span class="token comment" spellcheck="true">#</span>
/dev/mapper/centos-root /                       xfs     defaults        0 0
UUID<span class="token operator">=</span>daffff7e-bc4d-4cf0-bcdd-9b4a99a77ccc /boot                   xfs     defaults        0 0
<span class="token comment" spellcheck="true"># 注释该行</span>
<span class="token comment" spellcheck="true"># /dev/mapper/centos-swap swap                    swap    defaults        0 0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8smaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  kubeadm init --kubernetes-version=v1.10.0 --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.40.100</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="k8s1-6-pod-api"><a href="#k8s1-6-pod-api" class="headerlink" title="k8s1.6 pod api"></a>k8s1.6 pod api</h3><p>Pod是kubernetes REST API中的顶级资源类型。<br>在kuberentes1.6的V1 core API版本中的Pod的数据结构如下图所示：<br><img src="https://jimmysong.io/kubernetes-handbook/images/kubernetes-pod-cheatsheet.png" alt="pod api"></p>
<h3 id="docker指令和k8s指令对比"><a href="#docker指令和k8s指令对比" class="headerlink" title="docker指令和k8s指令对比"></a>docker指令和k8s指令对比</h3><p><a href="https://kubernetes.io/docs/reference/kubectl/docker-cli-to-kubectl/" target="_blank" rel="noopener">指令对比</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>容器</category>
      </categories>
      <tags>
        <tag>集群</tag>
        <tag>K8s</tag>
        <tag>容器</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Phoenix操作HBase</title>
    <url>/2018/10/30/shi-yong-phoenix-cao-zuo-hbase/</url>
    <content><![CDATA[<p>HBase集群环境搭建参考：<a href="http://blog.hming.org/2018/12/15/CentOS7%E4%B8%8B%E6%90%AD%E5%BB%BAHBase%E9%9B%86%E7%BE%A4+HBase%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/">CentOS7下搭建HBase集群+HBase基本操作</a></p>
<h3 id="下载与HBase版本兼容的Phoenix"><a href="#下载与HBase版本兼容的Phoenix" class="headerlink" title="下载与HBase版本兼容的Phoenix"></a>下载与HBase版本兼容的Phoenix</h3><p><code>apache-phoenix-4.14.1-HBase-1.4-bin.tar.gz</code><br>下载地址：<a href="http://archive.apache.org/dist/phoenix/" target="_blank" rel="noopener">http://archive.apache.org/dist/phoenix/</a></p>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p>复制<code>phoenix-4.14.1-HBase-1.4-server.jar</code>到<code>hbase/lib</code>下并分发到从节点</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster phoenix<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>
/home/phoenix
<span class="token punctuation">[</span>root@hadoopmaster phoenix<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp phoenix-4.14.1-HBase-1.4-server.jar /home/hbase/lib/</span>
//分发
<span class="token punctuation">[</span>root@hadoopmaster phoenix<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp phoenix-4.14.1-HBase-1.4-server.jar hadoop001:/home/hbase/lib/</span>
phoenix-4.14.1-HBase-1.4-server.jar                     100%   40MB  60.4MB/s   00:00    
<span class="token punctuation">[</span>root@hadoopmaster phoenix<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp phoenix-4.14.1-HBase-1.4-server.jar hadoop002:/home/hbase/lib/</span>
phoenix-4.14.1-HBase-1.4-server.jar                     100%   40MB  55.1MB/s   00:00    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="重启HBase"><a href="#重启HBase" class="headerlink" title="重启HBase"></a>重启HBase</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># stop-hbase.sh</span>
<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>root@hadoopmaster bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># start-hbase.sh</span>
<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="使用sqlline-py命令行终端"><a href="#使用sqlline-py命令行终端" class="headerlink" title="使用sqlline.py命令行终端"></a>使用sqlline.py命令行终端</h3><p>运行<code>phoenix/bin/sqlline.py</code>脚本，连接zookeeper</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>
/home/phoenix/bin
<span class="token punctuation">[</span>root@hadoopmaster bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./sqlline.py hadoopmaster:2181</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><strong>报错：</strong></p>
<pre class="line-numbers language-bash"><code class="language-bash">Error: SYSTEM.CATALOG <span class="token punctuation">(</span>state<span class="token operator">=</span>08000,code<span class="token operator">=</span>101<span class="token punctuation">)</span>
org.apache.phoenix.exception.PhoenixIOException: SYSTEM.CATALOG
    at org.apache.phoenix.util.ServerUtil.parseServerException<span class="token punctuation">(</span>ServerUtil.java:144<span class="token punctuation">)</span>
    at org.apache.phoenix.query.ConnectionQueryServicesImpl.metaDataCoprocessorExec<span class="token punctuation">(</span>ConnectionQueryServicesImpl.java:1379<span class="token punctuation">)</span>
    at org.apache.phoenix.query.ConnectionQueryServicesImpl.metaDataCoprocessorExec<span class="token punctuation">(</span>ConnectionQueryServicesImpl.java:1343<span class="token punctuation">)</span>
    at org.apache.phoenix.query.ConnectionQueryServicesImpl.getTable<span class="token punctuation">(</span>ConnectionQueryServicesImpl.java:1560<span class="token punctuation">)</span>
    at org.apache.phoenix.schema.MetaDataClient.updateCache<span class="token punctuation">(</span>MetaDataClient.java:643<span class="token punctuation">)</span>
    <span class="token punctuation">..</span>.
    at sqlline.SqlLine.start<span class="token punctuation">(</span>SqlLine.java:398<span class="token punctuation">)</span>
    at sqlline.SqlLine.main<span class="token punctuation">(</span>SqlLine.java:291<span class="token punctuation">)</span>
Caused by: org.apache.hadoop.hbase.TableNotFoundException: SYSTEM.CATALOG
    at org.apache.hadoop.hbase.client.ConnectionManager<span class="token variable">$HConnectionImplementation</span>.locateRegionInMeta<span class="token punctuation">(</span>ConnectionManager.java:1283<span class="token punctuation">)</span>
    at org.apache.hadoop.hbase.client.ConnectionManager<span class="token variable">$HConnectionImplementation</span>.locateRegion<span class="token punctuation">(</span>ConnectionManager.java:1181<span class="token punctuation">)</span>
    at org.apache.hadoop.hbase.client.ConnectionManager<span class="token variable">$HConnectionImplementation</span>.locateRegion<span class="token punctuation">(</span>ConnectionManager.java:1165<span class="token punctuation">)</span>
    <span class="token punctuation">..</span>.
    at org.apache.phoenix.query.ConnectionQueryServicesImpl.metaDataCoprocessorExec<span class="token punctuation">(</span>ConnectionQueryServicesImpl.java:1362<span class="token punctuation">)</span>
    <span class="token punctuation">..</span>. 31 <span class="token function">more</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p><strong>解决方案：</strong><br>查看hdfs中<code>/hbase/data/default/</code>目录下是否有<code>SYSTEM.*</code>等文件。如果没有，则：</p>
<ol>
<li>停止HBase，保留zookeeper启动</li>
<li>执行<code>hbase clean --cleanZk</code>命令</li>
<li>重新启动HBase，使用Phoenix连接<br>参考链接：<a href="https://stackoverflow.com/questions/33176081/org-apache-hadoop-hbase-tablenotfoundexception-system-catalog-exception-with-ph" target="_blank" rel="noopener">stackoverflow</a></li>
</ol>
</blockquote>
<h3 id="连接成功"><a href="#连接成功" class="headerlink" title="连接成功"></a>连接成功</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./sqlline.py hadoop001:2181</span>
Setting property: <span class="token punctuation">[</span>incremental, false<span class="token punctuation">]</span>
Setting property: <span class="token punctuation">[</span>isolation, TRANSACTION_READ_COMMITTED<span class="token punctuation">]</span>
issuing: <span class="token operator">!</span>connect jdbc:phoenix:hadoop001:2181 none none org.apache.phoenix.jdbc.PhoenixDriver
Connecting to jdbc:phoenix:hadoop001:2181
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding <span class="token keyword">in</span> <span class="token punctuation">[</span>jar:file:/home/apache-phoenix-4.14.0-HBase-1.2-bin/phoenix-4.14.0-HBase-1.2-client.jar<span class="token operator">!</span>/org/slf4j/impl/StaticLoggerBinder.class<span class="token punctuation">]</span>
SLF4J: Found binding <span class="token keyword">in</span> <span class="token punctuation">[</span>jar:file:/opt/hadoop/hadoop-2.7.6/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar<span class="token operator">!</span>/org/slf4j/impl/StaticLoggerBinder.class<span class="token punctuation">]</span>
SLF4J: See http://www.slf4j.org/codes.html<span class="token comment" spellcheck="true">#multiple_bindings for an explanation.</span>
18/10/30 03:59:49 WARN util.NativeCodeLoader: Unable to load native-hadoop library <span class="token keyword">for</span> your platform<span class="token punctuation">..</span>. using builtin-java classes where applicable
Connected to: Phoenix <span class="token punctuation">(</span>version 4.14<span class="token punctuation">)</span>
Driver: PhoenixEmbeddedDriver <span class="token punctuation">(</span>version 4.14<span class="token punctuation">)</span>
Autocommit status: <span class="token boolean">true</span>
Transaction isolation: TRANSACTION_READ_COMMITTED
Building list of tables and columns <span class="token keyword">for</span> tab-completion <span class="token punctuation">(</span>set fastconnect to <span class="token boolean">true</span> to skip<span class="token punctuation">)</span><span class="token punctuation">..</span>.
133/133 <span class="token punctuation">(</span>100%<span class="token punctuation">)</span> Done
Done
sqlline version 1.2.0
0: jdbc:phoenix:hadoopmaster:2181<span class="token operator">></span><span class="token operator">|</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="开启schema对应namespace"><a href="#开启schema对应namespace" class="headerlink" title="开启schema对应namespace"></a>开启schema对应namespace</h3><p><strong>Phoenix默认使用的是HBase中default名字空间（namespace），如果要用自定义的namespace，Phoenix中与之对应的是schema的概念，但是默认是关闭的，需要单独配置。</strong></p>
<ol>
<li>在<code>hbase/conf/hbase-site.xml</code>、<code>phoenix/bin/hbase-site.xml</code>两个文件中增加以下代码：<pre class="line-numbers language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>phoenix.schema.isNamespaceMappingEnabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>phoenix.schema.mapSystemTablesToNamespace<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>如果HBase是分布式，则需要将文件分发到其他节点<br>（最好是将该文件也复制到<code>phoenix/bin/</code>保证客户端与服务端的一致性）</li>
<li>Phoenix其他相关配置参照：<a href="https://phoenix.apache.org/tuning.html" target="_blank" rel="noopener">https://phoenix.apache.org/tuning.html</a><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp hbase-site.xml hadoop001:/home/hbase/conf/</span>
hbase-site.xml                              100% 1569     2.2MB/s   00:00    
<span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp hbase-site.xml hadoop002:/home/hbase/conf/</span>
hbase-site.xml                              100% 1569     1.6MB/s   00:00    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>重启HBase，重新连接</li>
</ol>
<p><strong><code>报错：Error: ERROR 726 (43M10):  Inconsistent namespace mapping properties. Ensure that config phoenix.schema.isNamespaceMappingEnabled is consistent on client and server. (state=43M10,code=726)</code></strong></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#sqlline.py hadoopmaster:2181</span>
Setting property: <span class="token punctuation">[</span>incremental, false<span class="token punctuation">]</span>
Setting property: <span class="token punctuation">[</span>isolation, TRANSACTION_READ_COMMITTED<span class="token punctuation">]</span>
issuing: <span class="token operator">!</span>connect jdbc:phoenix:hadoopmaster:2181 none none org.apache.phoenix.jdbc.PhoenixDriver
Connecting to jdbc:phoenix:hadoopmaster:2181
18/12/18 09:41:04 WARN util.NativeCodeLoader: Unable to load native-hadoop library <span class="token keyword">for</span> your platform<span class="token punctuation">..</span>. using builtin-java classes where applicable
Error: ERROR 726 <span class="token punctuation">(</span>43M10<span class="token punctuation">)</span>:  Inconsistent namespace mapping properties. Ensure that config phoenix.schema.isNamespaceMappingEnabled is consistent on client and server. <span class="token punctuation">(</span>state<span class="token operator">=</span>43M10,code<span class="token operator">=</span>726<span class="token punctuation">)</span>
java.sql.SQLException: ERROR 726 <span class="token punctuation">(</span>43M10<span class="token punctuation">)</span>:  Inconsistent namespace mapping properties. Ensure that config phoenix.schema.isNamespaceMappingEnabled is consistent on client and server.
    at org.apache.phoenix.exception.SQLExceptionCode<span class="token variable">$Factory</span><span class="token variable">$1</span>.newException<span class="token punctuation">(</span>SQLExceptionCode.java:494<span class="token punctuation">)</span>
    at org.apache.phoenix.exception.SQLExceptionInfo.buildException<span class="token punctuation">(</span>SQLExceptionInfo.java:150<span class="token punctuation">)</span>
    at org.apache.phoenix.query.ConnectionQueryServicesImpl.checkClientServerCompatibility<span class="token punctuation">(</span>ConnectionQueryServicesImpl.java:1310<span class="token punctuation">)</span>
    at org.apache.phoenix.query.ConnectionQueryServicesImpl.ensureTableCreated<span class="token punctuation">(</span>ConnectionQueryServicesImpl.java:1154<span class="token punctuation">)</span>
    at org.apache.phoenix.query.ConnectionQueryServicesImpl.createTable<span class="token punctuation">(</span>ConnectionQueryServicesImpl.java:1491<span class="token punctuation">)</span>
    at org.apache.phoenix.schema.MetaDataClient.createTableInternal<span class="token punctuation">(</span>MetaDataClient.java:2725<span class="token punctuation">)</span>
    at org.apache.phoenix.schema.MetaDataClient.createTable<span class="token punctuation">(</span>MetaDataClient.java:1114<span class="token punctuation">)</span>
    at org.apache.phoenix.compile.CreateTableCompiler<span class="token variable">$1</span>.execute<span class="token punctuation">(</span>CreateTableCompiler.java:192<span class="token punctuation">)</span>
    at org.apache.phoenix.jdbc.PhoenixStatement<span class="token variable">$2</span>.call<span class="token punctuation">(</span>PhoenixStatement.java:408<span class="token punctuation">)</span>
    at org.apache.phoenix.jdbc.PhoenixStatement<span class="token variable">$2</span>.call<span class="token punctuation">(</span>PhoenixStatement.java:391<span class="token punctuation">)</span>
    at org.apache.phoenix.call.CallRunner.run<span class="token punctuation">(</span>CallRunner.java:53<span class="token punctuation">)</span>
    at org.apache.phoenix.jdbc.PhoenixStatement.executeMutation<span class="token punctuation">(</span>PhoenixStatement.java:390<span class="token punctuation">)</span>
    at org.apache.phoenix.jdbc.PhoenixStatement.executeMutation<span class="token punctuation">(</span>PhoenixStatement.java:378<span class="token punctuation">)</span>
    at org.apache.phoenix.jdbc.PhoenixStatement.executeUpdate<span class="token punctuation">(</span>PhoenixStatement.java:1806<span class="token punctuation">)</span>
    at org.apache.phoenix.query.ConnectionQueryServicesImpl<span class="token variable">$12</span>.call<span class="token punctuation">(</span>ConnectionQueryServicesImpl.java:2536<span class="token punctuation">)</span>
    at org.apache.phoenix.query.ConnectionQueryServicesImpl<span class="token variable">$12</span>.call<span class="token punctuation">(</span>ConnectionQueryServicesImpl.java:2499<span class="token punctuation">)</span>
    at org.apache.phoenix.util.PhoenixContextExecutor.call<span class="token punctuation">(</span>PhoenixContextExecutor.java:76<span class="token punctuation">)</span>
    at org.apache.phoenix.query.ConnectionQueryServicesImpl.init<span class="token punctuation">(</span>ConnectionQueryServicesImpl.java:2499<span class="token punctuation">)</span>
    at org.apache.phoenix.jdbc.PhoenixDriver.getConnectionQueryServices<span class="token punctuation">(</span>PhoenixDriver.java:255<span class="token punctuation">)</span>
    at org.apache.phoenix.jdbc.PhoenixEmbeddedDriver.createConnection<span class="token punctuation">(</span>PhoenixEmbeddedDriver.java:150<span class="token punctuation">)</span>
    at org.apache.phoenix.jdbc.PhoenixDriver.connect<span class="token punctuation">(</span>PhoenixDriver.java:221<span class="token punctuation">)</span>
    at sqlline.DatabaseConnection.connect<span class="token punctuation">(</span>DatabaseConnection.java:157<span class="token punctuation">)</span>
    at sqlline.DatabaseConnection.getConnection<span class="token punctuation">(</span>DatabaseConnection.java:203<span class="token punctuation">)</span>
    at sqlline.Commands.connect<span class="token punctuation">(</span>Commands.java:1064<span class="token punctuation">)</span>
    at sqlline.Commands.connect<span class="token punctuation">(</span>Commands.java:996<span class="token punctuation">)</span>
    at sun.reflect.NativeMethodAccessorImpl.invoke0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
    at sun.reflect.NativeMethodAccessorImpl.invoke<span class="token punctuation">(</span>NativeMethodAccessorImpl.java:62<span class="token punctuation">)</span>
    at sun.reflect.DelegatingMethodAccessorImpl.invoke<span class="token punctuation">(</span>DelegatingMethodAccessorImpl.java:43<span class="token punctuation">)</span>
    at java.lang.reflect.Method.invoke<span class="token punctuation">(</span>Method.java:498<span class="token punctuation">)</span>
    at sqlline.ReflectiveCommandHandler.execute<span class="token punctuation">(</span>ReflectiveCommandHandler.java:38<span class="token punctuation">)</span>
    at sqlline.SqlLine.dispatch<span class="token punctuation">(</span>SqlLine.java:809<span class="token punctuation">)</span>
    at sqlline.SqlLine.initArgs<span class="token punctuation">(</span>SqlLine.java:588<span class="token punctuation">)</span>
    at sqlline.SqlLine.begin<span class="token punctuation">(</span>SqlLine.java:661<span class="token punctuation">)</span>
    at sqlline.SqlLine.start<span class="token punctuation">(</span>SqlLine.java:398<span class="token punctuation">)</span>
    at sqlline.SqlLine.main<span class="token punctuation">(</span>SqlLine.java:291<span class="token punctuation">)</span>
sqlline version 1.2.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>原因：hbase和Phoenix配置不一致导致，需要将上述两个地方的文件都作修改。</code></p>
<h3 id="基本操作（常用命令）"><a href="#基本操作（常用命令）" class="headerlink" title="基本操作（常用命令）"></a>基本操作（常用命令）</h3><p><strong>注意：HBase是大小写敏感，Phoenix操作时需要添加双引号，如果不添加双引号的话会统一转换成大写</strong></p>
<pre class="line-numbers language-bash"><code class="language-bash">//查看帮助
<span class="token variable">$sqlline</span><span class="token operator">></span> <span class="token operator">!</span>help
//列出连接
<span class="token variable">$sqlline</span><span class="token operator">></span> <span class="token operator">!</span>list
//显式表
<span class="token variable">$sqlilne</span><span class="token operator">></span> <span class="token operator">!</span>tables
//列出所有列
<span class="token variable">$sqlline</span><span class="token operator">></span> <span class="token operator">!</span>columns myns.test
//创建schema（相当于数据库）
<span class="token variable">$sqlline</span><span class="token operator">></span> create schema wndb<span class="token punctuation">;</span>
//删除表结构
<span class="token variable">$sqlline</span><span class="token operator">></span> drop table <span class="token string">"test"</span><span class="token punctuation">;</span>
//创建表
<span class="token variable">$sqlline</span><span class="token operator">></span> create table <span class="token string">"ns1"</span><span class="token keyword">.</span><span class="token string">"test"</span><span class="token punctuation">(</span>id integer primary key ,name varchar,age integer<span class="token punctuation">)</span> <span class="token punctuation">;</span>
//创建表并指定列族
<span class="token variable">$sqlline</span><span class="token operator">></span> create table <span class="token string">"ns1"</span><span class="token keyword">.</span><span class="token string">"test"</span><span class="token punctuation">(</span>id integer primary key ,<span class="token string">"cf1"</span>.name varchar,<span class="token string">"cf2"</span>.age integer<span class="token punctuation">)</span> <span class="token punctuation">;</span>
//插入数据和更新数据
<span class="token variable">$sqlline</span><span class="token operator">></span> upsert into <span class="token string">"myns"</span><span class="token keyword">.</span><span class="token string">"test"</span><span class="token punctuation">(</span>id,name,age<span class="token punctuation">)</span> values<span class="token punctuation">(</span>1,<span class="token string">'tom'</span>,12<span class="token punctuation">)</span>
//删除
<span class="token variable">$sqlline</span><span class="token operator">></span> delete from <span class="token string">"myns"</span><span class="token keyword">.</span><span class="token string">"test"</span> where <span class="token function">id</span> <span class="token operator">=</span> 1 <span class="token punctuation">;</span> 
//条件查询
<span class="token variable">$sqlline</span><span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token string">"myns"</span><span class="token keyword">.</span><span class="token string">"test"</span> where name like <span class="token string">'t%'</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="创建ID自增的表"><a href="#创建ID自增的表" class="headerlink" title="创建ID自增的表"></a>创建ID自增的表</h3><p><code>Phoenix中创建表时，必须制定主键。</code><br>在关系型数据库中（如：mysql）设置主键自增非常容易，但是Phoenix中不能直接设置主键自增，需要额外新建一个自增序列<code>sequence</code>，当插入表数据时，根据<code>sequence</code>的值，来进行自增id的插入。</p>
<ol>
<li><p>语法</p>
<pre class="line-numbers language-sql"><code class="language-sql"> <span class="token keyword">CREATE</span> SEQUENCE <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> <span class="token keyword">SCHEMA</span><span class="token punctuation">.</span>SEQUENCE_NAME
 <span class="token punctuation">[</span><span class="token keyword">START</span> <span class="token keyword">WITH</span> number<span class="token punctuation">]</span>
 <span class="token punctuation">[</span>INCREMENT <span class="token keyword">BY</span> number<span class="token punctuation">]</span>
 <span class="token punctuation">[</span>MINVALUE number<span class="token punctuation">]</span>
 <span class="token punctuation">[</span>MAXVALUE number<span class="token punctuation">]</span>
 <span class="token punctuation">[</span>CYCLE<span class="token punctuation">]</span>
 <span class="token punctuation">[</span>CACHE number<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>参数说明</p>
<ul>
<li><code>start</code>用于指定第一个值。如果不指定默认为1。</li>
<li><code>increment</code>指定每次调用<code>next value for</code>后自增大小。 如果不指定默认为1。</li>
<li><code>minvalue</code>和<code>maxvalue</code>一般与<code>cycle</code>连用, 让自增数据形成一个环，从最小值到最大值，再从最大值到最小值。</li>
<li><code>cache</code>默认为100, 表示server端生成100个自增序列缓存在客户端，可以减少rpc次数。此值也可以通过<code>phoenix.sequence.cacheSize</code>来配置。</li>
</ul>
</li>
<li><p>案例与注意事项<br> <strong><code>注意cache值：如果一次插入个数小于该数n，则断开连接后，由于缓存在客户端，下次重新连接后插入会接着生成n个缓存数来使用，导致自增序列不连续</code></strong><br> 案例如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token comment" spellcheck="true"># 演示表a中无数据</span>
 <span class="token variable">$sqlline</span><span class="token operator">></span> <span class="token keyword">select</span> * from a<span class="token punctuation">;</span>
 +-----+------+-------+
 <span class="token operator">|</span> ID  <span class="token operator">|</span> AGE  <span class="token operator">|</span> NAME  <span class="token operator">|</span>
 +-----+------+-------+
 +-----+------+-------+
 <span class="token comment" spellcheck="true"># 1、创建一个自增序列test，缓存大小设置为50</span>
 <span class="token variable">$sqlline</span><span class="token operator">></span> create sequence <span class="token function">test</span> cache 50<span class="token punctuation">;</span>
 No rows affected <span class="token punctuation">(</span>0.016 seconds<span class="token punctuation">)</span>
 <span class="token comment" spellcheck="true"># 查看序列详情</span>
 <span class="token variable">$sqlline</span><span class="token operator">></span> <span class="token keyword">select</span> * from system.<span class="token string">"SEQUENCE"</span><span class="token punctuation">;</span>
 +---------+---------------+-------------+----------+-------------+------------+----------+--------------------+-----------------+
 <span class="token operator">|</span>TENANT_ID<span class="token operator">|</span>SEQUENCE_SCHEMA<span class="token operator">|</span>SEQUENCE_NAME<span class="token operator">|</span>START_WITH<span class="token operator">|</span>CURRENT_VALUE<span class="token operator">|</span>INCREMENT_BY<span class="token operator">|</span>CACHE_SIZE<span class="token operator">|</span>      MIN_VALUE     <span class="token operator">|</span>     MAX_VALUE   <span class="token operator">|</span>
 +---------+---------------+-------------+----------+-------------+------------+----------+--------------------+-----------------+
 <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>TEST         <span class="token operator">|</span>1         <span class="token operator">|</span>1            <span class="token operator">|</span>1           <span class="token operator">|</span>50        <span class="token operator">|</span>-9223372036854775808<span class="token operator">|</span>92233720368547758<span class="token operator">|</span>
 +---------+---------------+-------------+----------+-------------+------------+----------+--------------------+-----------------+
 <span class="token comment" spellcheck="true"># 2、向演示表a中插入数据，id使用test序列中的值</span>
 <span class="token variable">$sqlline</span><span class="token operator">></span> upsert into a values<span class="token punctuation">(</span>next value <span class="token keyword">for</span> test, 20, <span class="token string">'zhangsan'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 1 row affected <span class="token punctuation">(</span>0.019 seconds<span class="token punctuation">)</span>
 <span class="token variable">$sqlline</span><span class="token operator">></span> upsert into a values<span class="token punctuation">(</span>next value <span class="token keyword">for</span> test, 30, <span class="token string">'zhangsan1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 1 row affected <span class="token punctuation">(</span>0.019 seconds<span class="token punctuation">)</span>
 <span class="token variable">$sqlline</span><span class="token operator">></span> upsert into a values<span class="token punctuation">(</span>next value <span class="token keyword">for</span> test, 40, <span class="token string">'zhangsan2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 1 row affected <span class="token punctuation">(</span>0.019 seconds<span class="token punctuation">)</span>
 <span class="token comment" spellcheck="true"># 成功插入多条数据，id自增</span>
 <span class="token variable">$sqlline</span><span class="token operator">></span> <span class="token keyword">select</span> * from a<span class="token punctuation">;</span>
 +-----+-------+-----------+
 <span class="token operator">|</span> ID  <span class="token operator">|</span>  AGE  <span class="token operator">|</span>   NAME    <span class="token operator">|</span>
 +-----+-------+-----------+
 <span class="token operator">|</span> 1   <span class="token operator">|</span> 20.0  <span class="token operator">|</span> zhangsan  <span class="token operator">|</span>
 <span class="token operator">|</span> 2   <span class="token operator">|</span> 30.0  <span class="token operator">|</span> zhangsan1 <span class="token operator">|</span>
 <span class="token operator">|</span> 3   <span class="token operator">|</span> 40.0  <span class="token operator">|</span> zhangsan2 <span class="token operator">|</span>
 +-----+-------+-----------+
 <span class="token comment" spellcheck="true"># 3、退出当前连接</span>
 <span class="token variable">$sqlline</span><span class="token operator">></span> <span class="token operator">!</span>quit
 Closing: org.apache.phoenix.jdbc.PhoenixConnection

 <span class="token comment" spellcheck="true"># 4、重新连接</span>
 <span class="token punctuation">[</span>root@hadoopmaster shell<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># sqlline.py hadoopmaster,hadoop001,hadoop002:2181</span>
 <span class="token punctuation">..</span>.
 155/155 <span class="token punctuation">(</span>100%<span class="token punctuation">)</span> Done
 Done
 sqlline version 1.2.0
 <span class="token comment" spellcheck="true"># 查看当前自增序列状态，发现当前值CURRENT_VALUE已经变为51</span>
 <span class="token variable">$sqlline</span><span class="token operator">></span> <span class="token keyword">select</span> * from system.<span class="token string">"SEQUENCE"</span><span class="token punctuation">;</span>
 +---------+---------------+-------------+----------+-------------+------------+----------+--------------------+-----------------+
 <span class="token operator">|</span>TENANT_ID<span class="token operator">|</span>SEQUENCE_SCHEMA<span class="token operator">|</span>SEQUENCE_NAME<span class="token operator">|</span>START_WITH<span class="token operator">|</span>CURRENT_VALUE<span class="token operator">|</span>INCREMENT_BY<span class="token operator">|</span>CACHE_SIZE<span class="token operator">|</span>      MIN_VALUE     <span class="token operator">|</span>     MAX_VALUE   <span class="token operator">|</span>
 +---------+---------------+-------------+----------+-------------+------------+----------+--------------------+-----------------+
 <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>TEST         <span class="token operator">|</span>1         <span class="token operator">|</span>51           <span class="token operator">|</span>1           <span class="token operator">|</span>50        <span class="token operator">|</span>-9223372036854775808<span class="token operator">|</span>92233720368547758<span class="token operator">|</span>
 +---------+---------------+-------------+----------+-------------+------------+----------+--------------------+-----------------+
 <span class="token comment" spellcheck="true"># 5、继续使用test序列值插入演示表a</span>
 <span class="token variable">$sqlline</span><span class="token operator">></span> upsert into a values<span class="token punctuation">(</span>next value <span class="token keyword">for</span> test, 21, <span class="token string">'lisi'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 1 row affected <span class="token punctuation">(</span>0.067 seconds<span class="token punctuation">)</span>
 <span class="token comment" spellcheck="true"># 6、发现id已经变为51，导致id不连续的问题</span>
 <span class="token variable">$sqlline</span><span class="token operator">></span> <span class="token keyword">select</span> * from a<span class="token punctuation">;</span>
 +-----+-------+-----------+
 <span class="token operator">|</span> ID  <span class="token operator">|</span>  AGE  <span class="token operator">|</span>   NAME    <span class="token operator">|</span>
 +-----+-------+-----------+
 <span class="token operator">|</span> 1   <span class="token operator">|</span> 20.0  <span class="token operator">|</span> zhangsan  <span class="token operator">|</span>
 <span class="token operator">|</span> 2   <span class="token operator">|</span> 30.0  <span class="token operator">|</span> zhangsan1 <span class="token operator">|</span>
 <span class="token operator">|</span> 3   <span class="token operator">|</span> 40.0  <span class="token operator">|</span> zhangsan2 <span class="token operator">|</span>
 <span class="token operator">|</span> 51  <span class="token operator">|</span> 21.0  <span class="token operator">|</span> lisi      <span class="token operator">|</span>
 +-----+-------+-----------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3></li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>HBase</tag>
        <tag>Phoenix</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker容器固定IP</title>
    <url>/2018/10/20/docker-rong-qi-gu-ding-ip/</url>
    <content><![CDATA[<h3 id="创建自定义网络"><a href="#创建自定义网络" class="headerlink" title="创建自定义网络"></a>创建自定义网络</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker network create --subnet=172.18.0.0/16 my_network</span>
037291f820f9104928d786bc83d123cc2a3dbf459816d4c3145e98faf97a348a
<span class="token punctuation">[</span>root@hadoopmaster bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker network ls</span>
NETWORK ID          NAME                DRIVER              SCOPE
0c3c0925f725        bridge              bridge              local
bb4ac16f1205        host                host                local
037291f820f9        my_network          bridge              local
077d509d5c30        none                null                local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="创建容器时指定ip"><a href="#创建容器时指定ip" class="headerlink" title="创建容器时指定ip"></a>创建容器时指定ip</h3><pre class="line-numbers language-bash"><code class="language-bash">docker run -itd --net my_network --ip 172.18.0.100 --add-host hdp001:172.18.0.101 --add-host hdp002:172.18.0.102 -h hdpmaster --name hdpmaster -p 8088:8088 -p 50070:50070 cyanidehm/hadoop:0.3 /bin/bash
docker run -itd --net my_network --ip 172.18.0.101 --add-host hdpmaster:172.18.0.100 --add-host hdp002:172.18.0.102 -h hdp001 --name hdp001 cyanidehm/hadoop:0.3 /bin/bash
docker run -itd --net my_network --ip 172.18.0.102 --add-host hdp001:172.18.0.101 --add-host hdpmaster:172.18.0.100 -h hdp002 --name hdp002 cyanidehm/hadoop:0.3 /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre><code>&gt; --net 指定网络类型。
&gt; --ip 指定ip地址。
&gt; --add-host 添加主机到hosts文件。
&gt; -h 指定hostname主机名。
&gt; --name 指定容器名称</code></pre><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>容器</category>
      </categories>
      <tags>
        <tag>容器</tag>
        <tag>Docker</tag>
        <tag>IP</tag>
      </tags>
  </entry>
  <entry>
    <title>Keep-Class课程《跑步减脂不累腿的秘诀》笔记</title>
    <url>/2018/09/25/keep-class-ke-cheng-pao-bu-jian-zhi-bu-lei-tui-de-mi-jue-bi-ji/</url>
    <content><![CDATA[<blockquote>
<p>原文作者：Amazing_H<br>链接：<a href="https://www.jianshu.com/p/894f942005c9" target="_blank" rel="noopener">https://www.jianshu.com/p/894f942005c9</a><br>转载來源：简书</p>
</blockquote>
<p><img src="http://47.106.179.244/keep%E8%B7%91%E6%AD%A5%E7%A7%98%E8%AF%80/keep%E8%B7%91%E6%AD%A5class%E8%AF%BE%E7%A8%8B.jpg" alt="class课程"></p>
<h3 id="怎么跑才能不粗腿"><a href="#怎么跑才能不粗腿" class="headerlink" title="怎么跑才能不粗腿"></a>怎么跑才能不粗腿</h3><p>腿部的肌肉和脂肪任何一样占比过大都会让腿在视觉上看起来粗壮。</p>
<p>但是，跑步作为一种高能量的有氧运动，是不会让腿长出脂肪的。</p>
<p>跑步作为一种耐力运动，从运动生理学的角度，也不会让肌肉有明显的增长。</p>
<p>为什么有很多人会认为跑步会让腿变粗呢？有两种原因：</p>
<ol>
<li><p>客观上：<br>不正确的跑步姿势，过多动员了大腿的肌肉，而不是臀部的肌肉。</p>
</li>
<li><p>主观上：<br>跑步之后，腿部的疲劳感，会让你觉得跑步练到了腿，会把腿练粗，并且错误的姿势还会加深腿部的疲劳感，让你更怀疑腿变粗了。</p>
</li>
</ol>
<p>想通过跑步减脂而又不累腿，解决的方法就是：</p>
<p>学习正确的跑步姿势，减少腿部的发力，增加臀部的发力。</p>
<p><strong><code>臀部是下肢最发达的部位，是奔跑的发动力，学会动员臀部的发力，可以减少大腿发力的代偿。你的腿不容易累，就不会怀疑腿会变粗了。</code></strong></p>
<p>但，新手的普遍状况是没有掌握正确的跑步姿势，臀部发力不足，导致腿部发力过多。比如：跑步时是向上跳着跑，导致了做功主要是克服重力，浪费了很多能量，腿会感觉非常累。</p>
<p>跑步时腿部并不是主要向前迈步或者向下踏步，我们应该向后摆腿部，这样能让力高效地推动身体向前进。</p>
<p>向后摆腿发力可以：</p>
<ol>
<li><p>动员到臀部的力量，减少腿部发力</p>
</li>
<li><p>可以利用到鞭打效应，增加跑步时力学传递的效率</p>
</li>
</ol>
<p><strong><code>理想的跑步姿势，是向后摆腿跑，充分调动臀部发力，将力量传递到足部，推动身体向前，而且可以借助鞭打效应，向前的做功也会提升，让跑步更省力。</code></strong></p>
<p><strong><code>跑前热身</code></strong></p>
<p>很多人虽然可以模仿向后甩腿的动作，但还是并不容易掌握臀部发力的感觉。</p>
<p>每次跑步前，通过以下两个动作，可以激活臀大肌，放松髂腰肌，感受到臀部的用力。再结合keep的《跑前热身课程》，可以有效预防损伤，让跑步过程更易达到最佳状态。</p>
<p>注：</p>
<p>臀大肌，在屁股两侧，主要负责发力，负责向后最初始的动力</p>
<p>髂腰肌，在大腿根部，足够放松，才能不阻碍腿向后摆</p>
<p><strong><code>动作1--箭步蹲--这是激活臀大肌常用的动作--每侧15-30次，每次2-3组</code></strong><br><img src="http://47.106.179.244/keep%E8%B7%91%E6%AD%A5%E7%A7%98%E8%AF%80/%E7%AE%AD%E6%AD%A5%E8%B9%B2%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg" alt="箭步蹲图片示意"><br>腰部挺直，两手叉腰，向前迈出一步，和自己腿长差不多相等的距离，下蹲成弓步，注意膝关节和髋关节呈90度。然后，想象自己后面的脚踩在冰面上，稍微一用力就会踩碎，靠前面的腿、臀部的力量推动自己身体站起来。这样可以帮你找到臀部发力的感觉，避免过多使用腿部的力量。</p>
<p>注意：做这个动作的时候，不要向前移动中心，或者前倾身体。或者后面的腿发力过多，这样都不利于找到臀部发力的感觉。</p>
<p><strong><code>动作2--弓箭步拉伸--可以放松髂腰肌--每侧拉伸2次，每次60秒。</code></strong><br><img src="http://47.106.179.244/keep%E8%B7%91%E6%AD%A5%E7%A7%98%E8%AF%80/%E5%BC%93%E7%AE%AD%E6%AD%A5%E6%8B%89%E4%BC%B8%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg" alt="弓箭步拉伸图片示意"></p>
<p>首先做一个弓箭步，让后面的腿放在地上，身体挺直，重心向前下方移动。然后用力挺胯，让大腿的根部得到拉伸。还可以让身体转向被拉伸的另外一侧，可以体会到更明显的拉伸感。</p>
<p><strong><code>跑后放松</code></strong></p>
<p>跑后是肌肉最需要冷身和放松的时候，跑后腿部肌肉拉伸或者按摩，可以避免疲劳累积到第二天，也可以有效缓解第二天的酸痛、不适等症状的出现。</p>
<p>以下两个跑后拉伸动作，结合<code>keep</code>的<code>《跑后拉伸课程》</code>和<code>《小腿按摩课程》</code>可以有效实现。<br><img src="http://47.106.179.244/keep%E8%B7%91%E6%AD%A5%E7%A7%98%E8%AF%80/%E8%B7%91%E5%90%8E%E6%8B%89%E4%BC%B8%E5%92%8C%E5%B0%8F%E8%85%BF%E6%8C%89%E6%91%A9%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg" alt="跑后拉伸和小腿按摩示意图"><br><img src="http://47.106.179.244/keep%E8%B7%91%E6%AD%A5%E7%A7%98%E8%AF%80/%E8%B7%91%E5%90%8E%E6%8B%89%E4%BC%B8%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg" alt="跑后拉伸示意图">)<img src="http://47.106.179.244/keep%E8%B7%91%E6%AD%A5%E7%A7%98%E8%AF%80/%E5%B0%8F%E8%85%BF%E6%8C%89%E6%91%A9%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg" alt="小腿按摩示意图"></p>
<p><strong><code>另外的两个动作：</code></strong></p>
<p><strong><code>动作1--髂胫束拉伸--可以缓解髂胫束的紧张造成的膝外侧疼痛--每侧30-60秒，每次1-2组</code></strong></p>
<p><img src="http://47.106.179.244/keep%E8%B7%91%E6%AD%A5%E7%A7%98%E8%AF%80/%E9%AB%82%E8%83%AB%E6%9D%9F%E6%8B%89%E4%BC%B8%E5%9B%BE%E7%89%87%E7%A4%BA%E6%84%8F.jpg" alt="髂胫束拉伸图片示意"></p>
<p>左脚向右脚前方交叉，身体倒向前偏左侧的方向，手摸到地面或者脚踝，膝盖保持平衡。体会拉伸大腿右外侧的部位。另外一侧的拉伸同理。</p>
<p><strong><code>动作2--小腿拉伸--让小腿深层的肌肉得到充分地放松--每侧30-60秒，每次1-2组</code></strong></p>
<p><img src="http://47.106.179.244/keep%E8%B7%91%E6%AD%A5%E7%A7%98%E8%AF%80/%E5%B0%8F%E8%85%BF%E6%8B%89%E4%BC%B8%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg" alt="小腿拉伸图片示意"></p>
<p>伸直腿后，将被拉伸的腿向前移动40cm左右的距离，继续弯曲膝盖，中心下降拉伸小腿。体会靠近跟腱部位，及小腿深层的肌肉被拉伸。<br>每一侧做30到60秒，重复1到2组。</p>
<p>注意：拉伸的过程中保持均匀呼吸，不用过分用力，体会肌肉被拉长的感觉即可。</p>
<h3 id="怎么跑步不容易受伤"><a href="#怎么跑步不容易受伤" class="headerlink" title="怎么跑步不容易受伤"></a>怎么跑步不容易受伤</h3><p>在跑步姿势对的前提下，跑步时最简单有效的减脂运动方式之一。有效地慢跑每个小时可以消耗600-900大卡的热量，是单位时间里卡路里消耗最高的持续运动方式。但是，如果不注意跑步姿势和技巧，对身体的损伤则不堪设想。</p>
<p><strong>正确的跑步姿势</strong><br><img src="http://47.106.179.244/keep%E8%B7%91%E6%AD%A5%E7%A7%98%E8%AF%80/%E8%B7%91%E6%AD%A5%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg" alt="正确跑步姿势"></p>
<p>一个远离受伤的跑步姿势，需要满足两个条件：</p>
<ol>
<li><p>减小跑步时地面对双脚的冲击力</p>
</li>
<li><p>提高跑步时身体整体的稳定性</p>
</li>
</ol>
<p>跑步有两种力量可能引起损伤：</p>
<ol>
<li><p>是水平方向的扭转力，产生的研磨效应</p>
</li>
<li><p>是垂直方向的冲击力，产生的撞击效应</p>
</li>
</ol>
<p><strong>扭转力–提高身体的稳定性，可以有效减小扭转力</strong></p>
<p>如果无法保证身体的稳定，会让我们的身体扭起来，会产生很多不必要的扭转力。扭转力比冲击力给关节的损伤更大，因为扭转力会对关节、韧带产生研磨效应，这种研磨效应发生在膝盖的髌骨就叫做髌骨软化，跑起来膝盖正前方就疼。研磨效应产生在髂胫束的末端，就叫髂胫束综合征，跑起来膝盖外侧就疼痛难忍。研磨效应还可能让半月板受损。</p>
<p><strong>保持身体稳定</strong></p>
<p>首先，保证躯干处于中立位置，调整头部，保持眼睛向水平方向看。想象自己想要量身高，尽可能向上伸展身体的感觉。还有感觉自己头顶有个苹果，不要让他掉下来。</p>
<p>其次，肩膀要放松，要让自己的肩膀有微微向后打开的感觉，并且保持整个躯干的竖立状态。</p>
<p>第三，收紧自己的腰腹，找到一种咳嗽，或者有人要打你腹部的感觉。</p>
<p>第四，保持自己的骨盆在中立位置上，不要前倾也不要后倾。</p>
<p><strong>摆臂</strong></p>
<p>摆臂是为了稳定身体。跑步的时候，腿部前后摆动会产生扭转的力矩，这个力矩会传递到上肢，刚好可以被手臂的摆动抵消掉，从而提高身体的稳定性。摆臂的时候，肘关节呈90度，肩膀放松，摆动自然。</p>
<p>通过保持躯干的中立位，以及自然的摆臂，就可以让身体从上到下保持稳定，避免产生多余的扭转力。</p>
<p><strong>冲击力–减少冲击力的下半身模式</strong></p>
<p>跑步每公里会产生几百上千次冲击，如果每次冲击力过大，可能会产生：胫骨前肌疼痛、足底筋膜炎、甚至是对关节造成伤害。</p>
<p><strong>减少冲击力，需要一个良好的落地技巧</strong></p>
<ol>
<li><p>让落地点尽可能靠近身体的重心。经常有人跑步迈很大的步子，这样会让落地点超出身体很远，会产生一种刹车效应，每一步都会产生阻力，并增加落地时的冲击力。正确的落地方法，是让触地点，尽可能靠近身体重心的投影，有一种踩在重心上的感觉。</p>
</li>
<li><p>提高步频。提高步频可以减少身体腾空的时间，腾空的时间决定了腾空的高度，直接决定落地冲击力的大小</p>
</li>
<li><p>前脚掌落地和后脚跟落地的技巧。</p>
</li>
</ol>
<p>落地最重要的是触地点落在身体的重心，</p>
<p>当速度低于12公里每小时，适合用脚跟先接触地面，这时如果用前脚掌接触地面，容易给小腿造成过多的压力。</p>
<p>当速度高于12公里每小时，适合用前脚掌先接触地面。</p>
<p><strong>根据跑步的路况减少冲击力</strong></p>
<p>塑胶跑道是最容易找到的适合跑步的路面，它有很好的缓冲减震效果，相当于一双高级跑鞋的效果。</p>
<p>公路硬度比较高，缓冲性能较强的跑鞋是必备的，另外，脚可以用一种滚动的感觉去落地，主动缓冲地面的冲击力，并且控制自己的脚步声尽可能的小。落地轻盈、声音小，就说明缓冲技巧控制的比较好。</p>
<p>跑步机和户外跑步的区别很大，户外跑是地面静止，腿推动身体向前移动。跑步机是履带向后，有一种带着人跑的感觉。使用跑步机跑步，需要有意的增加自己腿向后摆的幅度，尽可能与户外跑步保持一致。</p>
<p>远离损伤的跑步姿势和技巧：</p>
<p>稳定上身、自然摆臂、落地点靠近重心、用滚动的方式落地、保持一个高步频。</p>
<h3 id="提升跑步速度与距离"><a href="#提升跑步速度与距离" class="headerlink" title="提升跑步速度与距离"></a>提升跑步速度与距离</h3><p>两大要领提升跑步速度</p>
<p>怎样跑步最省力</p>
<p>跑步不只是姿势那么简单，因为跑步不是静止的姿势，而是连贯的动作。前面两节通过静止的姿势讲解了正确的跑步姿势，静止的姿势是很容易模仿、实践的。但是如果想要跑更长时间，比如10公里，甚至是马拉松，就需要更高效的动作模式。</p>
<p>越跑越快、越跑越稳的动作模式应该是：</p>
<ol>
<li><p>提高步频–推荐使用180每分钟的步频</p>
<p>步频就是每分钟的步数，高步频可以跑的更快，还可以提高稳定性，让腾空的时间更短，减少垂直方向重心的起伏。跑起来不仅可以更快，还能更省力。</p>
</li>
<li><p>提高步幅</p>
<p>步幅就是每一步的长度。提高步幅，并不是说步子迈的越大越好，有很多人想跑更快，就向前迈特别大的步子，这样子很容易让脚的落地点超越重心太远，产生刹车效应。</p>
</li>
</ol>
<p>正确的提高步幅的方式是通过充分的蹬伸，提高每一步的步幅。</p>
<p>提高步幅的正确方式是，通过充分的蹬伸，提高每一步的步幅。这个过程可以拆分为四个阶段：落地、支撑、蹬伸、腾空。</p>
<p>落地：要想提高速度，落地要尽可能靠近重心的投影，落地的时候要注意膝盖自然弯曲，用肌肉的弹性做缓冲，把自己的双腿想象成弹簧，借助弹性，而不只是靠主动的发力去落地。</p>
<p>支撑：速度快的同时，支撑阶段也要尽可能地快。从双脚落地开始，迅速滚动到脚的中部做支撑。这个过程身体要保持稳定，保持手臂和腿的运动轨迹尽可能平行，不要出现交叉。</p>
<p>蹬伸：要想速度快，每一步需要有足够的力推动身体向前。有两个要点，一是以臀部为轴（臀部为轴，是指臀部向后发力要充分），用鞭打的方式传递力量。第二是提拉后摆，想要把后蹬的力量转化为向前的力量，就需要我们在蹬伸的过程中，收缩腘绳肌，改变力的方向，尽可能的向后发力，避免力量转化为向上的力量浪费掉。</p>
<p><img src="" alt="跑步示意图"></p>
<p>前摆：后摆最重要的是发力，前摆最重要的是省力。转动惯量和力矩成正比，滑冰运动员展开身体的时候速度会变慢，收紧身体的时候转动速度会变快。同样的道理，下肢折叠的越充分，向前摆动的时候就越省力。</p>
<h3 id="跑步常见的困扰与危险信号"><a href="#跑步常见的困扰与危险信号" class="headerlink" title="跑步常见的困扰与危险信号"></a>跑步常见的困扰与危险信号</h3><p>跑步中经常会有以下感觉：</p>
<p>第一种感觉叫极点，一般出现在跑步的10-15分钟左右，或者跑到第2-3公里的时候。这时候会感觉非常累、非常煎熬，冥冥之中有一种力量阻碍你迈不开腿、踹不上气，让你想要放弃。</p>
<p>冥冥之中的这个力量是内脏系统的阻力。在安静状态下，身体的血液是集中在躯干的内脏中。而在运动状态，身体的血液集中在四肢的肌肉当中。刚刚开始运动的时候，血液还没来得及从内脏到达肌肉，就会产生一种生理惰性，阻碍跑步，这就是极点现象，又叫惰性极点。当你继续运动一段时间，等待血液逐渐到达肌肉，就会跨过第一极点。</p>
<p>第二种感觉就是跑步完以后感觉腿疼。疼痛是身体给我们发出的信号，最常见的是延迟性肌肉酸痛。有这样一种疼法，刚跑完的时候，你并没有什么感觉，而是运动后一天活第二天开始感觉疼痛，疼的时候可能会感觉上楼都困难。这种疼痛的特点是两条腿都疼，是对称的，痛点主要在肌肉上面。延期性肌肉酸痛是肌肉进行大量运动刺激后，进行自我更新的结果，肌纤维正在重建。这种疼痛一般会在一周之后消退。如果进行低强度的运动，比如走路、慢跑、拉伸之后，都可以促进疼痛更快恢复。</p>
<p>第三种是跑完后感觉腿粗了一圈。这种感觉不用担心，是会自行恢复的。人体的80%是水，我们的身体，特别是肌肉，受到体液分布的影响很大。安静的时候血液会在内脏、大脑当中。跑步中和跑步后，血液会集中在下肢，导致暂时的体液分布型水肿，可能会持续1-3天。在跑步后，平躺并通过手臂的辅助做一些腿部后侧的拉伸，每侧3分钟左右，可以让这种暂时的水肿很快恢复。或者通过泡沫轴滚压、按摩的方式也可以减轻水肿的现象</p>
<p>还有可能出现这种危险信号：运动中单腿越跑越疼。</p>
<p>随着运动的持续，一条腿越来越疼，并且疼痛出现在关节，这时候要立刻停止运动，如果停止运动后，症状继续加重，就需要寻求医生的治疗了。</p>
<p>危险信号的出现，往往是因为姿势的不正确，比如：</p>
<ol>
<li><p>步子迈太大，每迈一步，就是一次刹车效应，损耗能量不说，还有可能将肌肉拉扯疼痛。</p>
</li>
<li><p>身体前倾，这样会给后背，尤其是腰部造成过重的负担，容易产生腰痛。跑步的时候让整个身体保持重心向前，微微前倾5度左右就可以了。</p>
</li>
<li><p>用脚尖着地，课程中所说的前脚掌不是脚尖，而是整个脚掌前二分之一的部位。如果用脚尖</p>
</li>
</ol>
<p>跑步，会让脚趾关节受到很大的冲击力造成损伤。</p>
<ol start="4">
<li><p>横向摆臂，这样不仅不会稳定身体，反而可能产生更多的扭转力，身体的不稳定更容易引起岔气状况的出现。</p>
</li>
<li><p>膝盖内扣，女生常出现这种问题，这样可能导致膝关节的损伤。</p>
</li>
</ol>
<p>几乎所有人都会觉得跑步挺简单的，但是跑步是一项周期性的运动。相同的一个动作，需要重复重复再重复，动作中小的错误，也可能积累起来给你造成困扰，跑步姿势有很多可以优化和改进的地方。如果想避免危险的疼痛，除了保证跑步的姿势正确，还需要注意训练总量的控制。每周的跑步总量不要超过上一周的10%，比如第一周10公里，第二周尽量不要超过11公里。跑步是一个循序渐进的过程，需要不断地练习才能越跑越瘦、越跑越远。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>运动</category>
      </categories>
      <tags>
        <tag>跑步</tag>
        <tag>Keep</tag>
        <tag>运动</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker替换镜像源与常用命令</title>
    <url>/2018/09/18/docker-ti-huan-jing-xiang-yuan-yu-chang-yong-ming-ling/</url>
    <content><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>CentOS7下直接运行<code>yum -y install docker</code></p>
<p>查看是否安装成功<code>docker version</code>或者<code>docker info</code></p>
<blockquote>
<p><code>docker info</code>显示内容需要启动docker服务才能看见</p>
</blockquote>
<h3 id="启动docker服务"><a href="#启动docker服务" class="headerlink" title="启动docker服务"></a>启动docker服务</h3><p><code>service docker start</code>或者<code>systemctl start docker</code></p>
<p>设置开机自启动<br><code>systemctl enable docker</code></p>
<h3 id="替换为国内镜像源"><a href="#替换为国内镜像源" class="headerlink" title="替换为国内镜像源"></a>替换为国内镜像源</h3><h4 id="修改或新增-etc-docker-daemon-json文件"><a href="#修改或新增-etc-docker-daemon-json文件" class="headerlink" title="修改或新增/etc/docker/daemon.json文件"></a>修改或新增<code>/etc/docker/daemon.json</code>文件</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">{</span>
<span class="token string">"registry-mirrors"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token string">"http://hub-mirror.c.163.com"</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>修改之后重启一下docker服务</p>
<pre class="line-numbers language-bash"><code class="language-bash">systemctl restart docker.service 或者 <span class="token function">service</span> docker restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="Docker国内源"><a href="#Docker国内源" class="headerlink" title="Docker国内源"></a>Docker国内源</h4><p>Docker 官方中国区<br><a href="https://registry.docker-cn.com" target="_blank" rel="noopener">https://registry.docker-cn.com</a></p>
<p>网易<br><a href="http://hub-mirror.c.163.com" target="_blank" rel="noopener">http://hub-mirror.c.163.com</a></p>
<p>中国科技大学<br><a href="https://docker.mirrors.ustc.edu.cn" target="_blank" rel="noopener">https://docker.mirrors.ustc.edu.cn</a></p>
<p>阿里云<br><a href="https://pee6w651.mirror.aliyuncs.com" target="_blank" rel="noopener">https://pee6w651.mirror.aliyuncs.com</a></p>
<h3 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h3><h4 id="列出本地所有image文件"><a href="#列出本地所有image文件" class="headerlink" title="列出本地所有image文件"></a>列出本地所有image文件</h4><p><code>docker images</code> 或者<code>docker image ls</code></p>
<h4 id="删除本地镜像"><a href="#删除本地镜像" class="headerlink" title="删除本地镜像"></a>删除本地镜像</h4><p><code>docker image rm [镜像名]</code></p>
<h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><p><code>docker image pull [镜像组/镜像名]</code></p>
<h4 id="运行镜像生成容器"><a href="#运行镜像生成容器" class="headerlink" title="运行镜像生成容器"></a>运行镜像生成容器</h4><p><code>docker container run [镜像名]</code>或者<code>docker run [镜像名]</code></p>
<blockquote>
<p>如果本地没有该镜像，会自动去仓库pull</p>
</blockquote>
<h4 id="终止容器"><a href="#终止容器" class="headerlink" title="终止容器"></a>终止容器</h4><p><code>docker container kill [容器id]</code>或者<code>docker kill [容器id]</code>或者<code>docker stop [容器id]</code></p>
<h3 id="制作docker容器步骤"><a href="#制作docker容器步骤" class="headerlink" title="制作docker容器步骤"></a>制作docker容器步骤</h3><ol>
<li><p>编写Dockerfile文件</p>
<pre class="line-numbers language-dockerfile"><code class="language-dockerfile"># 该 image 文件继承官方的 node image，冒号表示标签，这里标签是8.4，即8.4版本的 node。
FROM node:8.4
# 创建者信息
MAINTAINER cyanidehm<xxxx@qq.com>
# 将当前目录下的所有文件（除了.dockerignore排除的路径），都拷贝进入 image 文件的/app目录。
COPY . /app
# 指定接下来的工作路径为/app。
WORKDIR /app
# 在/app目录下，运行npm install命令安装依赖。注意，安装后所有的依赖，都将打包进入 image 文件。
RUN npm install --registry=https://registry.npm.taobao.org
# 将容器 3000 端口暴露出来， 允许外部连接这个端口。
EXPOSE 3000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>编写.dockerignore文件</p>
<pre class="line-numbers language-dockerfile"><code class="language-dockerfile">.git
node_modules
npm-debug.log
# 表示上面三个路径会排除，不打进image文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>创建image文件</p>
<p>有了 Dockerfile 文件以后，就可以使用<code>docker image build</code>命令创建 image 文件了。</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ docker image build -t demo <span class="token keyword">.</span>
<span class="token comment" spellcheck="true"># 或者</span>
$ docker image build -t demo:0.0.1 <span class="token keyword">.</span>
 <span class="token comment" spellcheck="true"># -t参数用来指定 image 文件的名字（该例中demo为image名），后面还可以用冒号指定标签。如果不指定，默认的标签就是latest。最后的那个点表示 Dockerfile 文件所在的路径，上例是当前路径，所以是一个点。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>生成image之后就可以使用<code>docker images</code>查看到了</p>
</li>
<li><p>生成容器</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ docker container run -p 8000:3000 -itd --name my_demo -h master -v /opt/java:/home/java --privileged<span class="token operator">=</span>true demo:0.0.1 /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>-p参数：容器的 3000 端口映射到本机的 8000 端口。<br>-it参数：容器的 Shell 映射到当前的 Shell，然后你在本机窗口输入的命令，就会传入容器。<br>-d参数：容器后台运行。<br>–name参数：表示生成的容器名称，这里为my_demo。<br>-h参数：表示生成的容器主机名，这里为master。<br>-v参数：表示主机地址/opt/java和容器中地址/home/java映射，上传到/opt/java目录就能同步上传到容器内。<br>demo:0.0.1：镜像文件的名字（如果有标签，还需要提供标签，这里标签为0.0.1，如果不提供，默认是 latest 标签）。<br>/bin/bash：容器启动以后，内部第一个执行的命令。这里是启动 Bash，保证用户可以使用 Shell。<br><code>--privileged</code>: CentOS7中安全模块selinux会把容器读写权限禁掉，添加该参数赋予容器权限，也可以禁用CentOS7的selinux模块。</p>
</blockquote>
</li>
</ol>
<h3 id="将运行的容器打包成镜像"><a href="#将运行的容器打包成镜像" class="headerlink" title="将运行的容器打包成镜像"></a>将运行的容器打包成镜像</h3><ol>
<li><p>登录<strong>docker hub</strong>网站注册账号。</p>
<p> <a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a></p>
</li>
<li><p><code>docker login</code>命令登录，输入相应用户名和密码</p>
<pre class="line-numbers language-bash"><code class="language-bash"> Username: cyanidehm
 Password: 
 Login Succeeded  <span class="token comment" spellcheck="true"># 表示登录成功</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>使用<code>docker ps</code>查看当前运行的容器</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoopCDH opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker ps</span>
 CONTAINER ID   IMAGE    COMMAND        CREATED             STATUS              PORTS     NAMES
 9bffe3a2142e   centos   <span class="token string">"/bin/bash"</span>    About an hour ago   Up About an hour              vigilant_dijkstra<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p> 得到容器id：<code>9bffe3a2142e</code></p>
</li>
<li><p>使用<code>docker commit 9bffe3a2142e my_centos</code>命令提交到本地镜像，my_centos为镜像名（自己取名）</p>
<blockquote>
<p><code>docker commit [OPTIONS] [容器id或名称] [镜像名称：版本]</code>，OPTIONS选项包括：<br>-a，–author=””作者信息。<br>-m，–message=””提交信息。<br>-p，–pause=true提交时暂停容器运行。</p>
</blockquote>
</li>
<li><p>查看本地镜像</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoopCDH opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker images</span>
 REPOSITORY     TAG       IMAGE ID       CREATED          SIZE
 my_centos      latest    bcc2cf471c38   11 seconds ago   400 MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>将镜像改到自己账户名下，推送到<code>docker hub</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoopCDH opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker tag my_centos cyanidehm/my_centos</span>
 <span class="token punctuation">[</span>root@hadoopCDH opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker push cyanidehm/my_centos:latest</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><h4 id="查看容器"><a href="#查看容器" class="headerlink" title="查看容器"></a>查看容器</h4><p>   <code>docker ps</code>查看正在运行的容器。</p>
<p>   <code>docker ps -a</code>或<code>docker container ls --all</code>查看所有存在的容器。</p>
<h4 id="退出容器bash"><a href="#退出容器bash" class="headerlink" title="退出容器bash"></a>退出容器bash</h4><p>   在容器的命令行，按下 Ctrl + c 停止 Node 进程，然后按下 Ctrl + d （或者输入 exit）退出容器。此外，也可以用<code>docker container kill</code>终止容器运行。</p>
<h4 id="删除容器文件"><a href="#删除容器文件" class="headerlink" title="删除容器文件"></a>删除容器文件</h4><p>   容器停止运行后，不会消失，使用<code>docker container ls --all</code>查看所有存在的容器（id等信息）。</p>
<p>   使用<code>docker container rm [容器id]</code>或者<code>docker rm [容器id]</code>删除容器。</p>
<h4 id="清除所有容器"><a href="#清除所有容器" class="headerlink" title="清除所有容器"></a>清除所有容器</h4><ol>
<li>停止所有容器<pre class="line-numbers language-bash"><code class="language-bash">docker stop <span class="token variable"><span class="token variable">$(</span>docker <span class="token function">ps</span> -aq<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>删除所有容器<pre class="line-numbers language-bash"><code class="language-bash">docker <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span>docker <span class="token function">ps</span> -aq<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<h4 id="运行已存在的容器"><a href="#运行已存在的容器" class="headerlink" title="运行已存在的容器"></a>运行已存在的容器</h4><p>   <code>docker container start [容器id]</code>或者<code>docker start [容器id]</code></p>
<h4 id="进入已经运行的容器"><a href="#进入已经运行的容器" class="headerlink" title="进入已经运行的容器"></a>进入已经运行的容器</h4><p>   <code>docker container exec -it [容器id] [/bin/bash]</code></p>
<h4 id="将容器里的文件拷贝到本机"><a href="#将容器里的文件拷贝到本机" class="headerlink" title="将容器里的文件拷贝到本机"></a>将容器里的文件拷贝到本机</h4><p>   <code>docker container cp [容器id]:[/path/to/file] .</code></p>
<h4 id="将镜像保存为tar文件、将tar文件加载到docker镜像"><a href="#将镜像保存为tar文件、将tar文件加载到docker镜像" class="headerlink" title="将镜像保存为tar文件、将tar文件加载到docker镜像"></a>将镜像保存为tar文件、将tar文件加载到docker镜像</h4><ol>
<li><p>保存镜像<br><code>docker save -o [路径/文件名] [镜像名]</code>或者<code>docker save [镜像名] &gt; [路径/文件名]</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoopCDH opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker save -o my_centos.tar cyanidehm/my_centos:latest</span>
 <span class="token punctuation">[</span>root@hadoopCDH opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll my_centos.tar </span>
 -rw-------. 1 root root 779944960 10月 17 03:40 my_centos.tar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>可以通过指定打包格式来打包成压缩文件：<br><code>docker save [镜像名] | gzip &gt; [路径/文件名.tar.gz]</code></p>
</blockquote>
</li>
<li><p>加载镜像<br><code>docker load --input [路径/文件名]</code>或者<code>docker load &lt; [路径/文件名]</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker load &lt; my_centos.tar </span>
1d31b5806ba4: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span> 208.3 MB/208.3 MB
a5789abfb72a: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span> 571.6 MB/571.6 MB
Loaded image: cyanidehm/my_centos:latest
<span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker images</span>
REPOSITORY            TAG                 IMAGE ID            CREATED                  SIZE
cyanidehm/my_centos   latest              3ced2987d19a        Less than a second ago   765 MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><strong>批量save/load镜像</strong><br>脚本地址<a href="https://gist.github.com/hydra1983/22b2bed38b4f5f56caa87c830c96378d#file-docker_images-sh" target="_blank" rel="noopener">hydra1983/docker_images.sh</a><br>批量保存<br><code>./docker_images.sh save-images</code><br>批量加载<br><code>./docker_images.sh load-images</code></p>
<blockquote>
<p>脚本将镜像文件保存到<code>./images</code>目录下，另外一个<code>images.db</code>文件与之对应<br>将这两个东西拷贝到其他主机，执行批量加载命令就行实现批量转移镜像</p>
</blockquote>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@localhost save<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./docker_images.sh save-images </span>
 Create /opt/save/images.db
 Read /opt/save/images.db
 Create /opt/save/images
 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> save 00ead811e8ae docker.io/portainer/portainer:latest to /opt/save/images/00ead811e8ae.dim
 real    0m27.343s
 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> save d63b9b4bd205 rancher/server:v1.6.14 to /opt/save/images/d63b9b4bd205.dim
 real    4m46.480s
 <span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> save 34a453d374b9 docker.io/rancher/agent:v1.2.9 to /opt/save/images/34a453d374b9.dim
 real    0m28.037s

 <span class="token punctuation">[</span>root@localhost save<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./docker_images.sh load-images</span>
 <span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h4 id="容器启动后自动运行脚本"><a href="#容器启动后自动运行脚本" class="headerlink" title="容器启动后自动运行脚本"></a>容器启动后自动运行脚本</h4><p>情景：1、镜像已经存在。2、镜像内包含脚本<code>/home/ssh.sh</code>需要在容器启动后运行</p>
<pre class="line-numbers language-bash"><code class="language-bash">docker run -itd cyanidehm/base_ssh /bin/bash -c <span class="token string">"sh /home/ssh.sh;/bin/bash"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>说明：<br><code>/bin/bash -c ""</code>表示容器运行后使用bash执行引号内语句。<br>引号内的 <code>;</code> 表示命令分割，执行多条命令时用<code>;</code>进行分割<br>引号内最后的<code>/bin/bash</code>表示容器启动以bash方式运行（如果容器启动后没有线程在运行，容器会停止退出） </p>
</blockquote>
<h4 id="查看容器相关信息"><a href="#查看容器相关信息" class="headerlink" title="查看容器相关信息"></a>查看容器相关信息</h4><p>在容器外面不进入容器查看容器信息<br><code>docker inspect [容器名/id]</code>：查看到容器的相关信息</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 查看容器的具体IP地址，如果输出是空的说明没有配置IP地址</span>
docker inspect --format <span class="token string">'{{ .NetworkSettings.IPAddress }}'</span> <span class="token punctuation">[</span>容器名/id<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>容器</category>
      </categories>
      <tags>
        <tag>容器</tag>
        <tag>Docker</tag>
        <tag>命令</tag>
        <tag>镜像源</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7下搭建Hadoop集群</title>
    <url>/2018/09/16/centos7-xia-da-jian-hadoop-ji-qun/</url>
    <content><![CDATA[<h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><table>
<thead>
<tr>
<th align="center">节点</th>
<th align="center">IP地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">hadoopmaster</td>
<td align="center">192.168.171.10</td>
</tr>
<tr>
<td align="center">hadoop001</td>
<td align="center">192.168.171.11</td>
</tr>
<tr>
<td align="center">hadoop002</td>
<td align="center">192.168.171.12</td>
</tr>
</tbody></table>
<h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><h4 id="虚拟机创建多个Linux系统并配置静态IP"><a href="#虚拟机创建多个Linux系统并配置静态IP" class="headerlink" title="虚拟机创建多个Linux系统并配置静态IP"></a>虚拟机创建多个Linux系统并配置静态IP</h4><p>配置静态IP教程请点击<a href="http://blog.hming.org/2018/08/09/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/">这里</a></p>
<h4 id="配置DNS（每个节点）"><a href="#配置DNS（每个节点）" class="headerlink" title="配置DNS（每个节点）"></a>配置DNS（每个节点）</h4><p>进入配置文件，添加主节点和从节点的映射关系<br><code>vim /etc/hosts</code>，添加如下代码（ip以及主机名以自己配置为准）</p>
<pre class="line-numbers language-shell"><code class="language-shell">192.168.171.10 hadoopmaster
192.168.171.11 hadoop001
192.168.171.12 hadoop002<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="关闭防火墙（每个节点）"><a href="#关闭防火墙（每个节点）" class="headerlink" title="关闭防火墙（每个节点）"></a>关闭防火墙（每个节点）</h4><p>关闭服务<br><code>systemctl stop firewalld</code><br>关闭开机自启动<br><code>systemctl disable firewalld</code></p>
<h4 id="配置免密码登录"><a href="#配置免密码登录" class="headerlink" title="配置免密码登录"></a>配置免密码登录</h4><p>配置免密码登录教程请点击<a href="http://blog.hming.org/2018/09/16/Linux%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/">这里</a></p>
<h4 id="配置java环境（每个节点）"><a href="#配置java环境（每个节点）" class="headerlink" title="配置java环境（每个节点）"></a>配置java环境（每个节点）</h4><p>配置java环境教程点击<a href="http://blog.hming.org/2018/09/14/Linux%E4%B8%8B%E5%AE%89%E8%A3%85Java/">这里</a></p>
<h3 id="搭建Hadoop完全分布式集群"><a href="#搭建Hadoop完全分布式集群" class="headerlink" title="搭建Hadoop完全分布式集群"></a>搭建Hadoop完全分布式集群</h3><blockquote>
<p>在各个节点上安装与配置Hadoop的过程都基本相同，因此可以在每个节点上安装好Hadoop后，在主节点master上进行统一配置，然后通过<a href="http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#scp%EF%BC%88%E8%B7%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%B7%E8%B4%9D%EF%BC%89">scp 命令</a>将修改的配置文件拷贝到各个从节点上即可。</p>
</blockquote>
<h4 id="下载hadoop安装包，解压，配置环境变量"><a href="#下载hadoop安装包，解压，配置环境变量" class="headerlink" title="下载hadoop安装包，解压，配置环境变量"></a>下载hadoop安装包，解压，配置环境变量</h4><p>点击<a href="http://archive.apache.org/dist/hadoop/common/" target="_blank" rel="noopener">这里</a>选择适合的版本进行安装包下载<br>找个目录（本文为/opt目录），<a href="http://http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#rz%E4%B8%8Esz%EF%BC%88%E4%B8%8A%E4%BC%A0%E3%80%81%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%EF%BC%89" target="_blank" rel="noopener">rz 命令</a>上传到Linux系统</p>
<p>解压<code>tar -zxvf hadoop-*.tar.gz</code><br>配置环境变量（每个节点）<br><code>vim /etc/profile</code><br>添加如下代码</p>
<pre class="line-numbers language-shell"><code class="language-shell">export HADOOP_HOME=/opt/hadoop-2.7.3 # 该目录为解压安装目录
export PATH=$PATH:$HADOOP_HOME/bin
export PATH=$PATH:$HADOOP_HOME/sbin
export HADOOP_CONF_DIR=${HADOOP_HOME}/etc/hadoop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>完成后刷新一下，使profile生效</p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster ~]# source /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="配置环境脚本文件的JAVA-HOME参数"><a href="#配置环境脚本文件的JAVA-HOME参数" class="headerlink" title="配置环境脚本文件的JAVA_HOME参数"></a>配置环境脚本文件的JAVA_HOME参数</h4><p>进入hadoop安装目录下的<code>etc/hadoop</code>目录<br>分别在<code>hadoop-env.sh</code>、<code>mapred-env.sh</code>、<code>yarn-env.sh</code>文件中添加或修改参数：</p>
<pre><code>export JAVA_HOME="/opt/jdk1.8"  # 路径为jdk安装路径</code></pre><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><blockquote>
<p>hadoop安装目录下的<code>etc/hadoop</code>目录,一共需要修改<code>core-site.xml</code>、<code>hdfs-site.xml</code>、<code>yarn-site.xml</code>、<code>mapred-site.xml</code>、<code>slaves</code>(3.0之后为<code>workers</code>)文件，按实际情况修改配置信息</p>
</blockquote>
<h5 id="1-core-site-xml"><a href="#1-core-site-xml" class="headerlink" title="1.core-site.xml"></a>1.core-site.xml</h5><p>更多参数配置参考：<a href="http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/core-default.xml" target="_blank" rel="noopener">core-default.xml</a></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- 配置hdfs地址 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hadoopmaster:9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- 保存临时文件目录 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/opt/hadoop/tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.proxyuser.root.hosts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.proxyuser.root.groups<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="2-hdfs-site-xml"><a href="#2-hdfs-site-xml" class="headerlink" title="2.hdfs-site.xml"></a>2.hdfs-site.xml</h5><p>更多参数配置参考：<a href="http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/hdfs-default.xml" target="_blank" rel="noopener">hdfs-default.xml</a></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- 主节点地址 --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.http-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster:50070<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.name.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>file:/opt/hadoop/dfs/name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.datanode.data.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>file:/opt/hadoop/dfs/data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- 备份份数 --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- 第二节点地址 --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.secondary.http-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoop001:9001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.webhdfs.enabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.permissions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>配置为false后，可以允许不要检查权限就生成dfs上的文件，方便倒是方便了，但是你需要防止误删除.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="3-mapred-site-xml"><a href="#3-mapred-site-xml" class="headerlink" title="3.mapred-site.xml"></a>3.mapred-site.xml</h5><p>更多参数配置参考：<a href="http://hadoop.apache.org/docs/stable/hadoop-mapreduce-client/hadoop-mapreduce-client-core/mapred-default.xml" target="_blank" rel="noopener">mapred-default.xml</a></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.jobhistory.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster:10020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.jobhistory.webapp.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster:19888<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="4-yarn-site-xml（资源管理器）"><a href="#4-yarn-site-xml（资源管理器）" class="headerlink" title="4.yarn-site.xml（资源管理器）"></a>4.yarn-site.xml（资源管理器）</h5><p>更多参数配置参考：<a href="http://hadoop.apache.org/docs/stable/hadoop-yarn/hadoop-yarn-common/yarn-default.xml" target="_blank" rel="noopener">yarn-default.xml</a></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.auxservices.mapreduce.shuffle.class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>org.apache.hadoop.mapred.ShuffleHandler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster:8032<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.scheduler.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster:8030<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.resource-tracker.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster:8031<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.admin.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster:8033<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.webapp.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster:8088<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.resource.memory-mb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- NodeManage中的配置，这里配置过小可能导致nodemanager启动不起来
                          大小应该大于 spark中 executor-memory + driver的内存 --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>6144<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- RsourceManager中配置
                          大小应该大于 spark中 executor-memory + driver的内存 --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.maximum-allocation-mb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>61440<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- 使用核数 --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.resource.cpu-vcores<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.log-aggregation-enable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.log-aggregation.retain-seconds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>604800<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.vmem-check-enabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>discription</span><span class="token punctuation">></span></span>忽略虚拟内存的检查，如果你是安装在虚拟机上，这个配置很有用，配上去之后后续操作不容易出问题。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>discription</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>
       <span class="token comment" spellcheck="true">&lt;!-- 调度策略，设置为公平调度器 --></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.scheduler.class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="5-slaves文件（3-0之后为workers文件）"><a href="#5-slaves文件（3-0之后为workers文件）" class="headerlink" title="5.slaves文件（3.0之后为workers文件）"></a>5.slaves文件（3.0之后为workers文件）</h5><pre><code># 增加从节点地址（这里由于配置了hosts，直接使用主机名，也可以配ip地址）
hadoop001
hadoop002</code></pre><h4 id="将文件夹copy到其他子节点"><a href="#将文件夹copy到其他子节点" class="headerlink" title="将文件夹copy到其他子节点"></a>将文件夹copy到其他子节点</h4><p>通过<a href="http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#scp%EF%BC%88%E8%B7%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%B7%E8%B4%9D%EF%BC%89">scp 命令</a>将修改好的文件夹拷贝到各个从节点上</p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster ~]# scp -r /opt/hadoop/ root@hadoop001:/opt
...
[root@hadoopmaster ~]# scp -r /opt/hadoop/ root@hadoop002:/opt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="初始化、启动"><a href="#初始化、启动" class="headerlink" title="初始化、启动"></a>初始化、启动</h4><pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster hadoop]# bin/hdfs namenode -format<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>全部启动<code>sbin/start-all.sh</code>，也可以分开<code>sbin/start-dfs.sh</code>、<code>sbin/start-yarn.sh</code>启动</p>
<blockquote>
<p>报错：<br>Starting namenodes on [hadoopmaster]<br>ERROR: Attempting to operate on hdfs namenode as root<br>ERROR: but there is no HDFS_NAMENODE_USER defined. Aborting operation.<br>Starting datanodes<br>ERROR: Attempting to operate on hdfs datanode as root<br>ERROR: but there is no HDFS_DATANODE_USER defined. Aborting operation.<br>Starting secondary namenodes [hadoop001]<br>ERROR: Attempting to operate on hdfs secondarynamenode as root<br>ERROR: but there is no HDFS_SECONDARYNAMENODE_USER defined. Aborting operation.<br>Starting resourcemanager<br>ERROR: Attempting to operate on yarn resourcemanager as root<br>ERROR: but there is no YARN_RESOURCEMANAGER_USER defined. Aborting operation.<br>Starting nodemanagers<br>ERROR: Attempting to operate on yarn nodemanager as root<br>ERROR: but there is no YARN_NODEMANAGER_USER defined. Aborting operation.</p>
<p>原因：是因为缺少用户定义造成的，所以分别编辑开始和关闭脚本<br>$ vim sbin/start-dfs.sh<br>$ vim sbin/stop-dfs.sh<br>在顶部空白处添加内容：<br>HDFS_DATANODE_USER=root<br>HADOOP_SECURE_DN_USER=hdfs<br>HDFS_NAMENODE_USER=root<br>HDFS_SECONDARYNAMENODE_USER=root </p>
<p>start-yarn.sh，stop-yarn.sh顶部也需添加以下：<br>YARN_RESOURCEMANAGER_USER=root<br>HADOOP_SECURE_DN_USER=yarn<br>YARN_NODEMANAGER_USER=root</p>
</blockquote>
<h4 id="Web访问，要先开放端口或者直接关闭防火墙"><a href="#Web访问，要先开放端口或者直接关闭防火墙" class="headerlink" title="Web访问，要先开放端口或者直接关闭防火墙"></a>Web访问，要先开放端口或者直接关闭防火墙</h4><ol>
<li><p>关闭防火墙</p>
<pre class="line-numbers language-shell"><code class="language-shell"># 查看防火墙状态
firewall-cmd --state
# 临时关闭
systemctl stop firewalld
# 禁止开机启动
systemctl disable firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>浏览器打开<a href="http://hadoopmaster:8088/" target="_blank" rel="noopener">http://hadoopmaster:8088/</a></p>
</li>
<li><p>浏览器打开<a href="http://hadoopmaster:50070/" target="_blank" rel="noopener">http://hadoopmaster:50070/</a></p>
<h3 id="单例管理每个节点"><a href="#单例管理每个节点" class="headerlink" title="单例管理每个节点"></a>单例管理每个节点</h3><pre class="line-numbers language-bash"><code class="language-bash">$<span class="token operator">></span> sbin/hadoop-daemon.sh start datanode     <span class="token comment" spellcheck="true"># 启动数据节点</span>
$<span class="token operator">></span> sbin/yarn-daemon.sh start nodemanager    <span class="token comment" spellcheck="true"># 启动数据管理节点</span>
$<span class="token operator">></span> bin/hadoop-daemon.sh start tasktracker   <span class="token comment" spellcheck="true"># 启动任务管理器</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="yarn-application命令介绍"><a href="#yarn-application命令介绍" class="headerlink" title="yarn application命令介绍"></a>yarn application命令介绍</h3><p><code>yarn application</code>后接参数：</p>
</li>
<li><p><code>-list</code> 列出所有application信息</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yarn application -list</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p><code>-appStates &lt;States&gt;</code> 跟 -list 一起使用，用来筛选不同状态的 application，多个用”,”分隔；<br> 所有状态：ALL, NEW, NEW_SAVING, SUBMITTED, ACCEPTED, RUNNING, FINISHED, FAILED, KILLED</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yarn application -list -appStates RUNNING</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p><code>-appTypes &lt;Types&gt;</code> 跟 -list 一起使用，用来筛选不同类型的 application，多个用”,”分隔；<br> 如 MAPREDUCE,TEZ</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yarn  application -list -appTypes MAPREDUCE</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p><code>-kill &lt;Application ID&gt;</code> 杀死一个 application，需要指定一个 Application ID</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yarn application -kill application_1526100291229_206393</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p><code>-status &lt;Application ID&gt;</code> 列出 某个application 的状态</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yarn application -status application_1526100291229_206393</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p><code>-movetoqueue &lt;Application ID&gt;</code> 移动 application 到其他的 queue，不能单独使用</p>
</li>
<li><p><code>-queue &lt;Queue Name&gt;</code> 与 movetoqueue 命令一起使用，指定移动到哪个 queue</p>
<pre class="line-numbers language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@master ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yarn application -movetoqueue application_1526100291229_206393 -queue other</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>集群</tag>
        <tag>Linux</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux集群配置免密码登录</title>
    <url>/2018/09/16/linux-ji-qun-pei-zhi-mian-mi-ma-deng-lu/</url>
    <content><![CDATA[<h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><table>
<thead>
<tr>
<th align="center">节点</th>
<th align="center">IP地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">hadoopmaster</td>
<td align="center">192.168.171.10</td>
</tr>
<tr>
<td align="center">hadoop001</td>
<td align="center">192.168.171.11</td>
</tr>
<tr>
<td align="center">hadoop002</td>
<td align="center">192.168.171.12</td>
</tr>
</tbody></table>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>每台主机<code>authorized_keys</code>文件里面包含的主机（ssh秘钥），该主机都能无密码登录，所以只要每台主机的<code>authorized_keys</code>文件里面都放入其他主机（需要无密码登录的主机）的ssh秘钥就行了。</p>
<h3 id="配置每个节点的hosts文件"><a href="#配置每个节点的hosts文件" class="headerlink" title="配置每个节点的hosts文件"></a>配置每个节点的hosts文件</h3><p><code>vim /etc/hosts</code>编辑hosts文件，添加如下代码</p>
<pre class="line-numbers language-shell"><code class="language-shell">192.168.171.10 hadoopmaster
192.168.171.11 hadoop001
192.168.171.12 hadoop002<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="每个节点生成ssh秘钥"><a href="#每个节点生成ssh秘钥" class="headerlink" title="每个节点生成ssh秘钥"></a>每个节点生成ssh秘钥</h3><pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster ~]# ssh-keygen -t rsa # 执行命令生成秘钥
...
[root@hadoopmaster .ssh]# ls
id_rsa  id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>执行命令后会在~目录下生成<code>.ssh</code>文件夹，里面包含<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件。</p>
<blockquote>
<p>执行生成秘钥命令时会让用户选择生成地址，如果想直接使用默认地址（不想交互），则可以使用<br><code>ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa</code>命令</p>
</blockquote>
<h3 id="将每个节点的id拷贝到所有节点的authorized-keys中"><a href="#将每个节点的id拷贝到所有节点的authorized-keys中" class="headerlink" title="将每个节点的id拷贝到所有节点的authorized_keys中"></a>将每个节点的id拷贝到所有节点的<code>authorized_keys</code>中</h3><h4 id="方法一（推荐）"><a href="#方法一（推荐）" class="headerlink" title="方法一（推荐）"></a>方法一（推荐）</h4><h5 id="每个节点执行ssh自带命令，将该节点的id拷贝到其他节点中"><a href="#每个节点执行ssh自带命令，将该节点的id拷贝到其他节点中" class="headerlink" title="每个节点执行ssh自带命令，将该节点的id拷贝到其他节点中"></a>每个节点执行ssh自带命令，将该节点的id拷贝到其他节点中</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id hadoopmaster</span>
<span class="token punctuation">[</span>root@hadoopmaster /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id hadoop001</span>
<span class="token punctuation">[</span>root@hadoopmaster /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id hadoop002</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop001 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id hadoopmaster</span>
<span class="token punctuation">[</span>root@hadoop001 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id hadoop001</span>
<span class="token punctuation">[</span>root@hadoop001 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id hadoop002</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop002 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id hadoopmaster</span>
<span class="token punctuation">[</span>root@hadoop002 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id hadoop001</span>
<span class="token punctuation">[</span>root@hadoop002 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh-copy-id hadoop002</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><h5 id="在主节点上将公钥拷贝到一个特定文件中"><a href="#在主节点上将公钥拷贝到一个特定文件中" class="headerlink" title="在主节点上将公钥拷贝到一个特定文件中"></a>在主节点上将公钥拷贝到一个特定文件中</h5><pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster /]# cd ~/.ssh
[root@hadoopmaster .ssh]# cp id_rsa.pub authorized_keys # 拷贝到authorized_keys文件中
[root@hadoopmaster .ssh]# ls
authorized_keys  id_rsa  id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="将authorized-keys文件拷贝至下一个节点，并将该节点的ssh秘钥加入该文件中"><a href="#将authorized-keys文件拷贝至下一个节点，并将该节点的ssh秘钥加入该文件中" class="headerlink" title="将authorized_keys文件拷贝至下一个节点，并将该节点的ssh秘钥加入该文件中"></a>将<code>authorized_keys</code>文件拷贝至下一个节点，并将该节点的ssh秘钥加入该文件中</h5><pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster .ssh]# scp authorized_keys root@hadoop001:/root/.ssh/
root@hadoop001's password:      # 此时会提示输入密码，输入hadoop001主机root密码即可
authorized_keys                                                           100%  399   450.9KB/s   00:00

# 进入001主机    
[root@hadoop001 /]# cd ~/.ssh
[root@hadoop001 .ssh]# ls
authorized_keys  id_rsa  id_rsa.pub
[root@hadoop001 .ssh]# cat id_rsa.pub>>authorized_keys  # 使用cat追加到authorized_keys文件
ssh-rsa AAAAB.....TnYjJ root@hadoop001  
ssh-rsa AAAAB.....Ah+n9 root@hadoopmaster
[root@hadoop001 .ssh]# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>关于scp命令请点击<a href="http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/">这里</a>查看</p>
</blockquote>
<h5 id="重复上一步动作，将每个节点的ssh秘钥都加入authorized-keys文件中"><a href="#重复上一步动作，将每个节点的ssh秘钥都加入authorized-keys文件中" class="headerlink" title="重复上一步动作，将每个节点的ssh秘钥都加入authorized_keys文件中"></a>重复上一步动作，将每个节点的ssh秘钥都加入<code>authorized_keys</code>文件中</h5><h5 id="将最后节点生成的authorized-keys文件复制到每个节点下即可"><a href="#将最后节点生成的authorized-keys文件复制到每个节点下即可" class="headerlink" title="将最后节点生成的authorized_keys文件复制到每个节点下即可"></a>将最后节点生成的<code>authorized_keys</code>文件复制到每个节点下即可</h5><pre class="line-numbers language-shell"><code class="language-shell">[root@hadoop002 .ssh]# scp authorized_keys root@hadoopmaster:/root/.ssh
...
[root@hadoop002 .ssh]# scp authorized_keys root@hadoop001:/root/.ssh
...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="测试登录"><a href="#测试登录" class="headerlink" title="测试登录"></a>测试登录</h3><p>使用<code>ssh 用户名@节点名（或ip地址）</code>命令进行无密码登录测试</p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster .ssh]# ssh root@hadoop001
Last login: Sun Sep 16 17:51:27 2018 from 192.168.171.1
[root@hadoop001 ~]# ssh root@hadoop002
Last login: Sun Sep 16 17:51:31 2018 from 192.168.171.1
[root@hadoop002 ~]# ssh root@hadoopmaster
Last login: Sun Sep 16 17:51:23 2018 from 192.168.171.1
[root@hadoopmaster ~]# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>集群</tag>
        <tag>Linux</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下安装Java</title>
    <url>/2018/09/14/linux-xia-an-zhuang-java/</url>
    <content><![CDATA[<h3 id="将Java压缩包传到Linux"><a href="#将Java压缩包传到Linux" class="headerlink" title="将Java压缩包传到Linux"></a>将Java压缩包传到Linux</h3><p>使用<code>rz</code>命令将tar包上传到Linux系统<br><img src="http://47.106.179.244/linux%E4%B8%8B%E5%AE%89%E8%A3%85java/rz%E6%88%AA%E5%9B%BE.jpg" alt="rz命令"></p>
<blockquote>
<p>关于rz命令，<a href="http://http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#rz%E4%B8%8Esz%EF%BC%88%E4%B8%8A%E4%BC%A0%E3%80%81%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%EF%BC%89" target="_blank" rel="noopener">点击查看介绍</a></p>
</blockquote>
<h3 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h3><pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster mnt]# ls
jdk-8u101-linux-x64.tar.gz
[root@hadoopmaster mnt]# tar -zxvf jdk-8u101-linux-x64.tar.gz 
...
jdk1.8.0_101/man/ja_JP.UTF-8/man1/javapackager.1
jdk1.8.0_101/man/ja_JP.UTF-8/man1/jstat.1
[root@hadoopmaster mnt]# ls
jdk1.8.0_101  jdk-8u101-linux-x64.tar.gz
[root@hadoopmaster mnt]# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ol>
<li><code>vim /etc/profile</code>编辑配置文件，添加如下代码<pre class="line-numbers language-shell"><code class="language-shell"> # java
 export JAVA_HOME=/home/jdk  # 该路径为java安装路径
 export CLASSPATH=$JAVA_HOME/lib/
 export PATH=$PATH:$JAVA_HOME/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>保存后退出</li>
<li><code>source /etc/profile</code>刷新配置文件</li>
</ol>
<h3 id="验证安装状态"><a href="#验证安装状态" class="headerlink" title="验证安装状态"></a>验证安装状态</h3><pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster mnt]# java -version
java version "1.8.0_101"
Java(TM) SE Runtime Environment (build 1.8.0_101-b13)
Java HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)
[root@hadoopmaster mnt]# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>大数据选型</title>
    <url>/2018/09/03/da-shu-ju-xuan-xing/</url>
    <content><![CDATA[<h3 id="各个框架优缺点"><a href="#各个框架优缺点" class="headerlink" title="各个框架优缺点"></a>各个框架优缺点</h3><table>
<thead>
<tr>
<th align="center">名称</th>
<th align="left">优势和特点</th>
<th align="left">不足</th>
<th align="left">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">HDFS</td>
<td align="left">1、高扩展、低成本、成熟的生态圈<br>2、处理超大文件（GB、TB甚至PB级别）<br>3、运行于廉价的商用机器集群上<br>4、高容错性和高可靠性（一份文件可以储存多份）<br></td>
<td align="left">1、不适合低延迟数据访问（访问延迟高，HBase补足）<br>2、频繁的读写会对NameNode造成很大压力（采用Kafka过渡）<br>3、不支持多用户写入和随机文件修改（只能在文件末尾进行追加操作）</td>
<td align="left">用作Hbase和Hive的物理储存</td>
</tr>
<tr>
<td align="center">HBase</td>
<td align="left">1、HDFS高延迟数据访问的一种改进方式，适合实时查询<br>2、可以提供高并发读写操作的支持<br>3、可以动态增加列，并且列为空就不存储数据，节省存储空间<br>4、可以自动切分数据，使得数据存储自动具有水平扩展功能</td>
<td align="left">1、只支持简单的Row Key条件查询（除非和其他框架一起使用，例如：Phoenix、Hive）<br>2、不能支持Master server的故障切换，当Master宕机后，整个存储系统就会挂掉（可以使用Zookeeper进行多Master待命，当工作的Master宕机，则推选待命的Master继续工作）<br>3、只支持Java API（除非和其他框架一起使用，例如：Phoenix、Hive）</td>
<td align="left">应用场景：不断插入新的信息，而不修改。不需要复杂查询条件来查询数据<br>底层依赖HDFS来作为其物理储存（特殊情况可以使用本机文件系统）</td>
</tr>
<tr>
<td align="center">Hive</td>
<td align="left">1、提供类SQL查询语言HQL<br>2、可扩展<br>3、避免去写MR，减少开发人员学习成本<br>4、提供统一的元数据(Meta store)管理（推荐使用MySQL储存元数据），可以和impala/spark等共享元数据</td>
<td align="left">1、HQL表达能力有限<br>2、效率比较低，延迟较高（Hive用MR作为计算引擎，HDFS作为储存系统），自动生成的MR作业通常情况下不够智能化<br>3、调优比较困难，粒度较粗</td>
<td align="left">应用场景：不支持实时查询，一般用作对一段时间内的数据（海量数据）进行分析查询（数据分析），日志分析，海量结构化数据离线分析等<br>底层依赖HDFS来作为其物理储存<br>可以通过Hive操作HBase数据进行计算分析，但是速度很慢<br><strong>元数据</strong>包括：表名、表所属的数据库（默认是default）、表的拥有者、列、分区字段、表的类型（是否是外部表）、表的数据所在的目录等</td>
</tr>
<tr>
<td align="center">Zookeeper</td>
<td align="left">1、配置管理（使用Zab一致性协议提供一致性），动态管理HBase、Hive等的配置信息<br>2、名字服务，提供类似DNS的方式映射主机<br>3、分布式锁（Leader Election），HBase的Master选举就是这种方式<br>4、集群管理，动态感知集群状态，对节点的新增和删除作动态处理</td>
<td align="left">1、选举过程很慢，当Zookeeper的master宕机，选举新的master通常消耗30到120秒<br>2、性能有限，TPS（Transactions Per Second每秒传输的事务处理个数）大概一万多，单个节点平均连接数是6K，watcher是30万，吞吐似乎还可以，但是时延就没那么乐观了，特别是响应时间、网络、缓存<br>3、无法进行有效的权限控制，在大型的复杂系统里面，使用zookeeper必须自己再额外的开发一套权限控制系统，通过那套权限控制系统再访问zookeeper<br>4、API使用复杂<br>5、回调次数限制，ZK中所有Watch回调通知都是一次性的<br>6、由于性能的限制，导致的业务系统的数据不一致</td>
<td align="left">1、HBase Master 的 HA(High Available) 解决方案<br>2、已经成为了分布式大数据框架中容错性的标准框架，几乎所有的分布式大数据相关的开源框架，都依赖于 Zookeeper 实现 HA</td>
</tr>
<tr>
<td align="center">Yarn（统一资源管理系统）</td>
<td align="left">1、提高资源（内存、IO、网络、磁盘等）利用率<br>2、能够支持不同的计算框架，可以跑Hadoop、Storm、Spark程序<br>3、将资源管理和作业控制分离，减小JobTracker（整个MapReduce计算框架中的主服务）压力</td>
<td align="left">1、各个应用无法感知集群整体资源的使用情况，只能等待上层调度推送信息<br>2、资源分配采用轮询、ResourceOffer机制（mesos)，在分配过程中使用悲观锁，并发粒度小<br>3、缺乏一种有效的竞争或优先抢占的机制</td>
<td align="left">和Zookeeper的区别：Yarn相当于政府，负责管理机器资源的分配；Zookeeper相当于立法委员会,负责保持信息的一致</td>
</tr>
<tr>
<td align="center">Kafka</td>
<td align="left">1、实时性比直接将数据采集到HDFS高<br>2、可以将一条数据提供给多个接收者做不同的处理<br>3、消费点（数据读写记录）记录在Zookeeper中，有序且容易维护<br>4、可扩展、高性能，支持Batch操作</td>
<td align="left">1、复杂性，Kafka需要Zookeeper的支持，Topic一般需要人工创建，部署和维护比一般MQ成本更高<br>2、不支持事务</td>
<td align="left">1、可以使用Zookeeper来维护broker信息，实现HA</td>
</tr>
<tr>
<td align="center">Spark</td>
<td align="left">1、MapReduce的替代方案，可以融入Hadoop生态系统（兼容HDFS、Hive和HBase等分布式储存层）<br>2、支持复杂查询。在简单的“map”及“reduce”操作之外，Spark还支持SQL查询、流式计算、机器学习和图算法<br>3、轻量级快速处理<br>4、支持多语言、社区活跃度高<br>5、可以直接对HDFS进行数据读写，支持YARN等部署模式</td>
<td align="left">1、没有自带的分布式储存系统（可用HDFS、Hive和HBase等分布式储存层）<br>2、处理数据量太大时容易造成内存问题（一般超过1T建议使用MR）<br>3、JVM的内存overhead太大，1G的数据通常需要消耗5G的内存</td>
<td align="left">与MapReduce的主要区别：<br>1、Spark的大部分操作都是在内存中，速度较快，而Hadoop的MapReduce系统会在每次操作之后将所有数据写回到物理存储介质上，速度较慢，为了确保在出现问题时能够完全恢复。但Spark的弹性分布式数据存储也能实现这一点。<br>2、在高级数据处理（如实时流处理和机器学习）方面，Spark的功能要胜过Hadoop MR<br>和Flink一样可以部署在Yarn上</td>
</tr>
<tr>
<td align="center">Flink</td>
<td align="left">1、支持增量迭代计算，具有对迭代自动优化的功能，性能优于Spark，在迭代次数增加后尤为明显<br>2、在流式计算方面支持毫秒级计算（和Storm一样），优于Spark流式处理的秒级计算</td>
<td align="left">1、SQL的支持没有Spark好，Spark还支持对SQL的优化<br>2、社区活跃度没有Spark高</td>
<td align="left">在流数据处理方面，Spark数据处理采用的是分批处理模式而Flink采用的是实时处理模式。Spark处理由数据块构成的RDD(弹性分布式数据集) ，而Flink能够实时处理一行又一行的数据。因此，无论进行何种设置，Spark总是会存在一定的数据迟延，而Flink不会有这种情况。</td>
</tr>
<tr>
<td align="center">Apache Beam</td>
<td align="left">1、统一数据批处理（Batch）和流处理（Stream）编程的范式<br>2、能运行在任何可执行的引擎之上</td>
<td align="left">1、国内社区活跃度低，网上实战资料很少，基本都是官网文档翻译<br>2、stackoverflow上仅有1156个问题，scala则有82,463个提问</td>
<td align="left">与Spark的Scala开发库比较：<br>1、Apache Beam提供的基础函数支持不及Scala，例如排序，Beam必须构建一个二维元组才可以排序，而且只能升序<br>2、相同功能的代码量上来说，Scala远小于Apache Beam，Apache Beam开发效率相比Scala会低一点<br>3、Scala是脚本语言，代码格式比较随意，如果开发不规范，维护成本会比较高</td>
</tr>
</tbody></table>
<h3 id="Kubernetes、Mesos以及Swarm对比"><a href="#Kubernetes、Mesos以及Swarm对比" class="headerlink" title="Kubernetes、Mesos以及Swarm对比"></a>Kubernetes、Mesos以及Swarm对比</h3><table>
<thead>
<tr>
<th align="center">要比较的方面</th>
<th align="left">Kubernetes</th>
<th align="left">Mesos</th>
<th align="left">Swarm</th>
</tr>
</thead>
<tbody><tr>
<td align="center">定位</td>
<td align="left">专注于大规模容器集群管理。从Service 的角度定义微服务化的容器应用。<br>整个框架考虑了很多生产中需要的功能，比如Proxy、ServiceDNS、LivenessProbe等，基本上不用经过二次开发就能应用到生产环境中</td>
<td align="left">是一个分布式系统内核，将不同类型的主机组织在一起当作一台逻辑计算机。<br>专注于资源的管理和任务调度，并不针对容器管理。Mesos上所有的应用部署都需要有专门的框架支撑，例如若要支撑Docker, 则必须安装Marathon;在安装Spark和Hadoop时需要不同的框架</td>
<td align="left">是目前Docker社区原生支持的集群工具，它通过扩展DockerAPI,力图让用户像使用单机Docker API一样驱动整个集群</td>
</tr>
<tr>
<td align="center">对容器的支持</td>
<td align="left">天生针对容器和应用的云化，通过微服务的理念对容器进行服务化包装</td>
<td align="left">支撑Docker,必须安装Marathon框架。只关注对应用层资源的管理，其余由框架完成</td>
<td align="left">原生支持Docker,使用标准的Docker API， 任何使用Docker AP1与Docker进行通信的工具都可以无缝地和Swarm协同工作</td>
</tr>
<tr>
<td align="center">对资源的控制</td>
<td align="left">本身具备资源管控能力，可以控制容器对资源的调用</td>
<td align="left">Mesos将所有的主机虚拟成一个大的CPU、内存池，可以定义资源分配，也可以动态调配</td>
<td align="left">在Swarm集群下可以设置参数或编排模板对应用进行资源限制</td>
</tr>
<tr>
<td align="center">是否支持资源分区</td>
<td align="left">能通过Namespace和Node进行集群分区，控制到主机、CPU和内存</td>
<td align="left">支持资源分区，可以定义CPU、内存、磁盘等</td>
<td align="left">通过将集群分成具有不同属性的子集群来创建逻辑集群分区</td>
</tr>
<tr>
<td align="center">开发成本</td>
<td align="left">原生集成了Service Proxy 、Service DNS，在应用实例动态扩展时实时更新Proxy的转发规则。基本上没有二次开发成本，而且便于多集群的集成</td>
<td align="left">要实现生产应用，需要增加很多功能，例如HA Proxy Service DNS等，需要自己实现集群扩展和Proxy的集成。二次开发成本高，需要专业的实施团队</td>
<td align="left">由于对外提供完全标准的Docker API，所以只需理解Docker命令，用户就可以使用Swam集群，团队不需要有足够丰富的Linux 和分布式经验</td>
</tr>
<tr>
<td align="center">非Docker应用的集成</td>
<td align="left">不能实现Docker化的应用，可通过外部Service 方式集成到集群中</td>
<td align="left">必须自行开发Framework 来集成到 Mesos中</td>
<td align="left">通过外部Service方式集成到集群中</td>
</tr>
</tbody></table>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>云操作系统基础架构选型</title>
    <url>/2018/08/18/yun-cao-zuo-xi-tong-xuan-xing/</url>
    <content><![CDATA[<p>——by<a href="https://immno.github.io/" target="_blank" rel="noopener">陶老师</a></p>
<h2 id="为什么要有“云操作系统”"><a href="#为什么要有“云操作系统”" class="headerlink" title="为什么要有“云操作系统”"></a>为什么要有“云操作系统”</h2><blockquote>
<p>我自己的思考： 当有了大数据应用、用户应用集群时,我们如何高效地管理、协调、扩展集群中的应用，以及如何使应用本身高可用、使集群资源得到充分利用（<a href="https://blog.csdn.net/tengxy_cloud/article/details/51453273" target="_blank" rel="noopener">弹性伸缩能力</a>）?</p>
</blockquote>
<h2 id="引入-DCOS"><a href="#引入-DCOS" class="headerlink" title="引入 DCOS"></a>引入 DCOS</h2><blockquote>
<p>数据中心操作系统（<a href="https://baike.baidu.com/item/DCOS/19831056" target="_blank" rel="noopener">DCOS</a>）是为整个数据中心提供分布式调度与协调功能，实现数据中心级弹性伸缩能力的软件堆栈，它将所有数据中心的资源当做一台计算机来调度。</p>
</blockquote>
<p>主流有如下几种:</p>
<ul>
<li><code>Apache Mesos</code></li>
<li><code>Apache Hadoop YARN</code></li>
<li><code>Kubernetes</code></li>
</ul>
<h3 id="DCOS-案例"><a href="#DCOS-案例" class="headerlink" title="DCOS 案例"></a>DCOS 案例</h3><p>通过以下两个案例,我们应该就能清楚的了解到DCOS是什么、DCOS能做什么、DCOS能为我们带来什么收益了。</p>
<h4 id="1-浙江移动"><a href="#1-浙江移动" class="headerlink" title="1.浙江移动"></a>1.浙江移动</h4><p><a href="https://wenku.baidu.com/view/62edb1e5f80f76c66137ee06eff9aef8941e481f.html" target="_blank" rel="noopener">浙江移动</a> 讲述了 IT架构的演进、虚拟化问题以及实际场景应用。</p>
<h4 id="2-天玑科技"><a href="#2-天玑科技" class="headerlink" title="2.天玑科技"></a>2.天玑科技</h4><p><a href="http://www.dnt.com.cn/detail/77/307.html" target="_blank" rel="noopener">天玑科技</a> 针对电信、银行、保险行业做的案例。</p>
<h3 id="Apache-mesos、Kubernetes-哪一个？"><a href="#Apache-mesos、Kubernetes-哪一个？" class="headerlink" title="Apache mesos、Kubernetes 哪一个？"></a>Apache mesos、Kubernetes 哪一个？</h3><blockquote>
<p>为什么不考虑 Apache Hadoop YARN？在我看来，它比较适合大数据生态圈（<code>hadoop</code>和<code>spark</code>资源管理）,对于其他的生态圈不太友好，因此不考虑用来作为整个大平台的基础架构。</p>
</blockquote>
<h4 id="参考1"><a href="#参考1" class="headerlink" title="参考1"></a>参考1</h4><p><a href="https://blog.csdn.net/dev_csdn/article/details/78830912" target="_blank" rel="noopener">有哪些是Apache Mesos能做到，而Kubernetes做不到的</a></p>
<ul>
<li>社区，Mesos的社区比Kubernetes的小得多。Kubernetes得到了包括谷歌、英特尔、Mirantis、RedHat等在内的众多大公司的财务支持。Mesos主要由Mesosphere公司开发，并得到了苹果、微软等公司的支持</li>
<li>规模，Mesos从一开始就是专门面向大客户的。在Twitter、Apple、Verizon、Yelp和Netflix都有应用，并且在数千台服务器上运行了数十万个容器。Kubernetes总的来说：Mesos比较适合大型的公司，比较稳定。</li>
</ul>
<h4 id="参考2"><a href="#参考2" class="headerlink" title="参考2"></a>参考2</h4><p><a href="https://ruby-china.org/topics/29652?locale=en" target="_blank" rel="noopener"> 实测 Kubernetes 和 Mesos 在高并发下的网络性能</a></p>
<ul>
<li>并发测试，Kubernetes略好一点。</li>
</ul>
<h4 id="参考3"><a href="#参考3" class="headerlink" title="参考3"></a>参考3</h4><p><a href="https://www.zhihu.com/question/53751176" target="_blank" rel="noopener">Kubernetes和Mesos有啥区别，我该使用哪个好</a></p>
<ul>
<li>节点，一万以下节点，Kubernetes 较好：开发、部署</li>
<li>开发难度，Mesos 开发难度较高，需要深度定制</li>
</ul>
<h4 id="参考4"><a href="#参考4" class="headerlink" title="参考4"></a>参考4</h4><p><a href="https://promotion.aliyun.com/ntms/act/blockchainshow.html?spm=5176.8142029.1139928.7.e9396d3evJ9rLq" target="_blank" rel="noopener">区块链与容器进阶应用发布会 </a></p>
<ul>
<li>阿里云开始提供Kubernetes服务</li>
<li>BaaS平台支持</li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>现阶段总体来说，使用Kubernetes 是比较好的，二次开发较少，社区活跃，资料好查，发展快速，国内使用较多，带有谷歌光环。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>架构</tag>
        <tag>云操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令</title>
    <url>/2018/08/15/linux-chang-yong-ming-ling/</url>
    <content><![CDATA[<h3 id="输入界面快捷操作（命令行快捷操作）"><a href="#输入界面快捷操作（命令行快捷操作）" class="headerlink" title="输入界面快捷操作（命令行快捷操作）"></a>输入界面快捷操作（命令行快捷操作）</h3><h4 id="操作方式及操作效果"><a href="#操作方式及操作效果" class="headerlink" title="操作方式及操作效果"></a>操作方式及操作效果</h4><table>
<thead>
<tr>
<th>操作方式</th>
<th>操作效果</th>
</tr>
</thead>
<tbody><tr>
<td><code>Ctrl+k</code></td>
<td>剪切命令行中光标所在处之后的所有字符（包括自身）</td>
</tr>
<tr>
<td><code>Ctrl+u</code></td>
<td>剪切命令行中光标所在处之前的所有字符（不包括自身）</td>
</tr>
<tr>
<td><code>Ctrl+y</code></td>
<td>粘贴刚才所删除、剪切的字符</td>
</tr>
<tr>
<td><code>Ctrl+o</code></td>
<td>回车效果</td>
</tr>
<tr>
<td><code>Ctrl+j</code></td>
<td>回车效果</td>
</tr>
<tr>
<td>Ctrl+f</td>
<td>光标向后移动一个字符位,相当与-&gt;（右方向键）</td>
</tr>
<tr>
<td>Ctrl+b</td>
<td>光标向前移动一个字符位,相当与&lt;-（左方向键）</td>
</tr>
<tr>
<td>Alt+f</td>
<td>光标向后移动一个单词位</td>
</tr>
<tr>
<td>Alt+b</td>
<td>光标向前移动一个单词位</td>
</tr>
<tr>
<td><code>Ctrl+a</code></td>
<td>移动到当前行的开头</td>
</tr>
<tr>
<td><code>Ctrl+e</code></td>
<td>移动到当前行的结尾</td>
</tr>
<tr>
<td><code>Ctrl+l</code></td>
<td>清屏</td>
</tr>
</tbody></table>
<h3 id="清理缓存命令"><a href="#清理缓存命令" class="headerlink" title="清理缓存命令"></a>清理缓存命令</h3><table>
<thead>
<tr>
<th>说明</th>
<th>命令</th>
</tr>
</thead>
<tbody><tr>
<td>查看内存使用情况</td>
<td><code>free -h</code></td>
</tr>
<tr>
<td>强制被改变的内容立刻写入磁盘，更新超块信息</td>
<td><code>sync</code></td>
</tr>
<tr>
<td>仅清除页面缓存（PageCache）</td>
<td><code>echo 1 &gt; /proc/sys/vm/drop_caches</code></td>
</tr>
<tr>
<td>清除目录项和inode</td>
<td><code>echo 2 &gt; /proc/sys/vm/drop_caches</code></td>
</tr>
<tr>
<td>清除页面缓存，目录项和inode</td>
<td><code>echo 3 &gt; /proc/sys/vm/drop_caches</code></td>
</tr>
<tr>
<td>每个 Linux 系统有三种选项来清除缓存而不需要中断任何进程或服务。</td>
<td></td>
</tr>
<tr>
<td>（LCTT 译注：Cache，译作“缓存”，指 CPU 和内存之间高速缓存。Buffer，译作“缓冲区”，指在写入磁盘前的存储再内存中的内容。）</td>
<td></td>
</tr>
<tr>
<td>参考：</td>
<td></td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/ailice001/article/details/80353924" target="_blank" rel="noopener">https://blog.csdn.net/ailice001/article/details/80353924</a></td>
<td></td>
</tr>
<tr>
<td><a href="https://www.cnblogs.com/yorkyang/p/9226121.html" target="_blank" rel="noopener">https://www.cnblogs.com/yorkyang/p/9226121.html</a></td>
<td></td>
</tr>
</tbody></table>
<h3 id="shell脚本相关"><a href="#shell脚本相关" class="headerlink" title="shell脚本相关"></a>shell脚本相关</h3><h4 id="位置参数变量"><a href="#位置参数变量" class="headerlink" title="位置参数变量"></a>位置参数变量</h4><h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5><p>当执行一个shell脚本时，如果希望获取到命令行得参数信息，就可以使用到位置参数变量，比如：./myshell.sh 100 200，这个就是一个执行shell得命令行，可以在myshell脚本中获取到参数信息。</p>
<h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><ul>
<li><strong><code>$n</code></strong> 功能描述：n为数字，$0表示命令本身，$1-$9代表第一到第九个参数，十个以上的参数需要用大括号包含，如：${10}</li>
<li><strong><code>$*</code></strong> 功能描述：这个变量代表命令行中所有的参数，$*把所有的参数看成一个整体</li>
<li><strong><code>$@</code></strong> 功能描述：这个变量也代表命令行中所有的参数，不过$@把每个参数区分对待</li>
<li><strong><code>$#</code></strong> 功能描述：这个变量代表命令行中所有参数的个数</li>
</ul>
<h4 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h4><h5 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h5><p>shell设计者事先定义好的变量，可以直接在shell中使用</p>
<h5 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h5><ul>
<li><strong><code>$$</code></strong> 功能描述：当前进程的进程号（PID）</li>
<li><strong><code>$!</code></strong> 功能描述：后台运行的最后一个进程的进程号（PID）</li>
<li><strong><code>$?</code></strong> 功能描述：最后一次执行命令的返回状态。如果这个变量的值为0，证明上一个命令正确执行；如果非0（具体是哪个数，由命令自己来决定），则证明上一个命令执行不正确。</li>
</ul>
<h3 id="查看CPU信息"><a href="#查看CPU信息" class="headerlink" title="查看CPU信息"></a>查看CPU信息</h3><p>总核数 = 物理CPU个数 X 每颗物理CPU的核数<br>总逻辑CPU数 = 物理CPU个数 X 每颗物理CPU的核数 X 超线程数</p>
<ol>
<li>查看物理CPU个数<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos4 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l</span>
1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li>查看每个物理CPU中core的个数（核数）<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos4 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/cpuinfo| grep "cpu cores"| uniq</span>
cpu cores    <span class="token keyword">:</span> 4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li>查看逻辑CPU的个数<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos4 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/cpuinfo| grep "processor"| wc -l</span>
4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li>查看CPU信息（型号）<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos4 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c</span>
   4  Intel<span class="token punctuation">(</span>R<span class="token punctuation">)</span> Xeon<span class="token punctuation">(</span>R<span class="token punctuation">)</span> CPU E5-1603 0 @ 2.80GHz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="scp（跨服务器拷贝）"><a href="#scp（跨服务器拷贝）" class="headerlink" title="scp（跨服务器拷贝）"></a>scp（跨服务器拷贝）</h3><h4 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>scp  [参数] [原路径] [目标路径]</code></p>
<h4 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h4><p>scp是 secure copy的缩写, scp是linux系统下基于<code>ssh</code>登陆进行安全的远程文件<code>拷贝命令</code>。linux的scp命令可以在<code>linux服务器之间</code>复制文件和目录。 </p>
<h4 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h4><blockquote>
<p>-1  强制scp命令使用协议ssh1<br>-2  强制scp命令使用协议ssh2<br>-4  强制scp命令只使用IPv4寻址<br>-6  强制scp命令只使用IPv6寻址<br>-B  使用批处理模式（传输过程中不询问传输口令或短语）<br>-C  允许压缩。（将-C标志传递给ssh，从而打开压缩功能）<br>-p 保留原文件的修改时间，访问时间和访问权限。<br>-q  不显示传输进度条。<br>-r  递归复制整个目录。<br>-v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。<br>-c cipher  以cipher将数据传输进行加密，这个选项将直接传递给ssh。<br>-F ssh_config  指定一个替代的ssh配置文件，此参数直接传递给ssh。<br>-i identity_file  从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。<br>-l limit  限定用户所能使用的带宽，以Kbit/s为单位。<br>-o ssh_option  如果习惯于使用ssh_config(5)中的参数传递方式，<br>-P port  注意是大写的P, port是指定数据传输用到的端口号<br>-S program  指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</p>
</blockquote>
<h4 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h4><ol>
<li>复制文件</li>
</ol>
<p><code>scp local_file remote_username@remote_ip:remote_folder</code></p>
<p>或者</p>
<p><code>scp local_file remote_username@remote_ip:remote_file</code></p>
<p>或者</p>
<p><code>scp local_file remote_ip:remote_folder</code></p>
<p>或者</p>
<p><code>scp local_file remote_ip:remote_file</code></p>
<ol start="2">
<li>复制目录</li>
</ol>
<p><code>scp -r local_folder remote_username@remote_ip:remote_folder</code></p>
<p>或者  </p>
<p><code>scp -r local_folder remote_ip:remote_folder</code></p>
<blockquote>
<p>从远程拷贝到本地同理</p>
</blockquote>
<h3 id="jobs（查看后台进程）"><a href="#jobs（查看后台进程）" class="headerlink" title="jobs（查看后台进程）"></a>jobs（查看后台进程）</h3><h4 id="命令格式-1"><a href="#命令格式-1" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>jobs(选项)(参数)</code></p>
<h4 id="命令功能-1"><a href="#命令功能-1" class="headerlink" title="命令功能"></a>命令功能</h4><p><strong>jobs命令</strong>用于显示Linux中的任务列表及任务状态，包括后台运行的任务。该命令可以显示任务号及其对应的进程号。其中，任务号是以普通用户的角度进行的，而进程号则是从系统管理员的角度来看的。一个任务可以对应于一个或者多个进程号。 </p>
<h4 id="命令参数-1"><a href="#命令参数-1" class="headerlink" title="命令参数"></a>命令参数</h4><blockquote>
<p>-l：显示进程号；<br>-p：仅任务对应的显示进程号；<br>-n：显示任务状态的变化；<br>-r：仅输出运行状态（running）的任务；<br>-s：仅输出停止状态（stoped）的任务。</p>
</blockquote>
<h4 id="使用实例-1"><a href="#使用实例-1" class="headerlink" title="使用实例"></a>使用实例</h4><p><code>&amp;</code>这个用在一个命令的最后，可以把这个命令放到后台执行</p>
<p><code>Ctrl+z</code>将当前任务加入后台任务</p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster ~]# ping www.baidu.com
PING www.a.shifen.com (180.97.33.108) 56(84) bytes of data.
64 bytes from 180.97.33.108 (180.97.33.108): icmp_seq=1 ttl=128 time=45.4 ms
64 bytes from 180.97.33.108 (180.97.33.108): icmp_seq=2 ttl=128 time=45.3 ms
^Z
[1]+  已停止               ping www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>jobs</code>显示当前后台任务列表</p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster ~]# jobs
[1]+  已停止               ping www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><code>bg</code></p>
<p>将一个在后台暂停的命令，变成继续执行 如果后台中有多个命令，可以用bg %jobnumber将选中的命令调出，%jobnumber是通过jobs命令查到的后台正在执行的命令的序号(不是pid)</p>
<p><code>fg</code></p>
<p>将后台中的命令调至前台继续运行 如果后台中有多个命令，可以用 fg %jobnumber将选中的命令调出，%jobnumber是通过jobs命令查到的后台正在执行的命令的序号(不是pid)</p>
<p><code>kill</code>杀死一个进程，用法同<strong>fg</strong>和<strong>bg</strong></p>
<h3 id="alias（别名）"><a href="#alias（别名）" class="headerlink" title="alias（别名）"></a>alias（别名）</h3><h4 id="命令格式-2"><a href="#命令格式-2" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>alias ［别名=’命令’］</code>  ，在定义别名时，等号两边不能有空格。</p>
<p><code>unalias [别名]</code>  删除别名。</p>
<h4 id="命令功能-2"><a href="#命令功能-2" class="headerlink" title="命令功能"></a>命令功能</h4><p>linux系统下给命令指定别名。</p>
<p>在linux系统中如果命令太长又不符合用户的习惯，那么我们可以为它指定一个别名。虽然可以为命令建立“链接”解决长文件名的问题，但对于带命 令行参数的命令，链接就无能为力了。而指定别名则可以解决此类所有问题。</p>
<h4 id="使用实例-2"><a href="#使用实例-2" class="headerlink" title="使用实例"></a>使用实例</h4><pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster ~]# java -version
java version "1.8.0_101"
Java(TM) SE Runtime Environment (build 1.8.0_101-b13)
Java HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)

[root@hadoopmaster ~]# alias jv='java -version'

[root@hadoopmaster ~]# jv
java version "1.8.0_101"
Java(TM) SE Runtime Environment (build 1.8.0_101-b13)
Java HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用不带参数的alias时，显示当前所有已定义别名</p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster ~]# alias
alias cp='cp -i'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias jv='java -version'
alias l.='ls -d .* --color=auto'
alias ll='ls -l --color=auto'
alias ls='ls --color=auto'
alias mv='mv -i'
alias rm='rm -i'
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'
alias x='xcall.sh'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="回车（换行继续输入）"><a href="#回车（换行继续输入）" class="headerlink" title="\+回车（换行继续输入）"></a>\+回车（换行继续输入）</h3><h4 id="命令格式-3"><a href="#命令格式-3" class="headerlink" title="命令格式"></a>命令格式</h4><p>[未输完的命令] <code>\+回车</code> [继续未输完的命令]</p>
<h4 id="命令功能-3"><a href="#命令功能-3" class="headerlink" title="命令功能"></a>命令功能</h4><p>当输入指令过长时，使用<code>\+回车</code>可以跳到下一行继续输入指令</p>
<h4 id="使用实例-3"><a href="#使用实例-3" class="headerlink" title="使用实例"></a>使用实例</h4><pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopCDH mnt]# ls -al
总用量 0
drwxr-xr-x.  3 root root  19 8月  30 16:22 .
dr-xr-xr-x. 18 root root 235 8月  31 09:07 ..
drwxr-xr-x.  3 root root  53 8月  30 16:23 nginx
[root@hadoopCDH mnt]# ls \     #输入\后再回车直接进入换行输入模式
> -al
总用量 0
drwxr-xr-x.  3 root root  19 8月  30 16:22 .
dr-xr-xr-x. 18 root root 235 8月  31 09:07 ..
drwxr-xr-x.  3 root root  53 8月  30 16:23 nginx
[root@hadoopCDH mnt]# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="echo（定义变量）"><a href="#echo（定义变量）" class="headerlink" title="echo（定义变量）"></a>echo（定义变量）</h3><h4 id="命令格式-4"><a href="#命令格式-4" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>echo ${变量名}</code></p>
<h4 id="命令功能-4"><a href="#命令功能-4" class="headerlink" title="命令功能"></a>命令功能</h4><p>查看当前变量的值</p>
<p><strong>设置变量需遵从的规则</strong></p>
<ol>
<li><p>变量与变量内容之间只能用<code>=</code>来连接，不能有任何空格<br> <code>myname=liming</code></p>
</li>
<li><p>如果要在变量内容里面输入空格，则用双引号<br> <code>myname="li ming"</code></p>
</li>
<li><p>变数名称只能是英文字母与数字，但是开头字符不能是数字，如下为<code>错误示范</code>：<br> <code>2myname=VBird</code></p>
</li>
<li><p>变量内容若有空白字符可使用双引号<code>"</code>或单引号<code>'</code>将变量内容结合起来，但</p>
<ul>
<li>双引号内的特殊字符如<code>$</code>等，可以保有原本的特性，如下所示：<br><code>var="lang is $LANG"</code>则<code>echo $var</code>可得<code>lang is zh_TW.UTF-8</code></li>
<li>单引号内的特殊字符则仅为一般字符(纯文字)，如下所示：<br><code>var='lang is $LANG'</code>则<code>echo $var</code>可得<code>lang is $LANG</code></li>
</ul>
</li>
<li><p>可用字符<code>\</code>将特殊符号(如[Enter], $, ,空白字符, ‘等)变成一般字符，如：<br> <code>myname=VBird\ Tsai</code></p>
</li>
<li><p>一串指令的执行中，还需要藉由其他额外的指令所提供的资讯时，可以使用反单引号『`指令`』或『$(指令)』。<strong>特别注意</strong>，那个`是键盘上方的数字键1左边那个按键，而不是单引号！例如想要取得核心版本的设定：<br> <code>version=$(uname -r)</code>再<code>echo $version</code>可得<code>3.10.0-229.el7.x86_64</code></p>
</li>
<li><p>若该变量为扩增变量内容时，则可用<code>"$变量名称"</code>或<code>${变量}</code>累加内容，如下所示：<br> <code>PATH="$PATH":/home/bin</code>或<code>PATH=${PATH} :/home/bin</code></p>
</li>
<li><p>若该变量需要在其他子程序执行，则需要以export来使变量变成环境变量：<br> <code>export PATH</code></p>
</li>
<li><p>通常大写字符为系统预设变量，自行设定变量可以使用小写字符，方便判断(纯粹依照使用者兴趣与爱好) ；</p>
</li>
<li><p>取消变量的方法为使用<code>unset 变量名称</code>例如取消myname的设定：<br> <code>unset myname</code></p>
</li>
</ol>
<h4 id="使用实例-4"><a href="#使用实例-4" class="headerlink" title="使用实例"></a>使用实例</h4><pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopCDH mnt]# echo $NGINX_HOME
/usr/local/nginx
[root@hadoopCDH mnt]# myname=liming
[root@hadoopCDH mnt]# echo $myname
liming
[root@hadoopCDH mnt]# echo ${myname}
liming
[root@hadoopCDH mnt]# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="ntpdate（服务器时间同步）"><a href="#ntpdate（服务器时间同步）" class="headerlink" title="ntpdate（服务器时间同步）"></a>ntpdate（服务器时间同步）</h3><h4 id="命令格式-5"><a href="#命令格式-5" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>ntpdate time1.aliyun.com</code></p>
<h4 id="命令功能-5"><a href="#命令功能-5" class="headerlink" title="命令功能"></a>命令功能</h4><p>同步时间，与阿里云服务器时间同步。</p>
<h4 id="使用实例-5"><a href="#使用实例-5" class="headerlink" title="使用实例"></a>使用实例</h4><pre class="line-numbers language-shell"><code class="language-shell">[root@hadoopmaster bin]# xcall.sh ntpdate time1.aliyun.com
========== hadoopmaster ==========
11 Sep 09:45:55 ntpdate[6548]: adjust time server 203.107.6.88 offset 0.007047 sec
========== hadoop001 ==========
11 Sep 09:46:02 ntpdate[6278]: adjust time server 203.107.6.88 offset 0.002663 sec
========== hadoop002 ==========
11 Sep 09:46:08 ntpdate[4192]: adjust time server 203.107.6.88 offset 0.005169 sec
[root@hadoopmaster bin]# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="history（历史命令查看）"><a href="#history（历史命令查看）" class="headerlink" title="history（历史命令查看）"></a>history（历史命令查看）</h3><h4 id="命令格式及功能"><a href="#命令格式及功能" class="headerlink" title="命令格式及功能"></a>命令格式及功能</h4><table>
<thead>
<tr>
<th>命令格式</th>
<th>命令</th>
</tr>
</thead>
<tbody><tr>
<td><code>history</code></td>
<td>显示命令历史列表</td>
</tr>
<tr>
<td><code>↑(Ctrl+p)</code></td>
<td>显示上一条命令</td>
</tr>
<tr>
<td><code>↓(Ctrl+n)</code></td>
<td>显示下一条命令</td>
</tr>
<tr>
<td><code>!num</code></td>
<td>执行命令历史列表的第num条命令</td>
</tr>
<tr>
<td><code>!!</code></td>
<td>执行上一条命令</td>
</tr>
<tr>
<td><code>!?string?</code></td>
<td>执行含有string字符串的最新命令</td>
</tr>
</tbody></table>
<h4 id="使用实例-6"><a href="#使用实例-6" class="headerlink" title="使用实例"></a>使用实例</h4><ol>
<li><p>设置显示命令时间</p>
<pre><code>[root@hadoopmaster ~]# echo 'export HISTTIMEFORMAT='%F %T ' "' &gt;&gt; /etc/profile # 将`export HISTTIMEFORMAT='%F %T '`添加进配置文件`/etc/profile`
[root@hadoopmaster ~]# source /etc/profile # 刷新配置文件使其生效
[root@hadoopmaster ~]# history 5 # 查看最近5条记录，发现显示了时间
 1063  2018-09-15 11:00:39 history --help
 1064  2018-09-15 11:04:14 cd ~
 1065  2018-09-15 11:04:50 echo 'HISTTIMEFORMAT="%F %T "' &gt;&gt; /etc/profile
 1066  2018-09-15 11:05:01 vim /etc/profile
 1067  2018-09-15 11:07:07 history 5</code></pre></li>
<li><p>执行历史某条命令</p>
<pre><code>[root@hadoopmaster ~]# history 4 # 显示最近4条记录
 1066  2018-09-15 11:05:01 vim /etc/profile
 1067  2018-09-15 11:07:07 history 5
 1068  2018-09-15 11:08:30 ls
 1069  2018-09-15 11:08:37 history 5
[root@hadoopmaster ~]# !1068 # 执行1068条，也就是ls命令
ls
anaconda-ks.cfg  zookeeper.out
[root@hadoopmaster ~]# </code></pre></li>
</ol>
<h3 id="passwd（修改密码）"><a href="#passwd（修改密码）" class="headerlink" title="passwd（修改密码）"></a>passwd（修改密码）</h3><h4 id="命令格式-6"><a href="#命令格式-6" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>passwd [用户名]</code></p>
<h4 id="命令功能-6"><a href="#命令功能-6" class="headerlink" title="命令功能"></a>命令功能</h4><p>修改账户密码</p>
<h4 id="使用实例-7"><a href="#使用实例-7" class="headerlink" title="使用实例"></a>使用实例</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@slave001 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># passwd root       # 修改root密码</span>
Changing password <span class="token keyword">for</span> user root.
New password:                         <span class="token comment" spellcheck="true"># 设置新密码</span>
BAD PASSWORD: The password is shorter than 8 characters
Retype new password:                 <span class="token comment" spellcheck="true"># 确认新密码</span>
passwd: all authentication tokens updated successfully.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>修改root密码也可以使用下面一句命令搞定</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@a3c8baf6961e /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo "1234" | passwd --stdin root  # 将root密码设置为1234</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="ss（查看端口占用）"><a href="#ss（查看端口占用）" class="headerlink" title="ss（查看端口占用）"></a>ss（查看端口占用）</h3><h4 id="命令格式-7"><a href="#命令格式-7" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>ss [参数]</code></p>
<p><code>ss [参数] [过滤]</code></p>
<h4 id="命令功能-7"><a href="#命令功能-7" class="headerlink" title="命令功能"></a>命令功能</h4><p>ss(Socket Statistics的缩写)命令可以用来获取 socket统计信息（查询端口占用），比 netstat 更快速高效</p>
<h4 id="命令参数-2"><a href="#命令参数-2" class="headerlink" title="命令参数"></a>命令参数</h4><blockquote>
<p>-h, –help    帮助信息<br>  -V, –version    程序版本信息<br>  -n, –numeric    不解析服务名称<br>  -r, –resolve        解析主机名<br>  -a, –all    显示所有套接字（sockets）<br>  -l, –listening    显示监听状态的套接字（sockets）<br>  -o, –options        显示计时器信息<br>  -e, –extended       显示详细的套接字（sockets）信息<br>  -m, –memory         显示套接字（socket）的内存使用情况<br>  -p, –processes    显示使用套接字（socket）的进程<br>  -i, –info    显示 TCP内部信息<br>  -s, –summary    显示套接字（socket）使用概况<br>  -4, –ipv4           仅显示IPv4的套接字（sockets）<br>  -6, –ipv6           仅显示IPv6的套接字（sockets）<br>  -0, –packet            显示 PACKET 套接字（socket）<br>  -t, –tcp    仅显示 TCP套接字（sockets）<br>  -u, –udp    仅显示 UCP套接字（sockets）<br>  -d, –dccp    仅显示 DCCP套接字（sockets）<br>  -w, –raw    仅显示 RAW套接字（sockets）<br>  -x, –unix    仅显示 Unix套接字（sockets）</p>
</blockquote>
<h4 id="使用实例-8"><a href="#使用实例-8" class="headerlink" title="使用实例"></a>使用实例</h4><h5 id="显示Sockets摘要"><a href="#显示Sockets摘要" class="headerlink" title="显示Sockets摘要"></a>显示Sockets摘要</h5><p><code>ss -s</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ss -s</span>
Total: 7089 <span class="token punctuation">(</span>kernel 10238<span class="token punctuation">)</span>
TCP:   600 <span class="token punctuation">(</span>estab 267, closed 279, orphaned 0, synrecv 0, timewait 195/0<span class="token punctuation">)</span>, ports 0

Transport Total     IP        IPv6
*      10238     -         -        
RAW      0         0         0        
UDP      3         2         1        
TCP      321       203       118      
INET      324       205       119      
FRAG      0         0         0  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="显示TCP连接"><a href="#显示TCP连接" class="headerlink" title="显示TCP连接"></a>显示TCP连接</h5><p><code>ss -t -a</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ss -t -a</span>
State      Recv-Q Send-Q        Local Address:Port      Peer Address:Port   
LISTEN     0      0                 127.0.0.1:smux                 *:*       
LISTEN     0      0                         *:3690                 *:*       
LISTEN     0      0                         *:ssh                  *:*       
ESTAB      0      0           192.168.120.204:ssh          10.2.0.68:49368   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="找出占用套接字-端口的应用程序"><a href="#找出占用套接字-端口的应用程序" class="headerlink" title="找出占用套接字/端口的应用程序"></a>找出占用套接字/端口的应用程序</h5><p><code>ss -anlp | grep 8080</code></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ss -anlp | grep 8088</span>
tcp    LISTEN     0      128     ::ffff:10.75.4.31:8088     :::*     users:<span class="token punctuation">((</span><span class="token string">"java"</span>,pid<span class="token operator">=</span>11935,fd<span class="token operator">=</span>225<span class="token punctuation">))</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="watch（检测命令运行结果）"><a href="#watch（检测命令运行结果）" class="headerlink" title="watch（检测命令运行结果）"></a>watch（检测命令运行结果）</h3><h4 id="命令格式-8"><a href="#命令格式-8" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>watch [参数] [命令]</code></p>
<h4 id="命令功能-8"><a href="#命令功能-8" class="headerlink" title="命令功能"></a>命令功能</h4><p>监测一个命令的运行结果，周期性刷新结果，省得一遍遍的手动运行</p>
<h4 id="命令参数-3"><a href="#命令参数-3" class="headerlink" title="命令参数"></a>命令参数</h4><blockquote>
<ul>
<li><code>-n</code>或–interval  watch缺省每2秒运行一下程序，可以用-n或-interval来指定间隔的时间。</li>
<li><code>-d</code>或–differences  用-d或–differences 选项watch 会高亮显示变化的区域。 而-d=cumulative选项会把变动过的地方(不管最近的那次有没有变动)都高亮显示出来。</li>
<li><code>-t</code>或-no-title  会关闭watch命令在顶部的时间间隔,命令，当前时间的输出。</li>
</ul>
</blockquote>
<h4 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h4><p><code>watch -n 1 -d netstat -ant</code> 每隔一秒高亮显示网络链接数的变化情况<br><code>watch -n 10 'cat /proc/loadavg'</code> 10秒一次输出系统的平均负载</p>
<h4 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h4><p><code>Ctrl+c</code>退出观察模式</p>
<h3 id="rz与sz（上传、下载文件）"><a href="#rz与sz（上传、下载文件）" class="headerlink" title="rz与sz（上传、下载文件）"></a>rz与sz（上传、下载文件）</h3><p>当我们使用虚拟终端软件，如Xshell、SecureCRT或PuTTY来连接远程服务器后，需要上传、下载文件到本地，可以使用该命令。<br>使用前可能需要安装<code>lrzsz</code>软件：<br><code>yum -y install lrzsz</code></p>
<h4 id="rz（Receive-ZMODEM）"><a href="#rz（Receive-ZMODEM）" class="headerlink" title="rz（Receive ZMODEM）"></a>rz（Receive ZMODEM）</h4><h5 id="命令格式-9"><a href="#命令格式-9" class="headerlink" title="命令格式"></a>命令格式</h5><p><code>rz [选项]</code></p>
<h5 id="命令功能-9"><a href="#命令功能-9" class="headerlink" title="命令功能"></a>命令功能</h5><p>使用ZMODEM协议，将本地文件批量上传到远程Linux/Unix服务器，注意不能上传文件夹。</p>
<h5 id="命令参数-4"><a href="#命令参数-4" class="headerlink" title="命令参数"></a>命令参数</h5><blockquote>
<p><code>-+</code>, –append:将文件内容追加到已存在的同名文件<br><code>-a</code>,–ascii:以文本方式传输<br><code>-b</code>, –binary:以二进制方式传输，推荐使用<br><code>--delay-startup N</code>:等待N秒<br><code>-e</code>, –escape:对所有控制字符转义，建议使用<br><code>-E</code>, –rename:已存在同名文件则重命名新上传的文件，以点和数字作为后缀<br><code>-p</code>, –protect:对ZMODEM协议有效，如果目标文件已存在则跳过<br><code>-q</code>, –quiet:安静执行，不输出提示信息<br><code>-v</code>, –verbose:输出传输过程中的提示信息<br><code>-y</code>, –overwrite:存在同名文件则替换<br><code>-X</code>, –xmodem:使用XMODEM协议<br><code>--ymodem</code>:使用YMODEM协议<br><code>-Z</code>, –zmodem:使用ZMODEM协议<br><code>--version</code>：显示版本信息<br><code>--h</code>, –help：显示帮助信息</p>
</blockquote>
<h5 id="命令实例-1"><a href="#命令实例-1" class="headerlink" title="命令实例"></a>命令实例</h5><ol>
<li>输入rz，然后回车，选择本地文件上传<img src="http://47.106.179.244/linux%E4%B8%8B%E5%AE%89%E8%A3%85java/rz%E6%88%AA%E5%9B%BE.jpg" alt="rz上传jdk"></li>
<li>以二进制，并对控制字符进行转义，替换已存在的同名文件。<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rz -bye</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<h4 id="sz（Send-ZMODEM）"><a href="#sz（Send-ZMODEM）" class="headerlink" title="sz（Send ZMODEM）"></a>sz（Send ZMODEM）</h4><h5 id="命令格式-10"><a href="#命令格式-10" class="headerlink" title="命令格式"></a>命令格式</h5><p><code>sz [选项] [filelist]</code></p>
<h5 id="命令功能-10"><a href="#命令功能-10" class="headerlink" title="命令功能"></a>命令功能</h5><p>通过ZMODEM协议，可将多个文件从远程服务器下载到本地。注意不能下载文件夹，如果下载文件夹，请先打包再下载</p>
<h5 id="命令参数-5"><a href="#命令参数-5" class="headerlink" title="命令参数"></a>命令参数</h5><p>选项参数与<code>rz</code>相同，请参考上文中<code>rz</code>命令参数，或者运行命令<code>sz -h</code>查看</p>
<h5 id="命令实例-2"><a href="#命令实例-2" class="headerlink" title="命令实例"></a>命令实例</h5><p>下载多个文件</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># sz  file1 file2 file3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="wc（Word-Count单词统计）"><a href="#wc（Word-Count单词统计）" class="headerlink" title="wc（Word Count单词统计）"></a>wc（Word Count单词统计）</h3><h4 id="命令格式-11"><a href="#命令格式-11" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>wc [选项] [文件]</code></p>
<h4 id="命令功能-11"><a href="#命令功能-11" class="headerlink" title="命令功能"></a>命令功能</h4><p>统计指定文件中的字节数、字数、行数，并将统计结果显示输出。</p>
<h4 id="命令参数-6"><a href="#命令参数-6" class="headerlink" title="命令参数"></a>命令参数</h4><blockquote>
<p><code>-c</code> 统计字节数。<br><code>-l</code> 统计行数。<br><code>-m</code> 统计字符数。这个标志不能与 -c 标志一起使用。<br><code>-w</code> 统计字数。一个字被定义为由空白、跳格或换行字符分隔的字符串。<br><code>-L</code> 打印最长行的长度。</p>
</blockquote>
<h4 id="使用实例-9"><a href="#使用实例-9" class="headerlink" title="使用实例"></a>使用实例</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>hdfs@centos3 log<span class="token punctuation">]</span>$ <span class="token function">wc</span> -l mysqld.log 
7756 mysqld.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>hdfs@centos3 log<span class="token punctuation">]</span>$ jps
10842 Jps
19566 DataNode
<span class="token punctuation">[</span>hdfs@centos3 log<span class="token punctuation">]</span>$ jps <span class="token operator">|</span> <span class="token function">wc</span> -l
2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="w（显示目前登入系统的用户信息）"><a href="#w（显示目前登入系统的用户信息）" class="headerlink" title="w（显示目前登入系统的用户信息）"></a>w（显示目前登入系统的用户信息）</h3><h4 id="命令格式-12"><a href="#命令格式-12" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>w [选项]</code></p>
<h4 id="命令功能-12"><a href="#命令功能-12" class="headerlink" title="命令功能"></a>命令功能</h4><p>目前登入系统的用户有哪些人，以及他们正在执行的程序。</p>
<h4 id="命令参数-7"><a href="#命令参数-7" class="headerlink" title="命令参数"></a>命令参数</h4><blockquote>
<p><code>-f</code> 开启或关闭显示用户从何处登入系统。<br><code>-h</code> 不显示各栏位的标题信息列。<br><code>-l</code> 使用详细格式列表，此为预设值。<br><code>-s</code> 使用简洁格式列表，不显示用户登入时间，终端机阶段作业和程序所耗费的CPU时间。<br><code>-u</code> 忽略执行程序的名称，以及该程序耗费CPU时间的信息。</p>
</blockquote>
<h4 id="使用实例-10"><a href="#使用实例-10" class="headerlink" title="使用实例"></a>使用实例</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos3 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># w</span>
 16:23:23 up 29 days, 21:28,  5 users,  load average: 0.41, 0.42, 0.40
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
root     pts/0    10.75.4.14       16:11   27.00s  9.31s  9.28s /home/jdk/bin/java -Dproc_jar -Dhdp.version<span class="token operator">=</span>3.1.0.0-78 -Djava.net.preferIPv4Stack<span class="token operator">=</span>true -Dhdp.version<span class="token operator">=</span>3.1.0.0-78 -Xmx1024m -Xmx256m -Dlog4j.configurationFile<span class="token operator">=</span>hive-log4j2.pr
root     pts/1    10.75.4.12       15:43   19.00s 43.79s 43.79s -bash
root     pts/2    10.76.34.243     09:22    7:00m  1.69s  1.62s vim messages
root     pts/3    10.75.4.12       16:23    3.00s  0.00s  0.00s -bash
root     pts/5    10.75.4.11       Mon15    3.00s  0.06s  0.06s -bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>查看相应ssh连接进程号，可以通过kill -9 命令杀掉进程</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos3 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># w</span>
 16:36:49 up 29 days, 21:41,  4 users,  load average: 2.03, 0.96, 0.66
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
root     pts/0    10.75.4.14       16:26    9:05   0.00s  0.00s -bash
root     pts/1    10.75.4.12       15:43    2:49   2:15   2:15  -bash
root     pts/2    10.75.4.11       16:35    1.00s 20.22s  0.00s w
root     pts/3    10.75.4.12       16:23    2:49   1:27   1:27  -bash
<span class="token punctuation">[</span>root@centos3 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  ps -aux | grep sshd</span>
root      1105  0.0  0.0 112796  1280 ?        Ss   Feb18   0:00 /usr/sbin/sshd -D
root      4368  1.2  0.0 161400  6192 ?        Ss   15:43   0:40 sshd: root@pts/1
root     19926 11.3  0.0 161400  6200 ?        Ss   16:23   1:39 sshd: root@pts/3
root     21314  0.8  0.0 161400  6044 ?        Ss   16:26   0:05 sshd: root@pts/0
root     24001  0.0  0.0 161400  6044 ?        Ss   16:35   0:00 sshd: root@pts/2
root     24932  0.0  0.0 112728   996 pts/2    S+   16:37   0:00 <span class="token function">grep</span> --color<span class="token operator">=</span>auto sshd
<span class="token punctuation">[</span>root@centos3 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># kill -9 4368</span>
<span class="token punctuation">[</span>root@centos3 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># w</span>
 16:38:35 up 29 days, 21:43,  4 users,  load average: 1.55, 1.18, 0.78
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
root     pts/0    10.75.4.14       16:26   10:51   0.00s  0.00s -bash
root     pts/2    10.75.4.11       16:35    3.00s 20.23s  0.00s w
root     pts/3    10.75.4.12       16:23    4:35   2:33   2:33  -bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="hostnamectl（查看修改主机名）"><a href="#hostnamectl（查看修改主机名）" class="headerlink" title="hostnamectl（查看修改主机名）"></a>hostnamectl（查看修改主机名）</h3><h4 id="命令格式-13"><a href="#命令格式-13" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>hostnamectl [选项]</code></p>
<h4 id="命令功能-13"><a href="#命令功能-13" class="headerlink" title="命令功能"></a>命令功能</h4><p>查看和修改主机名。</p>
<blockquote>
<p>在CentOS中，有三种定义的主机名:静态的（static），瞬态的（transient），和灵活的（pretty）。静态主机名也称为内核主机名，是系统在启动时从/etc/hostname自动初始化的主机名。瞬态主机名是在系统运行时临时分配的主机名，例如，通过DHCP或mDNS服务器分配。静态主机名和瞬态主机名都遵从作为互联网域名同样的字符限制规则。而另一方面，灵活主机名则允许使用自由形式（包括特殊/空白字符）的主机名，以展示给终端用户（如hdp001）。</p>
</blockquote>
<h4 id="命令参数-8"><a href="#命令参数-8" class="headerlink" title="命令参数"></a>命令参数</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hostnamectl --help</span>
hostnamectl <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">..</span>.<span class="token punctuation">]</span> COMMAND <span class="token punctuation">..</span>.

Query or change system hostname.

  -h --help              查看帮助
     --version           显示包版本
     --no-ask-password   不要提示输入密码
  -H --host<span class="token operator">=</span><span class="token punctuation">[</span>USER@<span class="token punctuation">]</span>HOST  在远程主机上运行
  -M --machine<span class="token operator">=</span>CONTAINER 在本地容器上操作
     --transient         仅设置瞬态主机名
     --static            仅设置静态主机名
     --pretty            只设置灵活的主机名

Commands:
  status                 显示当前主机名设置
  set-hostname NAME      设置系统主机名
  set-icon-name NAME     设置主机的图标名称
  set-chassis NAME       设置主机的机箱类型
  set-deployment NAME    为主机设置部署环境
  set-location NAME      设置主机的位置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="使用实例-11"><a href="#使用实例-11" class="headerlink" title="使用实例"></a>使用实例</h4><p>查看当前主机名</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp002 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hostnamectl</span>
   Static hostname: hdp002
         Icon name: computer-vm
           Chassis: vm
        Machine ID: e47dbc1c37d64b7ebcb988e0ecf1836a
           Boot ID: 93fa221f8aae49a183970941c4ad5d48
    Virtualization: vmware
  Operating System: CentOS Linux 7 <span class="token punctuation">(</span>Core<span class="token punctuation">)</span>
       CPE OS Name: cpe:/o:centos:centos:7
            Kernel: Linux 3.10.0-862.el7.x86_64
      Architecture: x86-64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>仅查看静态主机名</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp002 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hostnamectl --static</span>
hdp002<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>修改主机名</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp002 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hostnamectl set-hostname hdp002.segma.tech</span>
<span class="token punctuation">[</span>root@hdp002 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hostnamectl --static</span>
hdp002.segma.tech<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="firewall-cmd（防火墙相关命令）"><a href="#firewall-cmd（防火墙相关命令）" class="headerlink" title="firewall-cmd（防火墙相关命令）"></a>firewall-cmd（防火墙相关命令）</h3><h4 id="命令格式-14"><a href="#命令格式-14" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>firewall-cmd [选项]</code></p>
<h4 id="命令功能-14"><a href="#命令功能-14" class="headerlink" title="命令功能"></a>命令功能</h4><p>操作防火墙相关命令。</p>
<h4 id="使用实例-12"><a href="#使用实例-12" class="headerlink" title="使用实例"></a>使用实例</h4><p>查看防火墙所有信息</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --list-all</span>
public <span class="token punctuation">(</span>active<span class="token punctuation">)</span>
  target: default
  icmp-block-inversion: no
  interfaces: eth0
  sources: 
  services: dhcpv6-client <span class="token function">ssh</span>
  ports: 1996/tcp 1996/udp 80/tcp
  protocols: 
  masquerade: no
  forward-ports: 
  source-ports: 
  icmp-blocks: 
  rich rules: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>查看防火墙开放端口信息</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --list-ports</span>
1996/tcp 1996/udp 80/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>新增开放端口</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --zone=public --add-port=80/tcp --permanent</span>
success<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>–-zone            作用域<br>  –-add-port=80/tcp 添加端口，格式为：端口/通讯协议<br>  –-permanent       永久生效，没有此参数重启后失效</p>
</blockquote>
<p>新增多个端口</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --zone=public --add-port=80-90/tcp --permanent</span>
success<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>重新加载防火墙规则</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --reload</span>
success<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>删除端口</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --zone=public --remove-port=80/tcp --permanent</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="ps（查看进程状态命令）"><a href="#ps（查看进程状态命令）" class="headerlink" title="ps（查看进程状态命令）"></a>ps（查看进程状态命令）</h3><h4 id="命令格式-15"><a href="#命令格式-15" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>ps [参数]</code></p>
<h4 id="命令功能-15"><a href="#命令功能-15" class="headerlink" title="命令功能"></a>命令功能</h4><p>ps命令是Process Status的缩写。ps命令用来列出系统中当前运行的那些进程。ps命令列出的是当前那些进程的快照，就是执行ps命令的那个时刻的那些进程，如果想要动态的显示进程信息，就可以使用top命令。</p>
<h4 id="命令参数-9"><a href="#命令参数-9" class="headerlink" title="命令参数"></a>命令参数</h4><p>一般常用的组合为<code>-aux</code>和<code>-ef</code></p>
<blockquote>
<p>-a 表示显示当前终端所有进程信息<br>-u 表示以用户格式显示<br>-x 表示显示进程运行的参数</p>
</blockquote>
<blockquote>
<p>-e 显示所有进程<br>-f 以全格式显示</p>
</blockquote>
<h4 id="使用实例-13"><a href="#使用实例-13" class="headerlink" title="使用实例"></a>使用实例</h4><p>查看当前运行的进程，其中各列代表含义为：<br>USER：用户<br>PID：进程号<br>%CPU：占用cpu情况<br>%MEM：占用内存情况<br>VSZ：使用的虚拟内存<br>RSS：使用的物理内存<br>TTY：使用的终端<br>STAT：进程的状态，S为休眠，R为运行，Z为僵尸进程，<br>START：启动时间<br>TIME：占用CPU时间<br>COMMAND：进程执行时的命令行</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ps -aux</span>
USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root          1  0.0  0.0 190972  1800 ?        Ss   May09   0:09 /usr/lib/systemd/systemd --switched-root --system --deserialize 22
root          2  0.0  0.0      0     0 ?        S    May09   0:00 <span class="token punctuation">[</span>kthreadd<span class="token punctuation">]</span>
root          3  0.0  0.0      0     0 ?        S    May09   0:11 <span class="token punctuation">[</span>ksoftirqd/0<span class="token punctuation">]</span>
root          5  0.0  0.0      0     0 ?        S<span class="token operator">&lt;</span>   May09   0:00 <span class="token punctuation">[</span>kworker/0:0H<span class="token punctuation">]</span>
<span class="token punctuation">..</span>.
root      20364  0.0  0.0 249952  2780 ?        Ss   May09   0:09 /usr/sbin/httpd -DFOREGROUND
root      20480  0.1  0.1 692504 18296 ?        Sl   May09   6:31 /usr/bin/python2 /opt/cloudera/cm-agent/bin/<span class="token punctuation">..</span>/bin/flood
clouder+  20517  0.0  0.2 256844 20880 ?        S    May09   0:01 /usr/bin/python2 /opt/cloudera/cm-agent/bin/cm proc_watcher 20566
<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>查看当前运行进程，并显示父进程，其列代表含义为：<br>UID：用户ID<br>PID：进程ID<br>PPID：父进程ID<br>C：CPU用于计算执行优先级的因子。数值越大，表明进程是CPU密集型运算，执行优先级会降低；数值越小，表明进程是I/O密集型运算，执行优先级会提高。<br>STIME：进程启动的时间<br>TTY：完整的终端名称<br>TIME：CPU时间<br>CMD：启动进程所用的命令和参数</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ps -ef</span>
UID         PID   PPID  C STIME TTY          TIME CMD
root          1      0  0 May09 ?        00:00:09 /usr/lib/systemd/systemd --switched-root --system --deserialize 22
root          2      0  0 May09 ?        00:00:00 <span class="token punctuation">[</span>kthreadd<span class="token punctuation">]</span>
root          3      2  0 May09 ?        00:00:11 <span class="token punctuation">[</span>ksoftirqd/0<span class="token punctuation">]</span>
root          5      2  0 May09 ?        00:00:00 <span class="token punctuation">[</span>kworker/0:0H<span class="token punctuation">]</span>
<span class="token punctuation">..</span>.
root      20364      1  0 May09 ?        00:00:09 /usr/sbin/httpd -DFOREGROUND
root      20480   9403  0 May09 ?        00:06:32 /usr/bin/python2 /opt/cloudera/cm-agent/bin/<span class="token punctuation">..</span>/bin/flood
clouder+  20517   9403  0 May09 ?        00:00:01 /usr/bin/python2 /opt/cloudera/cm-agent/bin/cm proc_watcher 20566
<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>命令</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware虚拟机静态IP配置</title>
    <url>/2018/08/09/vmware-xu-ni-ji-jing-tai-ip-pei-zhi/</url>
    <content><![CDATA[<p><strong>VMware虚拟机网卡的两种模式：Bridged（桥接）和NAT（转发）。</strong></p>
<ol>
<li><strong>Bridged（桥接模式）</strong><br>桥接模式可以让虚拟机的网络和物理机的网络处于<code>平行</code>的网络中，和物理机处于同一个网段的其他物理机就能ping通该虚拟机。</li>
<li><strong>NAT模式</strong><br>该模式虚拟机自己创建一套网络，只有物理机和虚拟机处于同一局域网内，与物理机处于同一网段的无法连接虚拟机。虚拟机通过物理机的网卡进行外网访问。</li>
</ol>
<blockquote>
<p>根据自己需求选择模式，如果是想搭建一套不受外界干扰的局域网络，则用NAT模式。如果想与外界其他处于同一网段的物理机通信，则选择桥接模式</p>
</blockquote>
<h2 id="NAT模式"><a href="#NAT模式" class="headerlink" title="NAT模式"></a>NAT模式</h2><h3 id="1-查看网关和网段"><a href="#1-查看网关和网段" class="headerlink" title="1.查看网关和网段"></a>1.查看网关和网段</h3><p>虚拟机点击【编辑】→【虚拟网络编辑器】</p>
<p><img src="http://47.106.179.244/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/vm%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C%E7%BC%96%E8%BE%91%E5%99%A8.png" alt="虚拟网络编辑器"></p>
<p>使用NAT模式，选择VMnet8。取消勾选【使用本地DHCP…】，勾选会设置动态ip。</p>
<p><img src="http://47.106.179.244/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/NAT%E8%AE%BE%E7%BD%AE.png" alt="NAT设置"></p>
<p>点击NAT设置，记住子网IP范围，如图表示我们只能设置虚拟机在192.168.40.0~192.168.40.255范围内。</p>
<blockquote>
<p>注意：</p>
<p>192.168.40.2为网关地址，192.168.40.255为广播地址，192.168.40.0一般为网段IP，所以<code>0</code>,<code>2</code>,<code>255</code>这三个地址不能设置</p>
</blockquote>
<h3 id="2-设置虚拟机IP地址"><a href="#2-设置虚拟机IP地址" class="headerlink" title="2.设置虚拟机IP地址"></a>2.设置虚拟机IP地址</h3><p><strong>涉及文件列表：</strong></p>
<p><code>/etc/sysconfig/network-scripts/ifcfg-*</code>（网卡）（*根据实际情况不同，本文为ens33）</p>
<p><code>/etc/sysconfig/network</code>（主机名）</p>
<p><code>/etc/resolv.conf</code>（DNS）</p>
<ol>
<li>网卡信息修改</li>
</ol>
<p><code>vi /etc/sysconfig/network-scripts/ifcfg-ens33</code></p>
<pre><code>TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=static
DEFROUTE=yes
NAME=ens33
UUID=d7a7196e-5033-4849-bcc5-f8c52acd245c
DEVICE=ens33
ONBOOT=yes
IPADDR=192.168.40.3
NETMASK=255.255.255.0
GATEWAY=192.168.40.2</code></pre><p><code>ONBOOT</code>：开机启动。</p>
<p><code>NM_CONTROLLED</code>：网络管理组件是否启用，精简版的是没有这个组件的。所以就不需要开启。</p>
<p><code>BOOTPROTO</code>：网络分配方式，静态。</p>
<p><code>IPPADDR</code>：手动指定ip地址。</p>
<p><code>NETMASK</code>：子网掩码。</p>
<p><code>GATEWAY</code>：网关ip。编辑好以后保存退出。</p>
<ol start="2">
<li>DNS配置</li>
</ol>
<p><code>vi /etc/resolv.conf</code></p>
<pre><code>nameserver 8.8.8.8
nameserver 8.8.4.4</code></pre><p><code>nameserver</code>：这里填对应的dns域名解析服务器的ip。 可以指定多个，其他的默认为备用DNS</p>
<ol start="3">
<li>主机名修改</li>
</ol>
<p><code>vi /etc/sysconfig/network</code></p>
<pre><code># Created by anaconda
NETWORKING=yes
HOSTNAME=hadoop001</code></pre><p>有需要就可以修改主机名。配置完三个文件重启一下机器（或者<code>/etc/rc.d/init.d/network restart</code>重启网络）。</p>
<h3 id="3-确保Linux虚拟机网络适配器选项"><a href="#3-确保Linux虚拟机网络适配器选项" class="headerlink" title="3.确保Linux虚拟机网络适配器选项"></a>3.确保Linux虚拟机网络适配器选项</h3><ol>
<li>选择虚拟机，点击右键→【设置】</li>
</ol>
<p><img src="http://47.106.179.244/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%B3%E9%94%AE%E8%AE%BE%E7%BD%AE.png" alt="虚拟机右键设置"></p>
<ol start="2">
<li>【硬件】→【网络适配器】→选择【NAT模式】</li>
</ol>
<p><img src="http://47.106.179.244/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/%E7%BD%91%E7%BB%9C%E9%80%82%E9%85%8D%E5%99%A8NAT%E6%A8%A1%E5%BC%8F.png" alt="网络适配器NAT"></p>
<h3 id="4-Windows-IP设置"><a href="#4-Windows-IP设置" class="headerlink" title="4.Windows IP设置"></a>4.Windows IP设置</h3><p>设置VMWare给我们配置的网络适配器，就是那个NAT8。右键属性</p>
<p><img src="http://47.106.179.244/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/WindowsIP%E8%AE%BE%E7%BD%AE1.png" alt="windowsIP设置1"></p>
<p>点击IPv4设置</p>
<p><img src="http://47.106.179.244/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/WindowsIP%E8%AE%BE%E7%BD%AE2.png" alt="windowsIP设置2"></p>
<p>设置Windows的ip地址，该地址也在范围内。</p>
<p><img src="http://47.106.179.244/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/WindowsIP%E8%AE%BE%E7%BD%AE3.png" alt=""></p>
<p>配置完之后就可以使用xshell等工具连接了。</p>
<h2 id="Bridged（桥接模式）"><a href="#Bridged（桥接模式）" class="headerlink" title="Bridged（桥接模式）"></a>Bridged（桥接模式）</h2><h3 id="1-VM设置"><a href="#1-VM设置" class="headerlink" title="1.VM设置"></a>1.VM设置</h3><ol>
<li><p>查看物理机网卡名称<br><img src="http://47.106.179.244/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/%E7%89%A9%E7%90%86%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF.jpg" alt="物理机网络信息"></p>
</li>
<li><p>根据网卡，查看物理机ip网段信息<br>进入cmd命令行，执行<code>ipconfig /all</code><br><img src="http://47.106.179.244/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/%E7%89%A9%E7%90%86%E6%9C%BAcmd%EF%BC%8Cip%E4%BF%A1%E6%81%AF.jpg" alt="物理机"></p>
</li>
<li><p>虚拟机点击【编辑】→【虚拟网络编辑器】<br>选择正确的网卡<br><img src="http://47.106.179.244/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/vm%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F%E7%95%8C%E9%9D%A2.jpg" alt="虚拟网络编辑器"></p>
</li>
<li><p>设置将要使用的虚拟机网络适配器，将其改为桥接模式。<br><img src="http://47.106.179.244/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F%E8%AE%BE%E7%BD%AE.JPG" alt="桥接模式"></p>
</li>
</ol>
<h3 id="2-设置虚拟机IP地址-1"><a href="#2-设置虚拟机IP地址-1" class="headerlink" title="2.设置虚拟机IP地址"></a>2.设置虚拟机IP地址</h3><p><strong>涉及文件列表：</strong></p>
<p><code>/etc/sysconfig/network-scripts/ifcfg-*</code>（网卡）（*根据实际情况不同，本文为ens33）</p>
<p><code>/etc/sysconfig/network</code>（主机名）</p>
<p><code>/etc/resolv.conf</code>（DNS）</p>
<ol>
<li>网卡信息修改</li>
</ol>
<p><code>vi /etc/sysconfig/network-scripts/ifcfg-ens33</code></p>
<pre><code>TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=static
DEFROUTE=yes
NAME=ens33
UUID=d7a7196e-5033-4849-bcc5-f8c52acd245c
DEVICE=ens33
ONBOOT=yes
IPADDR=192.168.88.3       # 这里网段要和物理机网段一致
NETMASK=255.255.255.0
GATEWAY=192.168.88.1     # 网关也要和物理机一样</code></pre><p><code>ONBOOT</code>：开机启动。</p>
<p><code>NM_CONTROLLED</code>：网络管理组件是否启用，精简版的是没有这个组件的。所以就不需要开启。</p>
<p><code>BOOTPROTO</code>：网络分配方式，静态。</p>
<p><code>IPPADDR</code>：手动指定ip地址。</p>
<p><code>NETMASK</code>：子网掩码。</p>
<p><code>GATEWAY</code>：网关ip。编辑好以后保存退出。</p>
<ol start="2">
<li>DNS配置</li>
</ol>
<p><code>vi /etc/resolv.conf</code></p>
<pre><code>nameserver 8.8.8.8
nameserver 8.8.4.4</code></pre><p><code>nameserver</code>：这里填对应的dns域名解析服务器的ip。 可以指定多个，其他的默认为备用DNS</p>
<ol start="3">
<li>主机名修改</li>
</ol>
<p><code>vi /etc/sysconfig/network</code></p>
<pre><code># Created by anaconda
NETWORKING=yes
HOSTNAME=hadoop001</code></pre><p>有需要就可以修改主机名。<br>配置完三个文件重启一下机器（或者<code>/etc/rc.d/init.d/network restart</code>重启网络）。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>IP</tag>
        <tag>虚拟机</tag>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>遇到多个构造器参数时的最优解决方案</title>
    <url>/2017/08/17/yu-dao-duo-ge-gou-zao-qi-can-shu-shi-de-zui-you-jie-jue-fang-an/</url>
    <content><![CDATA[<p>今天在写代码的时候，忽然发现为bean设置属性代码特别的多，冗余，例如：</p>
<pre class="line-numbers language-java"><code class="language-java">MyData myData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myData<span class="token punctuation">.</span><span class="token function">setA1</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myData<span class="token punctuation">.</span><span class="token function">setA2</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myData<span class="token punctuation">.</span><span class="token function">setA3</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myData<span class="token punctuation">.</span><span class="token function">setA4</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myData<span class="token punctuation">.</span><span class="token function">setA5</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myData<span class="token punctuation">.</span><span class="token function">setQuality</span><span class="token punctuation">(</span><span class="token string">"ok"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>经学长指点，发现可以用<code>Builder模式</code>解决这个问题，在此总结一下<code>Builder模式</code>。</p>
<a id="more"></a>
<h2 id="遇到多个构造器参数时的最优解决方案"><a href="#遇到多个构造器参数时的最优解决方案" class="headerlink" title="遇到多个构造器参数时的最优解决方案"></a>遇到多个构造器参数时的最优解决方案</h2><h3 id="一、传统的做法"><a href="#一、传统的做法" class="headerlink" title="一、传统的做法"></a>一、传统的做法</h3><p>当遇到构造器里面有很多的参数需要传递时，最原始的做法可能就是直接传参数。</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyData</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> A1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> A2<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> A3<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> A4<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> A5<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">MyData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">MyData</span><span class="token punctuation">(</span><span class="token keyword">double</span> a1<span class="token punctuation">,</span> <span class="token keyword">double</span> a2<span class="token punctuation">,</span> <span class="token keyword">double</span> a3<span class="token punctuation">,</span> <span class="token keyword">double</span> a4<span class="token punctuation">,</span> <span class="token keyword">double</span> a5<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        A1 <span class="token operator">=</span> a1<span class="token punctuation">;</span>
        A2 <span class="token operator">=</span> a2<span class="token punctuation">;</span>
        A3 <span class="token operator">=</span> a3<span class="token punctuation">;</span>
        A4 <span class="token operator">=</span> a4<span class="token punctuation">;</span>
        A5 <span class="token operator">=</span> a5<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java">MyData myData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyData</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">3.3</span><span class="token punctuation">,</span><span class="token number">4.2</span><span class="token punctuation">,</span><span class="token number">5.9</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p><strong>缺点：</strong>这个构造器调用通常需要设置你原本不想设置的参数，（<em>比如上例中的A2</em>）。而且这种方式可读性不高，就这样看，谁知道你的哪个参数对应着哪个属性呢？</p>
</blockquote>
<h3 id="二、一种替代方式"><a href="#二、一种替代方式" class="headerlink" title="二、一种替代方式"></a>二、一种替代方式</h3><p><code>JavaBeans模式</code>，这种模式调用一个无参构造器来创建对象，然后调用setter方法来设置你想要设置的参数。</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyData</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> A1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> A2<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> A3<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> A4<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> A5<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">MyData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">MyData</span><span class="token punctuation">(</span><span class="token keyword">double</span> a1<span class="token punctuation">,</span> <span class="token keyword">double</span> a2<span class="token punctuation">,</span> <span class="token keyword">double</span> a3<span class="token punctuation">,</span> <span class="token keyword">double</span> a4<span class="token punctuation">,</span> <span class="token keyword">double</span> a5<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        A1 <span class="token operator">=</span> a1<span class="token punctuation">;</span>
        A2 <span class="token operator">=</span> a2<span class="token punctuation">;</span>
        A3 <span class="token operator">=</span> a3<span class="token punctuation">;</span>
        A4 <span class="token operator">=</span> a4<span class="token punctuation">;</span>
        A5 <span class="token operator">=</span> a5<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getA1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> A1<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setA1</span><span class="token punctuation">(</span><span class="token keyword">double</span> a1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        A1 <span class="token operator">=</span> a1<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getA2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> A2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setA2</span><span class="token punctuation">(</span><span class="token keyword">double</span> a2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        A2 <span class="token operator">=</span> a2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getA3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> A3<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setA3</span><span class="token punctuation">(</span><span class="token keyword">double</span> a3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        A3 <span class="token operator">=</span> a3<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getA4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> A4<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setA4</span><span class="token punctuation">(</span><span class="token keyword">double</span> a4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        A4 <span class="token operator">=</span> a4<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getA5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> A5<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setA5</span><span class="token punctuation">(</span><span class="token keyword">double</span> a5<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        A5 <span class="token operator">=</span> a5<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java">MyData myData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        myData<span class="token punctuation">.</span><span class="token function">setA1</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        myData<span class="token punctuation">.</span><span class="token function">setA2</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        myData<span class="token punctuation">.</span><span class="token function">setA3</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        myData<span class="token punctuation">.</span><span class="token function">setA4</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        myData<span class="token punctuation">.</span><span class="token function">setA5</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>这种方式貌似完全解决了构造器参数可读性不高的问题，但是这种方式有着<code>严重的缺点：</code><br>这个对象的构造过程被分到了几个调用当中，在构建过程中JavaBean可能处于<code>不一致</code>的状态，也就是说需要程序员付出额外的努力来确保它的<code>线程安全</code>。</p>
</blockquote>
<h3 id="三、Builder模式"><a href="#三、Builder模式" class="headerlink" title="三、Builder模式"></a>三、Builder模式</h3><p>这种方式不直接生成对象，而是根据你需要设置的属性参数调用构造器，得到一个<code>builder对象</code>。然后在builder对象上调用类似<code>setter</code>的方法，来设置每个相关的可选参数。最后利用builder的<code>无参build方法</code>（create方法）来生成不可变的对象。</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyDataBuilder</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> a1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> a2<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> a3<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> a4<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> a5<span class="token punctuation">;</span>

    <span class="token keyword">public</span> MyDataBuilder <span class="token function">setA1</span><span class="token punctuation">(</span><span class="token keyword">double</span> a1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>a1 <span class="token operator">=</span> a1<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> MyDataBuilder <span class="token function">setA2</span><span class="token punctuation">(</span><span class="token keyword">double</span> a2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>a2 <span class="token operator">=</span> a2<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> MyDataBuilder <span class="token function">setA3</span><span class="token punctuation">(</span><span class="token keyword">double</span> a3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>a3 <span class="token operator">=</span> a3<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> MyDataBuilder <span class="token function">setA4</span><span class="token punctuation">(</span><span class="token keyword">double</span> a4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>a4 <span class="token operator">=</span> a4<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> MyDataBuilder <span class="token function">setA5</span><span class="token punctuation">(</span><span class="token keyword">double</span> a5<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>a5 <span class="token operator">=</span> a5<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> MyData <span class="token function">createMyData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyData</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> a3<span class="token punctuation">,</span> a4<span class="token punctuation">,</span> a5<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这时，创建对象就可以这么写：</p>
<pre class="line-numbers language-java"><code class="language-java">MyData myData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyDataBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setA1</span><span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setA3</span><span class="token punctuation">(</span><span class="token number">3.0</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setA4</span><span class="token punctuation">(</span><span class="token number">4.0</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setA5</span><span class="token punctuation">(</span><span class="token number">5.0</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">createMyData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>可以看到，这种builder方式既能清晰的看到每个参数的对应属性，又能保证类在创建时的一致性（<em>因为生成对象的操作在一句语句中</em>），另外还便于阅读，较JavaBeans的方法也减少了一些无用的代码编写量，更简洁，便于编写。</p>
</blockquote>
<h4 id="在idea中如何快速生成Builder类"><a href="#在idea中如何快速生成Builder类" class="headerlink" title="在idea中如何快速生成Builder类"></a>在idea中如何快速生成Builder类</h4><p>不得不说idea是个很强大的编译器，它提供了类的构建器的自动创建，但前提是该类必须有包含所有必须属性参数的构造器。</p>
<ol>
<li><p>为类生成带有全部必须属性的构造器<br>在类中右键选择Generate（也可以使用快捷键：<code>Alt+Insert</code>）<br><img src="http://47.106.179.244/Builder%E6%9E%84%E5%BB%BA%E5%99%A8%E6%A8%A1%E5%BC%8F/%E5%8F%B3%E9%94%AEGenerate.jpg" alt="选择Generate"><br>得到以下面板后点击Constructor<br><img src="http://47.106.179.244/Builder%E6%9E%84%E5%BB%BA%E5%99%A8%E6%A8%A1%E5%BC%8F/Generate%E9%9D%A2%E6%9D%BF.jpg" alt="Generate面板"><br>选择需要生成构造器的属性<br><img src="http://47.106.179.244/Builder%E6%9E%84%E5%BB%BA%E5%99%A8%E6%A8%A1%E5%BC%8F/%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E9%9D%A2%E6%9D%BF.jpg" alt="选择属性"><br>点击ok生成</p>
<blockquote>
<p><em>注意：在自定义有参构造器时，需要重写一个无参的构造器</em></p>
</blockquote>
</li>
<li><p>在需要生成的类里面右键，选择Refactor<br><img src="http://47.106.179.244/Builder%E6%9E%84%E5%BB%BA%E5%99%A8%E6%A8%A1%E5%BC%8F/%E7%94%9F%E6%88%90Builder%E7%B1%BB.jpg" alt="生成builder"><br><img src="http://47.106.179.244/Builder%E6%9E%84%E5%BB%BA%E5%99%A8%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E7%BD%AEBuilder%E7%B1%BB.jpg" alt="设置builder"><br>生成后：<br><img src="http://47.106.179.244/Builder%E6%9E%84%E5%BB%BA%E5%99%A8%E6%A8%A1%E5%BC%8F/%E7%94%9F%E6%88%90%E5%90%8E.jpg" alt="enter image description here"></p>
</li>
</ol>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Builder模式也有它自身的不足之处。为了创建对象，必须先创建它的构建器。虽然创建构建器的开销在实践中可能不是那么明显，但是在十分注重性能的情况下，可能就成问题了。<br>最后，<code>如果类的构造器或者静态工厂中具有多个参数，设计这种类时，Builder模式就是中不错的选择</code>。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>构造器</tag>
        <tag>创建对象</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员必知的8大排序算法</title>
    <url>/2017/08/09/cheng-xu-yuan-bi-zhi-de-8-da-pai-xu-suan-fa/</url>
    <content><![CDATA[<p>8种排序之间的关系<br><img src="http://47.106.179.244/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.JPG" alt=""></p>
<h2 id="一、插入排序"><a href="#一、插入排序" class="headerlink" title="一、插入排序"></a>一、插入排序</h2><h3 id="直接插入排序"><a href="#直接插入排序" class="headerlink" title="直接插入排序"></a>直接插入排序</h3><ol>
<li>思想：<br>在要排序的一堆数组中，假设前面的（n-1）[n&gt;=2]个数已经是排好序的，现在要把第n个数插入到之前的有序数中，使得这n个数也是排好序的。如此反复直到所有的数都排好顺序。</li>
<li>实例：<br><img src="http://47.106.179.244/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E5%AE%9E%E4%BE%8B.JPG" alt=""></li>
<li>用java实现：</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">insertSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//第一次i是第二个元素，第一次是第二个元素和前面比较</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//temp为当前需要插入的元素</span>
        temp <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//j为temp之前的一个元素</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> temp <span class="token operator">&lt;</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//如果j还指向数组中的元素（大于等于0），且大于temp</span>
            a<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//将大于temp的值整体后移一个单位</span>
        <span class="token punctuation">}</span>
        a<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">//最后将temp放到自己应该存在的位置</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="希尔排序（最小增量排序）"><a href="#希尔排序（最小增量排序）" class="headerlink" title="希尔排序（最小增量排序）"></a>希尔排序（最小增量排序）</h3><p>为直接插入排序的改进版，先进行分组的直接插入排序，直到整个数组呈基本有序的情况，再对整个数组进行一次直接插入排序。</p>
<ol>
<li><p>思想：</p>
<blockquote>
<p>划分组：把原始组分成多少分（按照每组d个元素分）。<br>排序组：每个划分组中的第i个数所组成的组（用于排序）。</p>
</blockquote>
<p> 先将要排序的一组数按某个增量d（n/2，n为要排序数的个数，除不尽向上取整）分成若干组（<em>这里暂且称它为划分组</em>），每个划分组有d个数据（<em>最后一组可能小于d</em>），再取每划分组中对应的元素组成新的组（<code>每一组的第i个为新的一组，如：每一组的第一个组成一组</code>，<em>这里暂且称它为排序组</em>），对形成的排序组每组作直接插入排序。然后再用较小的增量<code>d/2</code>对它进行分划分组、排序组，每个排序组中再进行直接插入排序，直到增量减小到1，再最后进行一次直接插入排序。</p>
</li>
<li><p>实例：<br><img src="http://47.106.179.244/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%E5%AE%9E%E4%BE%8B.jpg" alt=""></p>
</li>
<li><p>用java实现：</p>
</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">shellSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">double</span> d1 <span class="token operator">=</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//算出每一轮的增量</span>
        d1 <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>d1<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> d1<span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">//该循环取得每个需要进行直接插入排序的数组，x为原始数组中的脚标，</span>
        <span class="token comment" spellcheck="true">//代表每个组中提取的第几个元素来组成新的分组进行排序</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> d<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//该循环为直接插入排序（只是排序的目标数组变成了角标相差为d的数所组成的数组）</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> x <span class="token operator">+</span> d<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">-</span> d<span class="token punctuation">;</span>
                temp <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">//直接插入排序的算法，只是将直接插入排序的1抽象为了d</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> temp <span class="token operator">&lt;</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> j <span class="token operator">-=</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    a<span class="token punctuation">[</span>j <span class="token operator">+</span> d<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将需要排序的组中大于temp的向后移（移动单位为d）</span>
                <span class="token punctuation">}</span>
                a<span class="token punctuation">[</span>j <span class="token operator">+</span> d<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//将temp放到它应该在的位置</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>d <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="二、选择排序"><a href="#二、选择排序" class="headerlink" title="二、选择排序"></a>二、选择排序</h2><h3 id="简单选择排序"><a href="#简单选择排序" class="headerlink" title="简单选择排序"></a>简单选择排序</h3><h3 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h3><h2 id="三、交换排序"><a href="#三、交换排序" class="headerlink" title="三、交换排序"></a>三、交换排序</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><ol>
<li>基本思路：<br>对需要排序的数组自上而下对相邻的两个数进行比较，让较大的数往下沉，较小的数往上冒。即：每当相邻的两个数不满足要求的排序时，将它们<code>交换</code></li>
<li>实例：<br><img src="http://47.106.179.244/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E5%AE%9E%E4%BE%8B.jpg" alt=""></li>
<li>用java实现：</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> a<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">;</span> i<span class="token operator">></span><span class="token number">0</span> <span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//比较前面多少位</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> j<span class="token operator">&lt;</span>i <span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">//从第一位开始，把大的数往后冒</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">int</span> temp <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><h2 id="四、归并排序"><a href="#四、归并排序" class="headerlink" title="四、归并排序"></a>四、归并排序</h2><h2 id="五、基数排序"><a href="#五、基数排序" class="headerlink" title="五、基数排序"></a>五、基数排序</h2><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP协议</title>
    <url>/2017/08/09/http-xie-yi/</url>
    <content><![CDATA[<h1 id="HTTP（HyperText-Transfer-Protocol，超文本传输协议）"><a href="#HTTP（HyperText-Transfer-Protocol，超文本传输协议）" class="headerlink" title="HTTP（HyperText Transfer Protocol，超文本传输协议）"></a>HTTP（HyperText Transfer Protocol，超文本传输协议）</h1><h3 id="TCP-IP的分层管理"><a href="#TCP-IP的分层管理" class="headerlink" title="TCP/IP的分层管理"></a>TCP/IP的分层管理</h3><p><code>应用层</code>、<code>传输层</code>、<code>网络层</code>、<code>数据链路层</code><br>TCP/IP协议族各层的作用：</p>
<table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">作用</th>
<th align="center">协议</th>
</tr>
</thead>
<tbody><tr>
<td align="center">应用层</td>
<td align="center">决定了向用户提供应用服务时通信的活动。</td>
<td align="center">FTP（文件传输协议）、DNS（域名系统）、<code>HTTP协议</code>也处于该层</td>
</tr>
<tr>
<td align="center">传输层</td>
<td align="center">对上层应用层提供处于网络连接中的两台计算机之间的数据传输。</td>
<td align="center">TCP（传输控制协议）、UDP（用户数据报协议）</td>
</tr>
<tr>
<td align="center">网络层（网络互连层）</td>
<td align="center">用来处理在网络上流动的数据包。数据包是网络传输的最小数据单位。规定了通过怎样的路径（所谓的传输路线）到达对方计算机，并把数据包传送给对方</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">链路层（数据链路层）</td>
<td align="center">用来处理连接网络的硬件部分。包括控制操作系统、硬件的设备驱动、NIC（Network Interface Card，网络适配器，即网卡），及光纤等物理可见部分（还包括连接器等一切传输媒介）</td>
<td align="center"></td>
</tr>
</tbody></table>
<h3 id="与HTTP关系密切的协议：IP、TCP和DNS"><a href="#与HTTP关系密切的协议：IP、TCP和DNS" class="headerlink" title="与HTTP关系密切的协议：IP、TCP和DNS"></a>与HTTP关系密切的协议：IP、TCP和DNS</h3><h4 id="负责传输的IP协议"><a href="#负责传输的IP协议" class="headerlink" title="负责传输的IP协议"></a>负责传输的IP协议</h4><p>IP（Internet Protocol，网际协议）几乎所有使用网络的系统都会用到IP协议。<br>不要把<code>IP</code>和<code>IP地址</code>混淆，<code>IP</code>其实是一种<code>协议</code>的名称，而<code>IP地址</code>是网络中计算机通讯时的<code>地址</code>。<br>IP协议的作用是把各种数据包传送给对方。而要保证确实传送到对方那里，则需要满足各类条件。其中两个重要的条件是IP地址和MAC地址（Media Access Control Address）。IP地址可以和MAC地址进行配对。</p>
<table>
<thead>
<tr>
<th align="center">IP地址</th>
<th align="center">MAC地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">指明了节点被分配到的地址</td>
<td align="center">网卡所属的固定地址</td>
</tr>
<tr>
<td align="center">可变换</td>
<td align="center">基本上不会更改</td>
</tr>
</tbody></table>
<h4 id="确保可靠性的TCP协议"><a href="#确保可靠性的TCP协议" class="headerlink" title="确保可靠性的TCP协议"></a>确保可靠性的TCP协议</h4><p>提供可靠的字节流服务。<br>将大块数据分割成以<code>报文段</code>为单位的数据包进行管理。<br>为了准确无误的将数据送达目标处，TCP协议采用了<code>三次握手</code>策略，握手过程中使用到了TCP的标志（flag）：<code>SYN</code>（synchronize）和<code>ACK</code>（acknowledgement）。<br>发送端首先发送一个<em>SYN</em>的数据包给对方。接收端收到后，回传一个带有<em>SYN/ACK</em>标志的数据包以示传达确认信息。最后，发送端再回传一个带<em>ACK</em>标志的数据包，代表“握手”结束。</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center"></td>
<td align="center">标有<code>SYN</code>的数据包发给你—–&gt;</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"><strong>发送端</strong></td>
<td align="center">&lt;—–收到你的数据包（发送带有<code>SYN/ACK</code>的数据包）</td>
<td align="center"><strong>接收端</strong></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">明白！（发送带有<code>ACK</code>的数据包）—–&gt;</td>
<td align="center"></td>
</tr>
</tbody></table>
<h4 id="负责域名解析的DNS服务"><a href="#负责域名解析的DNS服务" class="headerlink" title="负责域名解析的DNS服务"></a>负责域名解析的DNS服务</h4><p>DNS（Domain Name System）服务提供域名到IP地址之间的解析服务。</p>
<h3 id="URI和URL"><a href="#URI和URL" class="headerlink" title="URI和URL"></a>URI和URL</h3><p><code>URI</code>统一资源标识符，用字符串标识某一互联网资源。<br><code>URL</code>统一资源定位符，表示资源的地点。是URI的<code>子集</code>。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>网络协议</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>Http</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB的安装以及MongoDB Replicat Set复制集的搭建</title>
    <url>/2017/07/29/mongodb-de-an-zhuang-yi-ji-mongodb-replicat-set-fu-zhi-ji-de-da-jian/</url>
    <content><![CDATA[<h2 id="一、搭建MongoDB单机环境"><a href="#一、搭建MongoDB单机环境" class="headerlink" title="一、搭建MongoDB单机环境"></a>一、搭建MongoDB单机环境</h2><p>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。</p>
<h3 id="A、使用APT安装"><a href="#A、使用APT安装" class="headerlink" title="A、使用APT安装"></a>A、使用APT安装</h3><p><a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/" target="_blank" rel="noopener">参考官方安装文档</a></p>
<h4 id="1-导入public-key"><a href="#1-导入public-key" class="headerlink" title="1. 导入public key"></a>1. 导入public key</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="2-导入源（不同Ubuntu版本的源不一样，此处采用Ubuntu-16-04）"><a href="#2-导入源（不同Ubuntu版本的源不一样，此处采用Ubuntu-16-04）" class="headerlink" title="2. 导入源（不同Ubuntu版本的源不一样，此处采用Ubuntu 16.04）"></a>2. 导入源（不同Ubuntu版本的源不一样，此处采用Ubuntu 16.04）</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">echo</span> <span class="token string">"deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse"</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/mongodb-org-3.4.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="3-重新加载本地源"><a href="#3-重新加载本地源" class="headerlink" title="3. 重新加载本地源"></a>3. 重新加载本地源</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="4-安装mongodb"><a href="#4-安装mongodb" class="headerlink" title="4. 安装mongodb"></a>4. 安装mongodb</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> -y mongodb-org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="5-修改配置文件"><a href="#5-修改配置文件" class="headerlink" title="5. 修改配置文件"></a>5. 修改配置文件</h4><blockquote>
<p>配置文件默认文件目录/etc/mongod.conf<br>默认存储其数据文件/var/lib/mongodb<br>默认日志文件/var/log/mongodb/mongod.log<br><img src="http://47.106.179.244/mongodb%E5%A4%8D%E5%88%B6%E9%9B%86%E6%90%AD%E5%BB%BA/%E9%BB%98%E8%AE%A4mongodb%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.jpg" alt=""></p>
</blockquote>
<h4 id="6-启动mongodb"><a href="#6-启动mongodb" class="headerlink" title="6. 启动mongodb"></a>6. 启动mongodb</h4><pre class="line-numbers language-bash"><code class="language-bash">mongod -f /etc/mongod.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="7-卸载mongodb"><a href="#7-卸载mongodb" class="headerlink" title="7. 卸载mongodb"></a>7. 卸载mongodb</h4><p>1)停止mongodb服务</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> mongod stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>2)删除软件包<br>删除您以前安装的任何MongoDB包。</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> purge mongodb-org *<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>3)删除数据目录<br>删除数据库和日志文件</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">rm</span> -r / var / log / mongodb 
<span class="token function">sudo</span> <span class="token function">rm</span> -r / var / lib / mongodb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="B、使用安装包安装"><a href="#B、使用安装包安装" class="headerlink" title="B、使用安装包安装"></a>B、使用安装包安装</h3><p>到<a href="https://mirrors.tuna.tsinghua.edu.cn/mongodb/apt/ubuntu/dists/xenial/mongodb-org/" target="_blank" rel="noopener">清华开源镜像</a>下载相应的包</p>
<h4 id="1-解压到需要安装的目录"><a href="#1-解压到需要安装的目录" class="headerlink" title="1. 解压到需要安装的目录"></a>1. 解压到需要安装的目录</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">tar</span> zxvf mongodb-linux-x86_64-ubuntu1604-3.4.4.tgz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>tar命令参数详解：<br>-c ：建立打包档案，可搭配-v 来察看过程中被打包的档名(filename)<br>-t ：察看打包档案的内容含有哪些档名，重点在察看『档名』就是了；<br>-x ：解打包或解压缩的功能，可以搭配-C (大写) 在特定目录解开<br><em>特别留意的是， -c, -t, -x 不可同时出现在一串指令列中。</em><br>-z ：透过gzip 的支援进行压缩/解压缩：此时档名最好为<code>*.tar.gz</code><br>-j ：透过bzip2 的支援进行压缩/解压缩：此时档名最好为<code>*.tar.bz2</code><br>-J ：透过xz 的支援进行压缩/解压缩：此时档名最好为<code>*.tar.xz</code><br><em>特别留意， -z, -j, -J 不可以同时出现在一串指令列中。</em><br>-v ：在压缩/解压缩的过程中，将正在处理的档名显示出来！<br>-f filename：-f 后面要立刻接要被处理的档名！建议-f 单独写一个选项啰！(比较不会忘记)<br>-C 目录：这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项。<br>更多的压缩命令参考<a href="http://linux.vbird.org/linux_basic/0240tarcompress.php#compress_name" target="_blank" rel="noopener">鸟哥的Linux私房菜之档案的压缩、解压</a></p>
</blockquote>
<h4 id="2-创建存放数据文件目录以及日志文件目录（可以自己指定）"><a href="#2-创建存放数据文件目录以及日志文件目录（可以自己指定）" class="headerlink" title="2. 创建存放数据文件目录以及日志文件目录（可以自己指定）"></a>2. 创建存放数据文件目录以及日志文件目录（可以自己指定）</h4><p>可以创建多个数据库存放路径，每个数据库对应一个conf配置文件，mongodb只需要安装一次</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">mkdir</span> -p /mongodb/db  <span class="token comment" spellcheck="true"># 创建数据文件夹</span>
<span class="token function">mkdir</span> -p /mongodb/log
<span class="token function">touch</span> /mongodb/log/mongodb.log  <span class="token comment" spellcheck="true">#创建文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="3-在适当的路径编辑配置文件（后缀可选conf和yaml）"><a href="#3-在适当的路径编辑配置文件（后缀可选conf和yaml）" class="headerlink" title="3. 在适当的路径编辑配置文件（后缀可选conf和yaml）"></a>3. 在适当的路径编辑配置文件（后缀可选conf和yaml）</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">vi</span> mongodb.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>配置文件模板：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># mongodb.conf</span>
<span class="token comment" spellcheck="true"># Where and how to store data.</span>
storage:
  dbPath: /mongodb/data
  journal:
    enabled: <span class="token boolean">true</span>
<span class="token comment" spellcheck="true">#  engine:</span>
<span class="token comment" spellcheck="true">#  mmapv1:</span>
<span class="token comment" spellcheck="true">#  wiredTiger:</span>

<span class="token comment" spellcheck="true"># where to write logging data.</span>
systemLog:
  destination: <span class="token function">file</span>
  logAppend: <span class="token boolean">true</span>
  path: /mongodb/log/mongodb.log 

<span class="token comment" spellcheck="true"># network interfaces</span>
net:
  port: 28001
 <span class="token comment" spellcheck="true"># bindIp: 127.0.0.1</span>

processManagement:
  fork: <span class="token boolean">true</span>
<span class="token comment" spellcheck="true">#security:</span>
<span class="token comment" spellcheck="true">#operationProfiling:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>文件路径修改为设置的存储路径，端口可自定义（一般推荐27或者28开头的5位数）</p>
</blockquote>
<h4 id="4-配置环境变量PATH路径"><a href="#4-配置环境变量PATH路径" class="headerlink" title="4. 配置环境变量PATH路径"></a>4. 配置环境变量PATH路径</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 这里也可以修改~/.bashrc文件（区别见下表）</span>
<span class="token function">sudo</span> <span class="token function">vi</span> /etc/profile

<span class="token comment" spellcheck="true"># 追加(路径是放置Mongodb安装包的bin路径)</span>
<span class="token function">export</span> PATH<span class="token operator">=</span>/home/dusk/mongodb/bin:<span class="token variable">$PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>Linux中profile、bashrc、bash_profile之间的区别和联系</p>
<table>
<thead>
<tr>
<th align="center">文件名</th>
<th align="center">作用区间</th>
<th align="center">执行时间</th>
<th align="center">修改后是否需要重启</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/etc/profile</td>
<td align="center">该系统下每个用户</td>
<td align="center">用户第一次登陆</td>
<td align="center">是（<code>source /etc/profile</code>）</td>
</tr>
<tr>
<td align="center">/etc/bashrc</td>
<td align="center">该系统下每个用户</td>
<td align="center">用户新打开shell</td>
<td align="center">否</td>
</tr>
<tr>
<td align="center">~/.bash_profile</td>
<td align="center">当前用户</td>
<td align="center">用户第一次登陆</td>
<td align="center">是（<code>source ~/.bash_profile</code>）</td>
</tr>
<tr>
<td align="center">~/.bashrc</td>
<td align="center">当前用户</td>
<td align="center">用户新打开shell</td>
<td align="center">否</td>
</tr>
<tr>
<td align="center">~/.bash_logout</td>
<td align="center">当前用户</td>
<td align="center">退出shell</td>
<td align="center">否</td>
</tr>
</tbody></table>
<ul>
<li><em>/etc/profile</em>：该文件为系统的每个用户的环境信息文件，对每个用户生效。当用户第一次登陆的时候会执行这个文件加载里面的shell配置，所以修改这个文件之后要重启设置才能生效–&gt;source /etc/profile</li>
<li><em>/etc/bashrc</em>：为每一个执行bash shell的用户执行此文件，当bash shell被打开时，该文件被读取。修改后只需要重新打开一个bash即可生效</li>
<li><em>~/.bash_profile</em>：每个用户目录下都有这个文件，用户可以通过修改这个文件来设置自己专用的shell信息，该文件中设置了一些环境变量，执行用户的.bashrc文件。该文件类似于/etc/profile，需要重新启动才会生效，只对当前用户生效。</li>
<li><em>~/.bashrc</em>：该文件包含专用于你自己的bash shell信息，每次打开新的shell时被读取，只对当前用户新打开的bash生效。</li>
<li><em>~/.bash_logout</em>：当该用户退出bash shell时执行</li>
</ul>
</blockquote>
<h4 id="5-如果修改的是-etc-profile，则需要重新启动配置文件"><a href="#5-如果修改的是-etc-profile，则需要重新启动配置文件" class="headerlink" title="5. 如果修改的是/etc/profile，则需要重新启动配置文件"></a>5. 如果修改的是/etc/profile，则需要重新启动配置文件</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="6-在配置文件路径启动mongodb"><a href="#6-在配置文件路径启动mongodb" class="headerlink" title="6. 在配置文件路径启动mongodb"></a>6. 在配置文件路径启动mongodb</h4><pre class="line-numbers language-bash"><code class="language-bash">mongod -f mongodb.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="关闭MongoDB"><a href="#关闭MongoDB" class="headerlink" title="关闭MongoDB"></a>关闭MongoDB</h3><ol>
<li>使用mongod命令<pre class="line-numbers language-bash"><code class="language-bash">mongod --shutdown --dbpath /数据库储存路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>连接进mongodb数据库关闭<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 进入mongoshell</span>
mongo --port<span class="token operator">=</span>28001
<span class="token comment" spellcheck="true"># 使用admin数据库（只有在admin下才能执行shutdown方法）</span>
use admin
<span class="token comment" spellcheck="true"># 关闭mongodb服务</span>
db.shutdownServer<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>查看mongodb的进程，用kill杀掉进程<br><code>不推荐这种方式，会有丢失数据的风险</code></li>
</ol>
<hr>
<h2 id="二、搭建MongoDB-Replicat-Set复制集"><a href="#二、搭建MongoDB-Replicat-Set复制集" class="headerlink" title="二、搭建MongoDB Replicat Set复制集"></a>二、搭建MongoDB Replicat Set复制集</h2><p>MongoDB Replica Set是MongoDB官方推荐的主从复制和高可用方案，用于替代原有的Master-Slave主从复制方案。<br>不懂原理的可以<a href="http://www.linuxidc.com/Linux/2015-02/113296.htm" target="_blank" rel="noopener">点击这里</a>查看复制集原理（<code>推荐了解原理后再搭建</code>）<br><img src="http://47.106.179.244/mongodb%E5%A4%8D%E5%88%B6%E9%9B%86%E6%90%AD%E5%BB%BA/%E5%A4%8D%E5%88%B6%E9%9B%86.jpg" alt=""></p>
<h3 id="1-搭建环境（电脑配置）"><a href="#1-搭建环境（电脑配置）" class="headerlink" title="1.搭建环境（电脑配置）"></a>1.搭建环境（电脑配置）</h3><p>在需要布置为节点的机器上安装好MongoDB环境，参照上面的教程</p>
<table>
<thead>
<tr>
<th align="center">节点</th>
<th align="center">主机名(IP地址):端口号</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Primary Node(主节点)</td>
<td align="center">node1:28001</td>
</tr>
<tr>
<td align="center">Secondary Node(次节点)</td>
<td align="center">node2:28001</td>
</tr>
<tr>
<td align="center">Arbiter Node(投票节点)</td>
<td align="center">node3:28001</td>
</tr>
</tbody></table>
<blockquote>
<p><em>当然，你也可以在一台电脑上搭建复制集，但是端口一定不要冲突</em></p>
</blockquote>
<h3 id="2-确保每个节点数据、日志文件都建立完毕"><a href="#2-确保每个节点数据、日志文件都建立完毕" class="headerlink" title="2.确保每个节点数据、日志文件都建立完毕"></a>2.确保每个节点数据、日志文件都建立完毕</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 数据目录</span>
<span class="token function">mkdir</span> -p /mongodb/data/
<span class="token comment" spellcheck="true"># 日志目录</span>
<span class="token function">mkdir</span> -p /mongodb/log/
<span class="token comment" spellcheck="true"># 创建日志文件</span>
<span class="token function">touch</span> /mongodb/log/mongodb.log
<span class="token comment" spellcheck="true"># 配置文件目录</span>
<span class="token function">mkdir</span> -p /mongodb/conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考上面的mongodb环境搭建</p>
</blockquote>
<h3 id="3-修改每个节点的配置文件（重点）"><a href="#3-修改每个节点的配置文件（重点）" class="headerlink" title="3.修改每个节点的配置文件（重点）"></a>3.修改每个节点的配置文件（重点）</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 例：</span>
<span class="token function">vi</span> /mongodb/conf/mongodb.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>在文件后面追加：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 副本</span>
replication:
  <span class="token comment" spellcheck="true">#设置复制集名称，可自定义</span>
  replSetName: DBTEST
  <span class="token comment" spellcheck="true">#设置操作日志的大小(important)</span>
  oplogSizeMB: 10240
<span class="token comment" spellcheck="true">#sharding:</span>
<span class="token comment" spellcheck="true">## Enterprise-Only Options:</span>
<span class="token comment" spellcheck="true">#auditLog:</span>
<span class="token comment" spellcheck="true">#snmp:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p><em>复制集名称每个节点一定要一样</em></p>
</blockquote>
<h3 id="4-启动每个节点"><a href="#4-启动每个节点" class="headerlink" title="4.启动每个节点"></a>4.启动每个节点</h3><pre class="line-numbers language-bash"><code class="language-bash">mongod -f /mongodb/conf/mongodb.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="5-进入一个节点配置复制集（重点）"><a href="#5-进入一个节点配置复制集（重点）" class="headerlink" title="5.进入一个节点配置复制集（重点）"></a>5.进入一个节点配置复制集（重点）</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#任意一个节点上(最好选在主节点node1)</span>
mongo --port 28001<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>在mongo shell中配置副本<br><em>输入rs.help()可以查看rs的各种方法</em></p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 初始化复制集</span>
rs.initiate<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true"># 显示复制集配置对象</span>
rs.conf<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true"># 将其余成员添加到副本集</span>
<span class="token comment" spellcheck="true"># 返回{ "ok" : 1 }说明添加成功</span>
rs.add<span class="token punctuation">(</span><span class="token string">"node2:28001"</span><span class="token punctuation">)</span>
rs.addArb<span class="token punctuation">(</span><span class="token string">"node3:28001"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>查看副本集状态，可以看到复制集的全部信息都被显示出来</p>
<pre class="line-numbers language-json"><code class="language-json">DBTEST<span class="token operator">:</span>PRIMARY> rs.status(<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token property">"set"</span> <span class="token operator">:</span> <span class="token string">"DBTEST"</span><span class="token punctuation">,</span>
    <span class="token property">"date"</span> <span class="token operator">:</span> ISODate(<span class="token string">"2017-06-30T07:10:33.247Z"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token property">"myState"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">"term"</span> <span class="token operator">:</span> NumberLong(<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token property">"heartbeatIntervalMillis"</span> <span class="token operator">:</span> NumberLong(<span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token property">"members"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"node1:28001"</span><span class="token punctuation">,</span>
            <span class="token property">"health"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">"state"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">"stateStr"</span> <span class="token operator">:</span> <span class="token string">"PRIMARY"</span><span class="token punctuation">,</span>
            <span class="token property">"uptime"</span> <span class="token operator">:</span> <span class="token number">316</span><span class="token punctuation">,</span>
            <span class="token property">"optime"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">"ts"</span> <span class="token operator">:</span> Timestamp(<span class="token number">1498806589</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token property">"t"</span> <span class="token operator">:</span> NumberLong(<span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">"optimeDate"</span> <span class="token operator">:</span> ISODate(<span class="token string">"2017-06-30T07:09:49Z"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token property">"infoMessage"</span> <span class="token operator">:</span> <span class="token string">"could not find member to sync from"</span><span class="token punctuation">,</span>
            <span class="token property">"electionTime"</span> <span class="token operator">:</span> Timestamp(<span class="token number">1498806520</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token property">"electionDate"</span> <span class="token operator">:</span> ISODate(<span class="token string">"2017-06-30T07:08:40Z"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token property">"configVersion"</span> <span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
            <span class="token property">"self"</span> <span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"node2:28001"</span><span class="token punctuation">,</span>
            <span class="token property">"health"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">"state"</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token property">"stateStr"</span> <span class="token operator">:</span> <span class="token string">"SECONDARY"</span><span class="token punctuation">,</span>
            <span class="token property">"uptime"</span> <span class="token operator">:</span> <span class="token number">58</span><span class="token punctuation">,</span>
            <span class="token property">"optime"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">"ts"</span> <span class="token operator">:</span> Timestamp(<span class="token number">1498806589</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token property">"t"</span> <span class="token operator">:</span> NumberLong(<span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">"optimeDate"</span> <span class="token operator">:</span> ISODate(<span class="token string">"2017-06-30T07:09:49Z"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token property">"lastHeartbeat"</span> <span class="token operator">:</span> ISODate(<span class="token string">"2017-06-30T07:10:31.761Z"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token property">"lastHeartbeatRecv"</span> <span class="token operator">:</span> ISODate(<span class="token string">"2017-06-30T07:10:32.765Z"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token property">"pingMs"</span> <span class="token operator">:</span> NumberLong(<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token property">"syncingTo"</span> <span class="token operator">:</span> <span class="token string">"node2:28001"</span><span class="token punctuation">,</span>
            <span class="token property">"configVersion"</span> <span class="token operator">:</span> <span class="token number">4</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"node3:28001"</span><span class="token punctuation">,</span>
            <span class="token property">"health"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">"state"</span> <span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
            <span class="token property">"stateStr"</span> <span class="token operator">:</span> <span class="token string">"ARBITER"</span><span class="token punctuation">,</span>
            <span class="token property">"uptime"</span> <span class="token operator">:</span> <span class="token number">43</span><span class="token punctuation">,</span>
            <span class="token property">"lastHeartbeat"</span> <span class="token operator">:</span> ISODate(<span class="token string">"2017-06-30T07:10:31.761Z"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token property">"lastHeartbeatRecv"</span> <span class="token operator">:</span> ISODate(<span class="token string">"2017-06-30T07:10:29.970Z"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token property">"pingMs"</span> <span class="token operator">:</span> NumberLong(<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token property">"configVersion"</span> <span class="token operator">:</span> <span class="token number">4</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"ok"</span> <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="6-删除子节点"><a href="#6-删除子节点" class="headerlink" title="6.删除子节点"></a>6.删除子节点</h3><pre class="line-numbers language-bash"><code class="language-bash">rs.remove<span class="token punctuation">(</span><span class="token string">"node3:28001"</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true"># 返回{"ok" : 1}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="7-可能遇到的问题"><a href="#7-可能遇到的问题" class="headerlink" title="7.可能遇到的问题"></a>7.可能遇到的问题</h3><p>在节点中执行show方法可能出现</p>
<pre class="line-numbers language-json"><code class="language-json">DBTEST<span class="token operator">:</span>SECONDARY> show databases
<span class="token number">2017</span>-<span class="token number">07</span>-28T11<span class="token operator">:</span><span class="token number">15</span><span class="token operator">:</span><span class="token number">06.856</span>+<span class="token number">0800</span> E QUERY    <span class="token punctuation">[</span>thread1<span class="token punctuation">]</span> Error<span class="token operator">:</span> listDatabases failed<span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">"ok"</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">"errmsg"</span> <span class="token operator">:</span> <span class="token string">"not master and slaveOk=false"</span><span class="token punctuation">,</span>
        <span class="token property">"code"</span> <span class="token operator">:</span> <span class="token number">13435</span><span class="token punctuation">,</span>
        <span class="token property">"codeName"</span> <span class="token operator">:</span> <span class="token string">"NotMasterNoSlaveOk"</span>
<span class="token punctuation">}</span> <span class="token operator">:</span>
_getErrorWithCode@src/mongo/shell/utils.js<span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">13</span>
Mongo.prototype.getDBs@src/mongo/shell/mongo.js<span class="token operator">:</span><span class="token number">62</span><span class="token operator">:</span><span class="token number">1</span>
shellHelper.show@src/mongo/shell/utils.js<span class="token operator">:</span><span class="token number">755</span><span class="token operator">:</span><span class="token number">19</span>
shellHelper@src/mongo/shell/utils.js<span class="token operator">:</span><span class="token number">645</span><span class="token operator">:</span><span class="token number">15</span>

#解决方法是在报错的节点上执行rs.slaveOk(<span class="token punctuation">)</span>方法即可
DBTEST<span class="token operator">:</span>STARTUP2> rs.slaveOk(<span class="token punctuation">)</span>
DBTEST<span class="token operator">:</span>STARTUP2> show databases
admin       <span class="token number">0</span>.000GB
local       <span class="token number">0</span>.000GB
mydatabase  <span class="token number">0</span>.000GB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="8-关闭、重启复制集"><a href="#8-关闭、重启复制集" class="headerlink" title="8.关闭、重启复制集"></a>8.关闭、重启复制集</h3><p>参考上边的关闭mongodb的方法，依次在每个节点上执行关闭操作<br><code>注意关闭顺序，在重启节点的过程中，建议不要直接shutdown Primary，这样可能导致已经写入primary但未同步到secondary的数据丢失</code></p>
<blockquote>
<p>1.shutdown Primary （shutdown会等待Secondary oplog追到10s以内）<br>2.Primary退出后，剩余的节点选举出一个新的Primary（复制集只包含1或2节点例外）<br>3.Primary重新启动，因为当前复制集已经有了新的Primary，这个Primary将以Secondary的角色运行。<br>4.从新的Primary同步的过程中，发现自己有无效的oplog，会先进行rollback。（rollback的数据只要不超过300M是可以找回的）</p>
</blockquote>
<p>上面这种操作可能会导致数据丢失</p>
<blockquote>
<p>1.逐个重启复制集里所有的Secondary节点<br>2.对Primary发送stepDown命令，等待primary降级为Secondary<br>3.重启降级后的Primary</p>
</blockquote>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB笔记</title>
    <url>/2017/07/26/mongodb-bi-ji/</url>
    <content><![CDATA[<h2 id="一、Mongo数据库为NoSQL数据库"><a href="#一、Mongo数据库为NoSQL数据库" class="headerlink" title="一、Mongo数据库为NoSQL数据库"></a>一、Mongo数据库为NoSQL数据库</h2><table>
<thead>
<tr>
<th align="center">关系型数据库</th>
<th align="center">NoSQL数据库</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数据库</td>
<td align="center">数据库类似于MySQL</td>
</tr>
<tr>
<td align="center">表</td>
<td align="center">集合</td>
</tr>
<tr>
<td align="center">行</td>
<td align="center">文档</td>
</tr>
<tr>
<td align="center">列</td>
<td align="center">成员</td>
</tr>
<tr>
<td align="center">主键</td>
<td align="center">Object ID（自动维护）</td>
</tr>
</tbody></table>
<p><code>与Node.js捆绑。</code></p>
<h3 id="启动MongoDB服务"><a href="#启动MongoDB服务" class="headerlink" title="启动MongoDB服务"></a>启动MongoDB服务</h3><ul>
<li>默认端口启动<br><code>mongod --dbpath E:\MongoDB\db</code></li>
<li>设置端口启动<br><code>mongod --dbpath E:\MongoDB\db --port=27001</code></li>
</ul>
<h3 id="连接MongoDB数据库"><a href="#连接MongoDB数据库" class="headerlink" title="连接MongoDB数据库"></a>连接MongoDB数据库</h3><p><code>mongo</code>或者<code>mongo --port=27001</code></p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">切换到admin数据库</td>
<td align="center">use admin</td>
</tr>
<tr>
<td align="center">关闭数据库服务</td>
<td align="center">db.shutdownServer() <code>(必须在admin下才能执行成功)</code></td>
</tr>
<tr>
<td align="center">重启服务</td>
<td align="center">mongod -f E:\MongoDB\mongodb.conf</td>
</tr>
</tbody></table>
<h2 id="二、基本语法"><a href="#二、基本语法" class="headerlink" title="二、基本语法"></a>二、基本语法</h2><h3 id="查看所有数据库"><a href="#查看所有数据库" class="headerlink" title="查看所有数据库"></a>查看所有数据库</h3><p><code>db.showDatabases;</code></p>
<h3 id="使用某个数据库"><a href="#使用某个数据库" class="headerlink" title="使用某个数据库"></a>使用某个数据库</h3><p><code>use admin</code></p>
<blockquote>
<p>这时并不会创建数据库，只有在数据库里面保存集合数据后，才真正创建数据库</p>
</blockquote>
<h3 id="创建一个集合"><a href="#创建一个集合" class="headerlink" title="创建一个集合"></a>创建一个集合</h3><p><code>db.createCollection("emp");</code></p>
<h3 id="插入一条数据"><a href="#插入一条数据" class="headerlink" title="插入一条数据"></a>插入一条数据</h3><p><code>db.emp.insert({"name": 10, "ange": 10});</code></p>
<blockquote>
<p>一般在执行这一步的时候会直接创建集合emp，所以上面那句语句一般不会用，都是直接使用这句来插入数据的同时创建集合</p>
</blockquote>
<h3 id="查看所有集合"><a href="#查看所有集合" class="headerlink" title="查看所有集合"></a>查看所有集合</h3><p><code>show collections;</code></p>
<h3 id="查看emp表的数据"><a href="#查看emp表的数据" class="headerlink" title="查看emp表的数据"></a>查看emp表的数据</h3><p>语法：<strong>db.集合名称.find({若干条件}，[ { 设置显示的字段 } ])</strong><br><code>db.emp.find();</code></p>
<h3 id="增加不规则的数据"><a href="#增加不规则的数据" class="headerlink" title="增加不规则的数据"></a>增加不规则的数据</h3><pre class="line-numbers language-java"><code class="language-java">var deptData <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token string">"name"</span> <span class="token operator">:</span> <span class="token string">"123"</span><span class="token punctuation">,</span>
<span class="token string">"sex"</span> <span class="token operator">:</span> <span class="token string">"man"</span>
<span class="token punctuation">}</span>
db<span class="token punctuation">.</span>emp<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>deptData<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="关于ID问题"><a href="#关于ID问题" class="headerlink" title="关于ID问题"></a>关于ID问题</h3><p>在MongoDB集合中的每一行记录都会自动的生成一个“ *” _id” :ObjectId(“55949a13eecd74894d19d8dc”)*”数据，这个数据组成是：“时间戳 + 机器码 + PID + 计数器”，这个ID的信息是MongonDB数据自己为用户生成的。</p>
<h3 id="单独的一个文档信息查看"><a href="#单独的一个文档信息查看" class="headerlink" title="单独的一个文档信息查看"></a>单独的一个文档信息查看</h3><p><code>db.dept.findOne();</code></p>
<h3 id="删除一个数据"><a href="#删除一个数据" class="headerlink" title="删除一个数据"></a>删除一个数据</h3><p><code>db.dept.remove( { "_id" :ObjectId("55949a13eecd74894d19d8dc")} );</code></p>
<h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> deptData <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token string">"name"</span> <span class="token punctuation">:</span> <span class="token string">"123"</span><span class="token punctuation">,</span>
<span class="token string">"sex"</span> <span class="token punctuation">:</span> <span class="token string">"man"</span>
<span class="token punctuation">}</span>
db<span class="token punctuation">.</span>dept<span class="token punctuation">.</span><span class="token function">updata</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">"_id"</span> <span class="token punctuation">:</span><span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">"55949a13eecd74894d19d8dc"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>deptData<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="删除集合"><a href="#删除集合" class="headerlink" title="删除集合"></a>删除集合</h3><p>语法：db.集合名称.drop()<br><code>db.dept.drop();</code></p>
<h3 id="删除当前数据库"><a href="#删除当前数据库" class="headerlink" title="删除当前数据库"></a>删除当前数据库</h3><p><code>db.dropDatabase();</code></p>
<h2 id="三、数据操作（重点）"><a href="#三、数据操作（重点）" class="headerlink" title="三、数据操作（重点）"></a>三、数据操作（重点）</h2><h3 id="增加数据"><a href="#增加数据" class="headerlink" title="增加数据"></a>增加数据</h3><p>增加一个简单数据<br><code>db.dept.insert({"url":"hm-dusk.github.io"});</code><br>保存一个数组</p>
<pre><code>db.dept.insert([

    {"url":"hm-dusk.github.io"},
    {"url":"https://hm-dusk.github.io"}
    ]);</code></pre><p>可以使用JavaScript的循环添加</p>
<pre><code>for(var x = 0; x &lt; 1000; x ++){
    db.dept.insert({"url":"hm-dusk.github.io"});
}</code></pre><h3 id="数据查询"><a href="#数据查询" class="headerlink" title="数据查询"></a>数据查询</h3><p>任何的数据库之中，数据的查询操作都是最为麻烦的，而在MongoDB数据库里面，对于查询的支持非常到位，包含有关系运算、逻辑运算、数组运算、正则运算等等。</p>
<p>首先对于数据的查询操作核心的语法：“<code>db.集合名称.find({查询条件} [,{设置显示的字段}])</code>”。</p>
<pre><code>db.dept.find();</code></pre><p>条件查询</p>
<pre><code>db.dept.find( { "url":"hm-dusk.github.io" } );</code></pre><p>对于设置的显示字段严格来讲就称为数据的投影操作，如果不需要显示的字段设置“0”，而需要显示的字段设置“1”。</p>
<pre><code>//不想显示_id
db.dept.find( {"url":"hm-dusk.github.io"},{"_id":0} );
db.dept.find( {"url":"hm-dusk.github.io"},{"_id":0,"url":1} );</code></pre><p>大部分的情况下，这种投影操作的意义不大。同时对于数据的查询也可以使用“pretty()”函数进行漂亮显示。</p>
<pre><code>db.dept.find( {"url":"hm-dusk.github.io"},{"_id":0} ).pretty();</code></pre><p>范例：查询单个数据</p>
<pre><code>db.dept.findOne( {"url":"hm-dusk.github.io"},{"_id":0} );</code></pre><h3 id="关系运算"><a href="#关系运算" class="headerlink" title="关系运算"></a>关系运算</h3><p>在MongoDB里面支持的关系查询操作：大于（<code>$gt</code>）、小于（<code>$lt</code>）、大于等于（<code>$gte</code>）、小于等于（<code>$lte</code>）、不等于（<code>$ne</code>）、等于（<code>key:value</code>、<code>$eq</code>）。但是要想让这些操作可以正常使用，那么需要准备出一个数据集合。<br><img src="http://47.106.179.244/mongodb%E7%AC%94%E8%AE%B0/%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E9%9B%86%E5%90%88.JPG" alt=""></p>
<p>范例：查询姓名是张三的信息</p>
<pre><code>db.students.find({"name":"张三"}).pretty();</code></pre><p>范例：查询性别是男的信息</p>
<pre><code>db.students.find({"sex":"男"}).pretty();</code></pre><p>范例：查询年龄大于19岁的学生</p>
<pre><code>db.students.find({"age": {"$gt":19} }).pretty();</code></pre><p>范例：查询成绩大于等于60分的学生</p>
<pre><code>db.students.find({"score": {"$gte":60} }).pretty();</code></pre><p>范例：查询姓名不是王五的信息</p>
<pre><code>db.students.find({"name": {"$ne":"王五"} }).pretty();</code></pre><blockquote>
<p>此时与之前最大的区别就在于，在一个JSON结构里面需要定义其它的JSON结构，并且这种风格在日后通过程序进行操作的时候依然如此。</p>
</blockquote>
<h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><p>逻辑运算主要就是三种类型：与（<code>$and</code>）、或（<code>$or</code>）、非（<code>$not</code>、<code>$nor</code>）。</p>
<p>范例：查询年龄在19 ~ 20岁的学生信息</p>
<pre><code>db.students.find({ "age":{"$gte":19,"$lte":20} }).pretty();</code></pre><p>在进行逻辑运算的时候“and”的连接是最容易的，因为只需要利用“,”分割若干个条件就可以了。</p>
<p>范例：查询年龄不是19岁的学生</p>
<pre><code>db.students.find({ "age":{"$ne":19} }).pretty();</code></pre><p>范例：查询年龄大于19岁，或者成绩大于90分的学生信息</p>
<pre><code>db.students.find({ "$or":[
    {"age":{"$gt":19}},
    {"score":{"$gt":90}}
    ] }).pretty();
</code></pre><p>范例：也可以进行或的求反操作(针对于或的操作可以实现一个求反的功能。)</p>
<pre><code>db.students.find({ "$nor":[
    {"age":{"$gt":19}},
    {"score":{"$gt":90}}
    ] }).pretty();</code></pre><h3 id="求模"><a href="#求模" class="headerlink" title="求模"></a>求模</h3><p>模的运算使用“$mod”来完成，语法“<code>{$mod : [数字,余数]}</code>”。</p>
<p>范例：求模</p>
<pre><code>db.students.find({"age": {"$mod":[20,1]} }).pretty();</code></pre><p>利用求模计算可以编写一些数学的计算公式。</p>
<h3 id="范围查询"><a href="#范围查询" class="headerlink" title="范围查询"></a>范围查询</h3><p>只要是数据库，必须存在有“<code>$in</code>”（在范围之中）、“<code>$nin</code>”（不在范围之中）。</p>
<p>范例：查询姓名是“张三”、“李四”、“王五”的信息</p>
<pre><code>db.students.find({"name": {"$in":["张三","李四","王五"]} }).pretty();</code></pre><p>范例：不在范围</p>
<pre><code>db.students.find({"name": {"$nin":["张三","李四","王五"]} }).pretty();</code></pre><p><em>在实际的工作之中，范围的操作很重要。</em></p>
<h3 id="数组查询"><a href="#数组查询" class="headerlink" title="数组查询"></a>数组查询</h3><p>首先在mongoDB里面是支持数组保存的，一旦支持了数组保存，就需要针对于数组的数据进行匹配。</p>
<p>范例：保存一部分数组内容<br><img src="http://47.106.179.244/mongodb%E7%AC%94%E8%AE%B0/%E6%95%B0%E7%BB%84%E6%95%B0%E6%8D%AE%E9%9B%86%E5%90%88.JPG" alt=""><br>此时的数据包含有数组内容，而后需要针对于数组数据进行判断，可以使用几个运算符：<code>$all</code>、<code>$size</code>、<code>$slice</code>、<code>$elemMatch</code>。</p>
<p>范例：查询同时参加语文和数学课程的学生<br>现在两个数组内容都需要保存，所以使用“<code>{"$all",[内容1,内容2,..]}</code>”</p>
<pre><code>db.students.find({"course": {"$all": ["语文","数学"]} }).pretty();</code></pre><p>现在所有显示的学生信息里面包含语文和数学的内容，而如果差一个内容的不会显示。</p>
<blockquote>
<p>虽然“<code>$all</code>”计算可以用于数组上，但是也可以用于一个数据的匹配上。</p>
</blockquote>
<p>范例：查询学生地址是“海淀区”的信息</p>
<pre><code>db.students.find({"address": {"$all":["海淀区"]} }).pretty();</code></pre><blockquote>
<p>既然在集合里面现在保存的是数组信息，那么数组就可以利用索引操作，使用“<code>key.index</code>”的方式来定义索引。</p>
</blockquote>
<p>范例：查询数组中第二个内容（index= 1，索引下标从0开始）为数学的信息</p>
<pre><code>db.students.find({"course.1":"数学"}).pretty();</code></pre><p>范例：要求查询出只参加两门课程的学生<br>使用“<code>$size</code>”来进行数量的控制。</p>
<pre><code>db.students.find({"course": {"$size":2} }).pretty();</code></pre><p>发现在进行数据查询的时候只要是内容复合条件，数组的内容就全部显示出来了，但是现在希望可以控制数组的返回的数量，那么可以使用“<code>$slice</code>”进行控制。</p>
<p>范例：返回年龄为19岁所有学生的信息，但是要求只显示两门参加课程</p>
<pre><code>db.students.find({"age":19},{"course":{"$slice":2}}).pretty();</code></pre><p>现在只取得了前两门的信息，那么也可以设置负数表示取出后两门的信息。</p>
<pre><code>db.students.find({"age":19},{"course":{"$slice":-2}}).pretty();</code></pre><p>或者只是取出中间部分的信息。</p>
<pre><code>db.students.find({"age":19},{"course":{"$slice":[1,2]}}).pretty();</code></pre><blockquote>
<p>在此时设置的两个数据里面第一个数据表示跳过的数据量，而第二个数据表示返回的数量。</p>
</blockquote>
<h3 id="嵌套集合运算"><a href="#嵌套集合运算" class="headerlink" title="嵌套集合运算"></a>嵌套集合运算</h3><p>在MongoDB数据里面每一个集合数据可以继续保存其它的集合数据，例如：有些学生需要保存家长信息。</p>
<p>范例：增加数据<br><img src="http://47.106.179.244/mongodb%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%A5%97%E6%95%B0%E6%8D%AE%E9%9B%86%E5%90%88.JPG" alt=""><br>此时给出的内容是嵌套的集合，而这种集合的数据的判断只能够通过“<code>$elemMatch</code>”完成。</p>
<p>范例：查询出年龄大于等于19岁且父母有人是局长的信息</p>
<pre><code>db.students.find(
    {"$and":[
        {"age":{"$gte":19}},
        {"parents":{"$elemMatch":{"job":"局长"}}}
    ]}).pretty();</code></pre><blockquote>
<p>由于这种查询的时候条件比较麻烦，所以如果可以，尽量别搞这么复杂的数据结构组成。</p>
</blockquote>
<h3 id="判断某个字段是否存在"><a href="#判断某个字段是否存在" class="headerlink" title="判断某个字段是否存在"></a>判断某个字段是否存在</h3><p>使用“<code>$exists</code>”可以判断某个字段是否存在，如果设置为true表示存在，如果设置为false就表示不存在。</p>
<p>范例：查询具有parents成员的数据</p>
<pre><code>db.students.find({"parents":{"$exists":true}}).pretty();</code></pre><p>范例：查询不具有course成员的数据</p>
<pre><code>db.students.find({"course":{"$exists":false}}).pretty();</code></pre><blockquote>
<p>可以利用此类查询来进行一些不需要的数据的过滤。</p>
</blockquote>
<h3 id="条件过滤"><a href="#条件过滤" class="headerlink" title="条件过滤"></a>条件过滤</h3><p>实际上习惯于传统关系型数据库开发的我们对于数据的筛选，可能首先想到的一定是where子句，所以在MongoDB里面也提供有“<code>$where</code>”。</p>
<p>范例：使用where进行数据查询</p>
<pre><code>db.students.find({"$where":"this.age&gt;20"}).pretty();
db.students.find("this.age&gt;20").pretty();</code></pre><p>对于“<code>$where</code>”是可以简化的，但是这类的操作是属于进行每一行的信息判断，<em>实际上对于数据量较大的情况并不方便使用</em>。实际上以上的代码严格来讲是属于编写一个操作的函数。</p>
<pre><code>db.students.find(function(){
        return this.age &gt; 20;
    }).pretty();

db.students.find({"$where":function(){
        return this.age &gt; 20;
    }}).pretty();</code></pre><p>以上只是查询了一个判断，如果要想实现多个条件的判断，那么就需要使用and连接。</p>
<pre><code>db.students.find({"$and":[
    {"$where":"this.age&gt;19"},
    {"$where":"this.age&lt;21"}
    ]
});</code></pre><blockquote>
<p>虽然这种形式的操作可以实现数据查询，但是最大的缺点是将在MongoDB里面保存的BSON数据变为了JavaScript的语法结构，这样的方式不方便使用数据库索引机制。</p>
</blockquote>
<h3 id="正则运算"><a href="#正则运算" class="headerlink" title="正则运算"></a>正则运算</h3><p>如果要想实现模糊查询，那么必须使用正则表达式，而且正则表达式使用的是语言Perl兼容的正则表达式的形式。如果要想实现正则使用，则按照如下的定义格式：</p>
<ul>
<li>基础语法：<code>{key : 正则标记}</code></li>
<li>完整语法：<code>{key : {"$regex" : 正则标记 , "$options" : 选项}}</code></li>
</ul>
<blockquote>
<p>|- 对于options主要是设置正则的信息查询的标记：<br>|- “<code>i</code>”：忽略字母大小写；<br>|- “<code>m</code>”：多行查找；<br>|- “<code>x</code>”：空白字符串除了被转义的或在字符类中意外的完全被忽略；<br>|- “<code>s</code>”：匹配所有的字符（圆点、“.”），包括换行内容。<br>|- <em>需要注意的是，如果是直接使用（javascript）那么只能够使用<code>i</code>和<code>m</code>，而“<code>x</code>”和“<code>s</code>”必须使用“<code>$regex</code>”</em>。</p>
</blockquote>
<p>范例：查询以“谷”开头的姓名</p>
<pre><code>db.students.find({"name": /谷/ }).pretty();</code></pre><p>范例：查询姓名有字母A</p>
<pre><code>db.students.find({"name": /a/i }).pretty();
db.students.find({"name": {"$regex": /a/i }}).pretty();</code></pre><p>如果要执行模糊查询的操作，严格来讲只需要编写一个关键字就够了。<br>正则操作之中除了可以查询出单个字段的内容之外，也可以进行数组数据的查询。</p>
<p>范例：查询数组数据</p>
<pre><code>db.students.find({"course": /语?/ }).pretty();
db.students.find({"course": /语/ }).pretty();</code></pre><blockquote>
<p>MongoDB中的正则符号和之前Java正则是有一些小小差别，不建议使用以前的一些标记，正则就将其应用在模糊数据查询上。</p>
</blockquote>
<h3 id="数据排序"><a href="#数据排序" class="headerlink" title="数据排序"></a>数据排序</h3><p>在MongoDB里面数据的排序操作使用“<code>sort()</code>”函数，在进行排序的时候可以有两个顺序：<code>升序（1）</code>、<code>降序（-1）</code>。</p>
<p>范例：数据排序</p>
<pre><code>db.students.find().sort({"score": -1}).pretty();</code></pre><p>但是在进行排序的过程里面有一种方式称为自然排序，按照数据保存的先后顺序排序，使用“<code>$natural</code>”表示。</p>
<p>范例：自然排序</p>
<pre><code>db.students.find().sort({"$natural": -1}).pretty();</code></pre><blockquote>
<p>在MongoDB数据库里面排序的操作相比较传统关系型数据库的设置要简单。</p>
</blockquote>
<h3 id="数据分页显示"><a href="#数据分页显示" class="headerlink" title="数据分页显示"></a>数据分页显示</h3><p>在MongoDB里面的数据分页显示也是符合于大数据要求的操作函数：</p>
<ul>
<li><code>skip(n)</code>：表示跨过多少数据行；</li>
<li><code>limit(n)</code>：取出的数据行的个数限制。</li>
</ul>
<p>范例：分页显示（第一页，skip(0)、limit(5)）</p>
<pre><code>db.students.find().skip(0).limit(5).sort({"age":-1}).pretty();</code></pre><p>范例：分页显示（第二页，skip(5),limit(5）)</p>
<pre><code>db.students.find().skip(5).limit(5).sort({"age":-1}).pretty();</code></pre><blockquote>
<p>这两个分页的控制操作，就是在以后只要是存在有大数据的信息情况下都会使用它。</p>
</blockquote>
<h2 id="四、数据更新操作"><a href="#四、数据更新操作" class="headerlink" title="四、数据更新操作"></a>四、数据更新操作</h2><p>对于MongoDB而言，数据的更新基本上是一件很麻烦的事情，如果在实际的工作之中，真的具有此类的操作支持，那么最好的做法，在MongoDB里面对于数据的更新操作提供了两类函数：<code>save()</code>、<code>update()</code>。</p>
<h3 id="函数的基本使用"><a href="#函数的基本使用" class="headerlink" title="函数的基本使用"></a>函数的基本使用</h3><p>如果要修改数据最直接的使用函数就是<code>update()</code>函数，但是这个函数的语法要求很麻烦：</p>
<ul>
<li>语法：<code>db.集合.update(更新条件 , 新的对象数据（更新操作符） , upsert , multi)</code>；</li>
</ul>
<blockquote>
<p>|- <code>upsert</code>：如果要更新的数据不存在，则增加一条新的内容（true为增加、false为不增加）；<br>|-<code>multi</code>：表示是否只更新满足条件的第一行记录，如果设置为false，只更新第一条，如果是true全更新。</p>
</blockquote>
<p>范例：更新存在的数据——将年龄是19岁的人的成绩都更新为100分（此时会返回多条数据）</p>
<ol>
<li>只更新第一条数据：<pre><code>db.students.update({"age":19}, {"$set": {"score":100}}, false,false);</code></pre></li>
<li>所有满足条件的数据都更新<pre><code>db.students.update({"age":19}, {"$set":{"score":100}}, false,true);</code></pre></li>
</ol>
<p>范例：更新不存在的数据</p>
<pre><code>db.students.update({"age":30}, {"$set":{"name":"不存在"}}, true,false);
//由于没有年龄是30岁的学生信息，所以此时相当于进行了数据的创建。</code></pre><p>那么除了<code>update()</code>函数之外，还提供有一个<code>save()</code>函数，这个函数的功能与更新不存在的内容相似。</p>
<p>范例：使用save()操作</p>
<pre><code>db.students.save({"_id": ObjectID("55949a13eecd74894d19d8dc"), "age":50});
//由于此时对应的id数据存在了，所以就变为了更新操作。但是如果要保存的数据不存在（不能保存有“_id”），那么就变为了增加操作。</code></pre><h3 id="修改器"><a href="#修改器" class="headerlink" title="修改器"></a>修改器</h3><p>对MongoDB数据库而言，数据的修改会牵扯到内容的变更、结构的变更（包含有数组），所以在进行MongoDB设计的时候就提供有一系列的修改器的应用，那么像之前使用的“<code>$set</code>”就是一个修改器。</p>
<h4 id="inc：主要针对于一个数字字段，增加某个数字字段的数据内容；"><a href="#inc：主要针对于一个数字字段，增加某个数字字段的数据内容；" class="headerlink" title="$inc：主要针对于一个数字字段，增加某个数字字段的数据内容；"></a>$inc：主要针对于一个数字字段，增加某个数字字段的数据内容；</h4><p>语法：<code>{"$inc" : {"成员" : 内容}}</code></p>
<p>范例：将所有年龄为19岁的学生成绩一律减少30分,年龄加1</p>
<pre><code>db.students.update({"age":19}, {"$inc":  {"score":-30,"age":1} });</code></pre><h4 id="set：进行内容的重新设置；"><a href="#set：进行内容的重新设置；" class="headerlink" title="$set：进行内容的重新设置；"></a>$set：进行内容的重新设置；</h4><p>语法：<code>{"$set" : {"成员" : "新内容"}}</code></p>
<p>范例：将年龄是20岁的人的成绩修改为89</p>
<pre><code>db.students.update({"age":20}, {"$set": {"score":89} });</code></pre><h4 id="unset：删除某个成员的内容；"><a href="#unset：删除某个成员的内容；" class="headerlink" title="$unset：删除某个成员的内容；"></a>$unset：删除某个成员的内容；</h4><p>语法：<code>{"$unset" : {"成员" : 1}}</code></p>
<p>范例：删除“张三”的年龄与成绩信息</p>
<pre><code>db.students.update({"name":"张三"}, {"$unset": {"age":1,"score":1} });
//执行之后指定的成员内容就消失了。</code></pre><h4 id="push：相当于将内容追加到指定的成员之中（基本上是数组）；"><a href="#push：相当于将内容追加到指定的成员之中（基本上是数组）；" class="headerlink" title="$push：相当于将内容追加到指定的成员之中（基本上是数组）；"></a>$push：相当于将内容追加到指定的成员之中（基本上是数组）；</h4><p>语法：<code>${"$push" : {成员 : value}}</code></p>
<p>范例：向“李四”添加课程信息（此时张三信息下没有course信息）</p>
<pre><code>db.students.update({"name":"李四"}, {"$push": {"course":"语文"} });</code></pre><p>范例：向“谷大神 - E”里面的课程追加一个“美术”</p>
<pre><code>db.students.update({"name":"谷大神 - E"}, {"$push": {"course":"美术"} });</code></pre><blockquote>
<p>就是进行数组数据的添加操作使用的，如果没有数组则进行一个新的数组的创建，如果有则进行内容的追加。</p>
</blockquote>
<h4 id="pushAll：与“-push”是类似的，可以一次追加多个内容到数组里面；"><a href="#pushAll：与“-push”是类似的，可以一次追加多个内容到数组里面；" class="headerlink" title="$pushAll：与“$push”是类似的，可以一次追加多个内容到数组里面；"></a>$pushAll：与“$push”是类似的，可以一次追加多个内容到数组里面；</h4><p>语法：<code>${"$pushAll" : {成员 : 数组内容}}</code></p>
<p>范例：向“王五”的信息里面添加多个课程内容</p>
<pre><code>db.students.update({"name":"王五"}, {"$pushAll": {"cource":["美术","音乐","田径"]} });</code></pre><h4 id="addToSet：向数组里面增加一个新的内容，只有这个内容不存在的时候才会增加；"><a href="#addToSet：向数组里面增加一个新的内容，只有这个内容不存在的时候才会增加；" class="headerlink" title="$addToSet：向数组里面增加一个新的内容，只有这个内容不存在的时候才会增加；"></a>$addToSet：向数组里面增加一个新的内容，只有这个内容不存在的时候才会增加；</h4><p>语法：<code>{"$addToSet" : {成员 : 内容}}</code></p>
<p>范例：向王五的信息增加新的内容</p>
<pre><code>db.students.update({"name": "王五"}, {"$addToSet": {"course":"舞蹈"} });
//此时会判断要增加的内容在数组里面是否已经存在了，如果不存在则向数组之中追加内容，如果存在了则不做任何的修改操作。</code></pre><h4 id="pop：删除数组内的数据；"><a href="#pop：删除数组内的数据；" class="headerlink" title="$pop：删除数组内的数据；"></a>$pop：删除数组内的数据；</h4><p>语法：<code>{"$pop" : {成员 : 内容}}</code><br>内容如果设置为-1表示删除第一个，如果是1表示删除最后一个；</p>
<p>范例：删除王五的第一个课程</p>
<pre><code>db.students.update({"name":"王五"}, {"$pop": {"course":1}});</code></pre><h4 id="pull：从数组内删除一个指定内容的数据"><a href="#pull：从数组内删除一个指定内容的数据" class="headerlink" title="$pull：从数组内删除一个指定内容的数据"></a>$pull：从数组内删除一个指定内容的数据</h4><p>语法：<code>{"$pull" : {成员 : 数据}}</code><br>进行数据比对的，如果是此数据则删除；</p>
<p>范例：删除王五学生的音乐课程信息</p>
<pre><code>db.students.update({"name":"王五"}, {"$pull":"音乐"});</code></pre><h4 id="pullAll：一次性删除多个内容；"><a href="#pullAll：一次性删除多个内容；" class="headerlink" title="$pullAll：一次性删除多个内容；"></a>$pullAll：一次性删除多个内容；</h4><p>语法：<code>{"$pull" : {成员 : [数据, 数据,...]}}</code></p>
<p>范例：删除“谷大神 - A”中的三门课程</p>
<pre><code>db.students.update({"name":"谷大神 - A"}, {"$pullAll":{"course":["语文","数学","英语"]}});</code></pre><h4 id="rename：为成员名称重命名；"><a href="#rename：为成员名称重命名；" class="headerlink" title="$rename：为成员名称重命名；"></a>$rename：为成员名称重命名；</h4><p>语法：<code>{"$rename" : {旧的成员名称 : 新的成员名称}}</code></p>
<p>范例：将“张三”name成员名称修改为“姓名”</p>
<pre><code>db.students.update({"name":"张三"}, {"$rename":{"name":"姓名"}});</code></pre><p>在整个MongoDB数据库里面，提供的修改器的支持很到位。</p>
<h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim程式编辑器</title>
    <url>/2017/07/26/vim-cheng-shi-bian-ji-qi/</url>
    <content><![CDATA[<h2 id="vim编辑器常用指令"><a href="#vim编辑器常用指令" class="headerlink" title="vim编辑器常用指令"></a>vim编辑器常用指令</h2><h3 id="一般指令模式（command-mode）："><a href="#一般指令模式（command-mode）：" class="headerlink" title="一般指令模式（command mode）："></a>一般指令模式（command mode）：</h3><h4 id="移动游标方法"><a href="#移动游标方法" class="headerlink" title="移动游标方法"></a>移动游标方法</h4><table>
<thead>
<tr>
<th align="left">指令</th>
<th align="left">代表含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">[Ctrl]+[f]</td>
<td align="left">向下移动一页，相当于[Page Down]</td>
</tr>
<tr>
<td align="left">[Ctrl]+[b]</td>
<td align="left">向上移动一页，相当于[Page Up]</td>
</tr>
<tr>
<td align="left">0或者功能键[Home]</td>
<td align="left">移动到行最左侧</td>
</tr>
<tr>
<td align="left">$或者功能键[End]</td>
<td align="left">移动到行最右侧</td>
</tr>
<tr>
<td align="left"><code>G</code></td>
<td align="left">移动到文档最后一列</td>
</tr>
<tr>
<td align="left">nG</td>
<td align="left">n代表数字，移动到第n行(可配合:set nu)</td>
</tr>
<tr>
<td align="left"><code>gg</code></td>
<td align="left">移动到第一行，相当于1G</td>
</tr>
<tr>
<td align="left">n[Enter]</td>
<td align="left">n为数字。游标向下移动n行</td>
</tr>
</tbody></table>
<h4 id="保存离开"><a href="#保存离开" class="headerlink" title="保存离开"></a>保存离开</h4><table>
<thead>
<tr>
<th align="left">指 令</th>
<th align="center">代表含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">:w</td>
<td align="center">将编辑的资料写入磁盘中</td>
</tr>
<tr>
<td align="left">:w!</td>
<td align="center">当档案属性为<code>只读</code>时，强制写入该档案。具体能不能写入，跟用户对该档案的权限有关</td>
</tr>
<tr>
<td align="left">:q</td>
<td align="center">离开vi</td>
</tr>
<tr>
<td align="left">:q!</td>
<td align="center">强制离开，不存储档案</td>
</tr>
<tr>
<td align="left">:wq</td>
<td align="center">储存后离开</td>
</tr>
</tbody></table>
<h4 id="删除、复制和粘贴"><a href="#删除、复制和粘贴" class="headerlink" title="删除、复制和粘贴"></a>删除、复制和粘贴</h4><table>
<thead>
<tr>
<th align="left">指令</th>
<th align="center">代表含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">x,X</td>
<td align="center">x为向后删除一个字符（相当于[del]），X为向前删除一个字符（相当于[backspace]）</td>
</tr>
<tr>
<td align="left"><code>dd</code></td>
<td align="center">删除游标所在的一整行（可以理解为剪切，p对dd同样有效）</td>
</tr>
<tr>
<td align="left">ndd</td>
<td align="center">n表示数字，删除游标所在的向下n行</td>
</tr>
<tr>
<td align="left"><code>yy</code></td>
<td align="center">复制游标所在行</td>
</tr>
<tr>
<td align="left">nyy</td>
<td align="center">n表示数字，复制游标所在的向下n行</td>
</tr>
<tr>
<td align="left"><code>p</code>,<code>P</code></td>
<td align="center">p为粘贴插入到游标下一行，原始的文档向后推，P为上一行</td>
</tr>
<tr>
<td align="left"><code>u</code></td>
<td align="center">复原上一个动作（撤销）</td>
</tr>
<tr>
<td align="left">Ctrl+r</td>
<td align="center">重复上一个动作</td>
</tr>
<tr>
<td align="left"><code>.</code></td>
<td align="center">小数点，重复上一个动作</td>
</tr>
</tbody></table>
<h4 id="搜索与替换"><a href="#搜索与替换" class="headerlink" title="搜索与替换"></a>搜索与替换</h4><table>
<thead>
<tr>
<th align="left">指令</th>
<th align="left">代表含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">/word</td>
<td align="left">从光标处开始<code>向下</code>查找名为word的字符串</td>
</tr>
<tr>
<td align="left">?word</td>
<td align="left">从光标处开始<code>向上</code>查找名为word的字符串</td>
</tr>
<tr>
<td align="left">n</td>
<td align="left">重复上一个搜索动作</td>
</tr>
<tr>
<td align="left">N</td>
<td align="left">与n功能相反（反向搜索）</td>
</tr>
<tr>
<td align="left">:n1,n2s/word1/word2/g</td>
<td align="left">n1与n2为数字。在第n1与n2列之间寻找word1这个字串，并将该字串取代为word2 ！举例来说，在100到200列之间搜寻vim并取代为VIM则<br>:100,200s/vim/VIM/g</td>
</tr>
<tr>
<td align="left">:1,$s/word1/word2/g</td>
<td align="left">从第一列到最后一列寻找word1字串，并将该字串取代为word2</td>
</tr>
<tr>
<td align="left">:1,$s/word1/word2/gc</td>
<td align="left">从第一列到最后一列寻找word1字串，并将该字串取代为word2 ，且在取代前显示提示字元给使用者确认(confirm)是否需要取代</td>
</tr>
</tbody></table>
<h4 id="区块选择操作"><a href="#区块选择操作" class="headerlink" title="区块选择操作"></a>区块选择操作</h4><table>
<thead>
<tr>
<th align="left">指令</th>
<th align="center">代表含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">v</td>
<td align="center">字元选择，会将游标经过的地方反白选择！</td>
</tr>
<tr>
<td align="left">V</td>
<td align="center">列选择，会将游标经过的列反白选择！</td>
</tr>
<tr>
<td align="left">Ctrl+v</td>
<td align="center">区块选择，可以用长方形的方式选择资料</td>
</tr>
<tr>
<td align="left">y</td>
<td align="center">将反白的地方复制起来</td>
</tr>
<tr>
<td align="left">d</td>
<td align="center">将反白的地方删除掉</td>
</tr>
<tr>
<td align="left">p</td>
<td align="center">将刚刚复制的区块，在游标所在处贴上！</td>
</tr>
</tbody></table>
<h3 id="一般指令模式切换到编辑模式："><a href="#一般指令模式切换到编辑模式：" class="headerlink" title="一般指令模式切换到编辑模式："></a>一般指令模式切换到编辑模式：</h3><table>
<thead>
<tr>
<th align="left">指令</th>
<th align="center">代表含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>i或I</code></td>
<td align="center">进入插入模式(Insert mode)：i为『从目前游标所在处插入』， I为『在目前所在列的第一个非空白字元处开始插入』。</td>
</tr>
<tr>
<td align="left"><code>a或A</code></td>
<td align="center">进入插入模式(Insert mode)：a为『从目前游标所在的下一个字元处开始插入』， A为『从游标所在列的最后一个字元处开始插入』。</td>
</tr>
<tr>
<td align="left"><code>o或O</code></td>
<td align="center">进入插入模式(Insert mode)：这是英文字母o的大小写。o为『在目前游标所在的下一列处插入新的一列』； O为在目前游标所在处的上一列插入新的一列！</td>
</tr>
<tr>
<td align="left"><code>r或R</code></td>
<td align="center">进入取代模式(Replace mode)：r只会取代游标所在的那一个字元一次；R会一直取代游标所在的文字，直到按下ESC为止；</td>
</tr>
</tbody></table>
<h3 id="vim编辑器页面设置"><a href="#vim编辑器页面设置" class="headerlink" title="vim编辑器页面设置"></a>vim编辑器页面设置</h3><table>
<thead>
<tr>
<th align="left">指令</th>
<th align="left">代表含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>:set nu</code></td>
<td align="left">设置vim编辑器显示行号</td>
</tr>
<tr>
<td align="left"><code>:set nonu</code></td>
<td align="left">取消行号</td>
</tr>
</tbody></table>
<p>设置vim编辑器打开默认显示行号：<br>新建或修改<code>$HOME/.vimrc</code>文件，在文件中添加</p>
<pre class="line-numbers language-vim"><code class="language-vim"><span class="token keyword">set</span> <span class="token keyword">number</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>参考文档：<a href="http://linux.vbird.org/linux_basic/0310vi.php" target="_blank" rel="noopener">鸟哥的Linux私房菜之vim程式编辑器</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>Java去掉字符串特殊字符的方法</title>
    <url>/2017/07/25/java-qu-diao-zi-fu-chuan-te-shu-zi-fu-de-fang-fa/</url>
    <content><![CDATA[<p>语法：<br><code>str = str.replaceAll("[\pP]", "");</code><br>\pP 中小写 <code>p</code> 是<em>property</em>的意思，表示 Unicode 属性，用于 Unicode <em>正表达式</em>的前缀。<br>大写 <code>P</code> 表示 Unicode 字符集七个字符属性之一：标点字符。</p>
<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">表示的意思</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong><code>P</code></strong></td>
<td align="center">标点字符</td>
</tr>
<tr>
<td align="center"><strong><code>L</code></strong></td>
<td align="center">字母</td>
</tr>
<tr>
<td align="center"><strong><code>M</code></strong></td>
<td align="center">标记符号（一般不会单独出现）</td>
</tr>
<tr>
<td align="center"><strong><code>Z</code></strong></td>
<td align="center">分隔符（比如空格、换行等）</td>
</tr>
<tr>
<td align="center"><strong><code>S</code></strong></td>
<td align="center">符号（比如数学符号、货币符号等）</td>
</tr>
<tr>
<td align="center"><strong><code>N</code></strong></td>
<td align="center">数字（比如阿拉伯数字、罗马数字等）</td>
</tr>
<tr>
<td align="center"><strong><code>C</code></strong></td>
<td align="center">其他字符</td>
</tr>
</tbody></table>
<p>例：</p>
<pre class="line-numbers language-java"><code class="language-java">String result <span class="token operator">=</span> 
  <span class="token string">",.!，，D_NAME。！；‘’”“《》**dfs  #$%^&amp;()-+1431221厉害123漢字どうかのjavaを決繁体"</span><span class="token punctuation">;</span>
result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"[\\pP\\pZ\\pS\\pC\\pM]"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//去掉标点符号、空格，换行、等所有特殊字符</span>

<span class="token comment" spellcheck="true">/*
输出：
DNAMEdfs1431221厉害123漢字どうかのjavaを決繁体
*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>以后字符串的对应字符处理就可以用这个简单可靠的方法了</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>那些年经历过的异常信息</title>
    <url>/2017/07/24/na-xie-nian-jing-li-de-yi-chang-xin-xi/</url>
    <content><![CDATA[<h2 id="java-lang-UnsupportedOperationException"><a href="#java-lang-UnsupportedOperationException" class="headerlink" title="java.lang.UnsupportedOperationException"></a>java.lang.UnsupportedOperationException</h2><p><em>不支持功能异常，常常发生在Arrays.asList()后再对List进行add、remove这些操作时</em></p>
<pre class="line-numbers language-java"><code class="language-java">File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"e:/123/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

List<span class="token operator">&lt;</span>File<span class="token operator">></span> files <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ListIterator<span class="token operator">&lt;</span>File<span class="token operator">></span> lit <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>lit<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//遍历该分类下的文件</span>
                File file <span class="token operator">=</span> lit<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//包含123</span>
                    lit<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment" spellcheck="true">//将该文件从list中移除</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>Arrays.asList() 返回<code>java.util.Arrays$ArrayList</code>， 而不是<code>ArrayList</code>。<br>Arrays$ArrayList和ArrayList都是继承AbstractList。<br>remove，add等 方法在AbstractList中是默认抛出 <code>UnsupportedOperationException</code>异常而且不作任何操作。<br><code>ArrayList</code> <em>重写<em>了这些方法来对list进行操作，但是<code>Arrays$ArrayList</code></em>没有重写</em> remove(int)，add(int)等方法，所以会抛出<code>UnsupportedOperationException</code>异常。</p>
</blockquote>
<p>解决方法:<br>在遍历List（由数组转换而来）需要add和remove时，转换成List时<code>不要用</code>Arrays.asList()方法</p>
<p>第一种：<code>Collections</code>的<code>addAll</code>静态方法</p>
<pre class="line-numbers language-java"><code class="language-java">File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"e:/123/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

List<span class="token operator">&lt;</span>File<span class="token operator">></span> files <span class="token operator">=</span> Lists<span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Collections<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>files<span class="token punctuation">,</span>file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ListIterator<span class="token operator">&lt;</span>File<span class="token operator">></span> lit <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>lit<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//遍历该分类下的文件</span>
                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二种：遍历数组，一个元素一个元素的add进List</p>
<pre class="line-numbers language-java"><code class="language-java">File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"e:/123/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

List<span class="token operator">&lt;</span>File<span class="token operator">></span> files <span class="token operator">=</span> Lists<span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span>File file <span class="token operator">:</span> file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    files<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>异常</tag>
      </tags>
  </entry>
  <entry>
    <title>浮点型计算中丢失精度问题</title>
    <url>/2017/07/23/ji-suan-zhong-diu-shi-jing-du-wen-ti/</url>
    <content><![CDATA[<h2 id="在进行浮点数计算时，用BigDecimal"><a href="#在进行浮点数计算时，用BigDecimal" class="headerlink" title="在进行浮点数计算时，用BigDecimal"></a>在进行浮点数计算时，用BigDecimal</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">test</span><span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">double</span> a <span class="token operator">=</span> <span class="token number">0.3</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> b <span class="token operator">=</span> <span class="token number">0.6</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> c <span class="token operator">=</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//输出0.8999999999999999</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>上面语句按道理说输出应该是0.9，但是实际输出为0.8999999999999999。在计算机内部，首先将double转换成二进制，再进行二进制的计算，最后把计算好的二进制结果转换成double。<br>在两次转换的过程中由于计算机表示的<code>位数有限</code>，而0.3和0.6表示成二进制都是<code>无限的</code>（尴尬），所以在转换成二进制的时候就已经改变了0.3和0.6的值，计算出来的结果当然是错的。<br><code>实际上，0.0到0.9的10个数中，只有0.0和0.5能精确表示。</code></p>
</blockquote>
<p>同理，下面的代码输出结果也丢失精度。</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">test</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">double</span> a <span class="token operator">=</span> <span class="token number">0.2</span> <span class="token operator">+</span> <span class="token number">0.4</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> b <span class="token operator">=</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出0.6000000000000001</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出0.8999999999999999</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>那么在java中如何避免这个问题呢？当然最好的方式是不用这种计算方式，但是如果必须用到的话，就只能用<code>BigDecimal</code>这个类。</p>
<hr>
<p>参考资料：<br><a href="http://justjavac.com/codepuzzle/2012/11/02/codepuzzle-float-from-surprised-to-ponder.html" target="_blank" rel="noopener">代码之谜（四）- 浮点数（从惊讶到思考）</a><br><a href="http://justjavac.com/codepuzzle/2012/11/11/codepuzzle-float-who-stole-your-accuracy.html" target="_blank" rel="noopener">代码之谜（五）- 浮点数（谁偷了你的精度？）</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>精度问题</tag>
      </tags>
  </entry>
  <entry>
    <title>Java遍历Map的几种方式</title>
    <url>/2017/07/19/java-bian-li-map-de-ji-chong-fang-shi/</url>
    <content><![CDATA[<h2 id="第一种-在for-each循环中使用entries来遍历"><a href="#第一种-在for-each循环中使用entries来遍历" class="headerlink" title="第一种 在for-each循环中使用entries来遍历"></a>第一种 在for-each循环中使用entries来遍历</h2><ul>
<li>最常见的且大多数情况下使用的方式，在<code>键</code>和<code>值</code>都需要的时候使用</li>
<li><code>但是，如果要在遍历中删除某个键值对，则不能使用该方法</code></li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Integer<span class="token operator">></span> map <span class="token operator">=</span> Maps<span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span><span class="token punctuation">(</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span>Integer<span class="token operator">></span> entry<span class="token operator">:</span>map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"键："</span> <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"，值："</span> <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>注意：for-each循环在<code>Java 5</code>中被引入所以该方法只能应用于java 5或更高的版本中。如果你遍历的是一个空的map对象，for-each循环将抛出<code>NullPointerException</code>，因此在遍历前你总是应该检查空引用。</p>
</blockquote>
<h2 id="第二种-在for-each循环中遍历keys或values"><a href="#第二种-在for-each循环中遍历keys或values" class="headerlink" title="第二种 在for-each循环中遍历keys或values"></a>第二种 在for-each循环中遍历keys或values</h2><ul>
<li>如果只需要map中的键或者值，你可以通过keySet或values来实现遍历，而不是用entrySet</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Integer<span class="token operator">></span> map <span class="token operator">=</span> Maps<span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">//遍历map中的键</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span>Integer key <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Key = "</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">//遍历map中的值</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span>Integer value <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Value = "</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>该方法比entrySet遍历在性能上稍好（快了10%），而且代码更加干净。</p>
</blockquote>
<h2 id="第三种-使用Iterator遍历"><a href="#第三种-使用Iterator遍历" class="headerlink" title="第三种 使用Iterator遍历"></a>第三种 使用Iterator遍历</h2><pre class="line-numbers language-java"><code class="language-java">Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Integer<span class="token operator">></span> map <span class="token operator">=</span> Maps<span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Iterator<span class="token operator">&lt;</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Integer<span class="token operator">>></span> entries <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span>entries<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Integer<span class="token operator">></span> entry <span class="token operator">=</span> entries<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Key = "</span> <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">", Value = "</span> <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//在这里面可以删除键值对</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>entries<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        entries<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>该种方式看起来冗余却有其优点所在。首先，在老版本java中这是惟一遍历map的方式。另一个好处是，你可以在遍历时调用<code>iterator.remove()</code>来<code>删除entries</code>，另两个方法则不能。根据javadoc的说明，如果在for-each遍历中尝试使用此方法，结果是不可预测的。</p>
<p>从性能方面看，该方法类同于for-each遍历（即方法二）的性能。</p>
</blockquote>
<h2 id="第四种-通过键找值遍历（效率低）"><a href="#第四种-通过键找值遍历（效率低）" class="headerlink" title="第四种 通过键找值遍历（效率低）"></a>第四种 通过键找值遍历（效率低）</h2><pre class="line-numbers language-java"><code class="language-java">Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Integer<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token keyword">for</span> <span class="token punctuation">(</span>Integer key <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  

    Integer value <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>  

    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Key = "</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">", Value = "</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>作为方法一的替代，这个代码看上去更加干净；但实际上它相当慢且无效率。因为从键取值是耗时的操作（与方法一相比，在不同的Map实现中该方法慢了20%~200%）。如果你安装了FindBugs，它会做出检查并警告你关于哪些是低效率的遍历。所以尽量避免使用。</p>
</blockquote>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果仅需要键(keys)或值(values)使用方法二。如果你使用的语言版本低于java 5，或是打算在遍历时删除entries，必须使用方法三。否则使用方法一(键值都要)。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>集合</tag>
        <tag>遍历</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL笔记</title>
    <url>/2017/07/18/mysql-bi-ji/</url>
    <content><![CDATA[<h2 id="一、常见数据库"><a href="#一、常见数据库" class="headerlink" title="一、常见数据库"></a>一、常见数据库</h2><p>Oracle：甲骨文（占有率最高）<br>DB2：IBM<br>SQL Server：微软<br>Sybase：赛尔斯<br>MySQL：甲骨文</p>
<h2 id="二、RDBMS（关系型数据库管理系统）"><a href="#二、RDBMS（关系型数据库管理系统）" class="headerlink" title="二、RDBMS（关系型数据库管理系统）"></a>二、RDBMS（关系型数据库管理系统）</h2><p><img src="http://47.106.179.244/mysql%E7%AC%94%E8%AE%B0/RDBMS.png" alt=""><br><img src="http://47.106.179.244/mysql%E7%AC%94%E8%AE%B0/DATABASE.png" alt=""><br>表结构：<br><img src="http://47.106.179.244/mysql%E7%AC%94%E8%AE%B0/%E8%A1%A8%E7%BB%93%E6%9E%84.png" alt=""></p>
<h2 id="三、SQL（结构化查询语句）"><a href="#三、SQL（结构化查询语句）" class="headerlink" title="三、SQL（结构化查询语句）"></a>三、SQL（结构化查询语句）</h2><p>SQL语句分类：</p>
<ol>
<li>DDL：数据库或表的结构操作 <code>（重点）</code></li>
<li>DML：对表的记录进行更新（增、删、改）<code>（重点）</code></li>
<li>DQL：对表的记录的查询<code>（重点、难点）</code></li>
<li>DCL：对用户的创建，及授权</li>
</ol>
<h2 id="四、DDL（数据库或表的结构操作）"><a href="#四、DDL（数据库或表的结构操作）" class="headerlink" title="四、DDL（数据库或表的结构操作）"></a>四、DDL（数据库或表的结构操作）</h2><p><strong>操作库：</strong></p>
<pre class="line-numbers language-sql"><code class="language-sql">查看所有数据库：<span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span>
切换（选择要操作的）数据库：<span class="token keyword">USE</span> 数据库名
创建数据库：<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 数据库名
删除数据库：<span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 数据库名
修改数据库编码：<span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> 数据库名 <span class="token keyword">CHARACTER SET</span> utf8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>操作表：</strong></p>
<pre class="line-numbers language-sql"><code class="language-sql">创建表：
     <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 表名（
          列名 列类型，
          列名 列类型，
          。。。
     ）；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-sql"><code class="language-sql">查看当前数据库中所有表：<span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span>
查询某一张表结构：<span class="token keyword">DESC</span> 表名
删除表：<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> 表名
修改表：前缀：<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-sql"><code class="language-sql">添加列：<span class="token keyword">add</span>（
          列名 列类型，
          列名 列类型，
          。。。
）；
修改列类型：<span class="token keyword">modify</span> 列名 列新的类型；
修改列名：change 原列名 新列名 列类型；
删除列：<span class="token keyword">drop</span> 列名；
修改表名称：<span class="token keyword">rename</span> <span class="token keyword">to</span> 新表名；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="五、数据类型（列类型）"><a href="#五、数据类型（列类型）" class="headerlink" title="五、数据类型（列类型）"></a>五、数据类型（列类型）</h2><p>在数据库中所有的字符串类型，<code>必须使用单引</code>，<code>不能使用双引！</code><br><code>日期类型也要使用单引！</code></p>
<blockquote>
<p>int：整型<br>double：浮点型，double（5，2）：表示最多5位，必须有两位小数<br>decimal：浮点型<br>char：固定长度字符串类型：char（255）最大255，数据长度不足指定长度，会补足到指定长度<br>varchar：可变长度字符串类型<br>text（clob）：字符串类型（mysql特有，sql server里面也有）<br>blod：字节类型，二进制<br>date：日期类型，格式为：yyyy-MM-dd<br>time：时间类型，格式为：hh：mm：ss<br>timestamp：时间戳类型</p>
</blockquote>
<h2 id="六、DML（对表的记录更新（增、删、改））"><a href="#六、DML（对表的记录更新（增、删、改））" class="headerlink" title="六、DML（对表的记录更新（增、删、改））"></a>六、DML（对表的记录更新（增、删、改））</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名（列名<span class="token number">1</span>，列名<span class="token number">2</span>，。。。）<span class="token keyword">VALUES</span>（列值<span class="token number">1</span>，列值<span class="token number">2</span>，。。。）；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>在表名后给出要插入的列名，其他没有指定的列等同与插入null值。<code>所以插入记录总是插入一行，不可能是半行</code>。<br>在VALUES后给出列值，值的顺序和个数必须与前面指定的列<code>对应</code><br>如果表中有自增的主键，那么可以用这种方法不指定主键列，也可以用null和0代替，MySQL会自己处理</p>
</blockquote>
<pre class="line-numbers language-sql"><code class="language-sql">INTERT <span class="token keyword">INTO</span> 表名 <span class="token keyword">VALUES</span><span class="token punctuation">(</span>列值<span class="token number">1</span><span class="token punctuation">,</span> 列值<span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>没有给出要插入的列，那么表示插入所有列。<br>值的个数必须是该表列的个数。<br>值的顺序，必须与表创建时给出的列的顺序相同。</p>
</blockquote>
<h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">UPDATE</span> 表名 <span class="token keyword">SET</span> 列名<span class="token number">1</span><span class="token operator">=</span>列值<span class="token number">1</span><span class="token punctuation">,</span> 列名<span class="token number">2</span><span class="token operator">=</span>列值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">[</span><span class="token keyword">WHERE</span> 条件<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>条件(条件可选的)：<br>  条件必须是一个boolean类型的值或表达式：<em>UPDATE t_person SET gender=’男’, age=age+1 WHERE sid=’1’;</em><br>  运算符：<em>=、!=、&lt;&gt;、&gt;、&lt;、&gt;=、&lt;=、BETWEEN…AND、IN(…)、IS NULL、NOT、OR、AND</em></p>
</blockquote>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">WHERE</span> age <span class="token operator">>=</span> <span class="token number">18</span> <span class="token operator">AND</span> age <span class="token operator">&lt;=</span> <span class="token number">80</span>
等价于<span class="token keyword">WHERE</span> age <span class="token operator">BETWEEN</span> <span class="token number">18</span> <span class="token operator">AND</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">WHERE</span> name<span class="token operator">=</span><span class="token string">'zhangSan'</span> <span class="token operator">OR</span> name<span class="token operator">=</span><span class="token string">'liSi'</span>
等价于<span class="token keyword">WHERE</span> name <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">'zhangSan'</span><span class="token punctuation">,</span> <span class="token string">'liSi'</span><span class="token punctuation">)</span>
<span class="token keyword">WHERE</span> age <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> 不能使用等号
<span class="token keyword">WHERE</span> age <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> 表名 <span class="token punctuation">[</span><span class="token keyword">WHERE</span> 条件<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> 表名：<span class="token keyword">TRUNCATE</span>是DDL语句，它是先删除<span class="token keyword">drop</span>该表，再<span class="token keyword">create</span>该表。而且无法回滚！！！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="七、DCL（对用户的创建，及授权）"><a href="#七、DCL（对用户的创建，及授权）" class="headerlink" title="七、DCL（对用户的创建，及授权）"></a>七、DCL（对用户的创建，及授权）</h2><ul>
<li>一个项目创建一个用户！一个项目对应的数据库只有一个！</li>
<li>这个用户只能对这个数据库有权限，其他数据库你就操作不了了！</li>
</ul>
<h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> 用户名<span class="token variable">@IP</span>地址 IDENTIFIED <span class="token keyword">BY</span> <span class="token string">'密码'</span><span class="token punctuation">;</span>
    <span class="token operator">></span> 用户只能在指定的IP地址上登录
<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> 用户名@'<span class="token operator">%</span><span class="token string">' IDENTIFIED BY '</span>密码'<span class="token punctuation">;</span>
    <span class="token operator">></span> 用户可以在任意IP地址上登录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="给用户授权"><a href="#给用户授权" class="headerlink" title="给用户授权"></a>给用户授权</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">GRANT</span> 权限<span class="token number">1</span><span class="token punctuation">,</span> … <span class="token punctuation">,</span> 权限n <span class="token keyword">ON</span> 数据库<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> 用户名<span class="token variable">@IP</span>地址
    <span class="token operator">></span> 权限、用户、数据库
    <span class="token operator">></span> 给用户分派在指定的数据库上的指定的权限
    <span class="token operator">></span> 
    <span class="token operator">></span> 例如；<span class="token keyword">GRANT</span><span class="token punctuation">,</span><span class="token keyword">CREATE</span><span class="token punctuation">,</span><span class="token keyword">ALTER</span><span class="token punctuation">,</span><span class="token keyword">DROP</span><span class="token punctuation">,</span><span class="token keyword">INSERT</span><span class="token punctuation">,</span><span class="token keyword">UPDATE</span><span class="token punctuation">,</span><span class="token keyword">DELETE</span><span class="token punctuation">,</span><span class="token keyword">SELECT</span> <span class="token keyword">ON</span> mydb1<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> user1<span class="token variable">@localhost</span><span class="token punctuation">;</span>
    <span class="token operator">></span>     给user1用户分派在mydb1数据库上的<span class="token keyword">create</span>、<span class="token keyword">alter</span>、<span class="token keyword">drop</span>、<span class="token keyword">insert</span>、<span class="token keyword">update</span>、<span class="token keyword">delete</span>、<span class="token keyword">select</span>权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-sql"><code class="language-sql">  <span class="token operator">*</span> <span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">ON</span> 数据库<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> 用户名<span class="token variable">@IP</span>地址<span class="token punctuation">;</span>
    <span class="token operator">></span> 给用户分派指定数据库上的所有权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="撤销授权"><a href="#撤销授权" class="headerlink" title="撤销授权"></a>撤销授权</h3><pre class="line-numbers language-sql"><code class="language-sql">  <span class="token operator">*</span> <span class="token keyword">REVOKE</span> 权限<span class="token number">1</span><span class="token punctuation">,</span> … <span class="token punctuation">,</span> 权限n <span class="token keyword">ON</span> 数据库<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> 用户名<span class="token variable">@IP</span>地址<span class="token punctuation">;</span>
    <span class="token operator">></span> 撤消指定用户在指定数据库上的指定权限
    <span class="token operator">></span> 
    <span class="token operator">></span> 例如；<span class="token keyword">REVOKE</span> <span class="token keyword">CREATE</span><span class="token punctuation">,</span><span class="token keyword">ALTER</span><span class="token punctuation">,</span><span class="token keyword">DROP</span> <span class="token keyword">ON</span> mydb1<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> user1<span class="token variable">@localhost</span><span class="token punctuation">;</span>
    <span class="token operator">></span>    撤消user1用户在mydb1数据库上的<span class="token keyword">create</span>、<span class="token keyword">alter</span>、<span class="token keyword">drop</span>权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="查看权限"><a href="#查看权限" class="headerlink" title="查看权限"></a>查看权限</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">SHOW</span> GRANTS <span class="token keyword">FOR</span> 用户名<span class="token variable">@IP</span>地址
    <span class="token operator">></span> 查看指定用户的权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">USER</span> 用户名<span class="token variable">@IP</span>地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="八、DQL数据库查询语言"><a href="#八、DQL数据库查询语言" class="headerlink" title="八、DQL数据库查询语言"></a>八、DQL数据库查询语言</h2><h3 id="一、-基本查询"><a href="#一、-基本查询" class="headerlink" title="一、 基本查询"></a>一、 基本查询</h3><h4 id="1-字段-列-控制"><a href="#1-字段-列-控制" class="headerlink" title="1. 字段(列)控制"></a>1. 字段(列)控制</h4><p><em>1) 查询所有列</em></p>
<blockquote>
<p><code>SELECT * FROM 表名;</code><br> <code>SELECT * FROM emp;</code><br>  –&gt;其中“ <code>*</code> ”表示查询所有列</p>
</blockquote>
<p><em>2) 查询指定列</em></p>
<blockquote>
<p><code>SELECT 列1 [, 列2, ... 列N] FROM 表名;</code><br> <code>SELECT empno, ename, sal, comm FROM 表名;</code></p>
</blockquote>
<p><em>3) 完全重复的记录只一次</em></p>
<blockquote>
<p>当查询结果中的多行记录一模一样时，只显示一行。一般查询所有列时很少会有这种情况，但只查询一列（或几列）时，这种可能就大了！<br> <code>SELECT DISTINCT * | 列1 [, 列2, ... 列N] FROM 表名;</code><br> <code>SELECT DISTINCT sal FROM emp;</code><br> –&gt;保查询员工表的工资，如果存在相同的工资只显示一次！</p>
</blockquote>
<p><em>4) 列运算</em></p>
<blockquote>
<ol>
<li>数量类型的列可以做加、减、乘、除运算<br><code>SELECT sal*1.5 FROM emp;</code><br><code>SELECT sal+comm FROM emp;</code></li>
<li>字符串类型可以做连续运算<br><code>SELECT CONCAT('$', sal) FROM emp;</code></li>
</ol>
</blockquote>
<blockquote>
<ol start="3">
<li>转换NULL值<br>有时需要把<code>NULL</code>转换成其它值，例如<em>comm+1000</em>时，如果<code>comm</code>列存在<code>NULL</code>值，那么<em>NULL+1000</em>还是<code>NULL</code>，而我们这时希望把<code>NULL</code>当前<code>0</code>来运算。<br><code>SELECT IFNULL(comm, 0)+1000 FROM emp;</code><br>–&gt;<em>IFNULL(comm, 0)</em>：如果<em>comm</em>中存在<em>NULL</em>值，那么当成<em>0</em>来运算。</li>
</ol>
</blockquote>
<blockquote>
<ol start="4">
<li>给列起别名<br>你也许已经注意到了，当使用列运算后，查询出的结果集中的列名称很不好看，这时我们需要给列名起个别名，这样在结果集中列名就显示别名了<br><code>SELECT IFNULL(comm, 0)+1000 AS '奖金' FROM emp;</code><br>–&gt; 其中AS可以省略</li>
</ol>
</blockquote>
<h4 id="2-条件控制"><a href="#2-条件控制" class="headerlink" title="2. 条件控制"></a>2. 条件控制</h4><p>1.条件查询</p>
<blockquote>
<p>与前面介绍的UPDATE和DELETE语句一样，SELECT语句也可以使用WHERE子句来控制记录。<br><code>SELECT empno,ename,sal,comm FROM emp WHERE sal &gt; 10000 AND comm IS NOT NULL;</code><br><code>SELECT empno,ename,sal FROM emp WHERE sal BETWEEN 20000 AND 30000;</code><br><code>SELECT empno,ename,job FROM emp WHERE job IN ('经理', '董事长');</code></p>
</blockquote>
<p>2.模糊查询</p>
<blockquote>
<p>当你想查询姓张，并且姓名一共两个字的员工时，这时就可以使用模糊查询<br><code>SELECT * FROM emp WHERE ename LIKE '张_';</code><br>  –&gt; 模糊查询需要使用运算符：LIKE，其中<code>_</code>匹配一个任意字符，注意，只匹配一个字符而不是多个。<br>  –&gt; 上面语句查询的是姓张，名字由两个字组成的员工。<br><code>SELECT * FROM emp WHERE ename LIKE '___';</code><br>  –&gt;姓名由3个字组成的员工</p>
</blockquote>
<blockquote>
<p>如果我们想查询姓张，名字几个字可以的员工时就要使用“%”了。<br><code>SELECT * FROM emp WHERE ename LIKE '张%';</code><br>–&gt; 其中<em>%</em>匹配<em>0~N*个任意字符，所以上面语句查询的是姓张的所有员工。<br><code>SELECT * FROM emp WHERE ename LIKE '%阿%';</code><br>–&gt; 千万不要认为上面语句是在查询姓名中间带有阿字的员工，因为</em>%<em>匹配</em>0~N<em>个字符，所以姓名以阿开头和结尾的员工也都会查询到。<br><code>SELECT * FROM emp WHERE ename LIKE '%';</code><br>–&gt; 这个条件等同与不存在，但如果姓名为</em>NULL*的查询不出来！</p>
</blockquote>
<h3 id="二、排序"><a href="#二、排序" class="headerlink" title="二、排序"></a>二、排序</h3><ol>
<li>升序<br><code>SELECT * FROM WHERE emp ORDER BY sal ASC;</code><blockquote>
<p>–&gt; 按sal排序，升序！<br>–&gt; 其中ASC是可以省略的</p>
</blockquote>
</li>
<li>降序<br><code>SELECT * FROM WHERE emp ORDER BY comm DESC;</code><blockquote>
<p>–&gt; 按comm排序，降序！<br>–&gt; 其中DESC不能省略</p>
</blockquote>
</li>
<li>使用多列作为排序条件<br><code>SELECT * FROM WHERE emp ORDER BY sal ASC, comm DESC;</code><blockquote>
<p>–&gt; 使用sal升序排，如果sal相同时，使用comm的降序排</p>
</blockquote>
</li>
</ol>
<h3 id="三、聚合函数"><a href="#三、聚合函数" class="headerlink" title="三、聚合函数"></a>三、聚合函数</h3><blockquote>
<p> <em>聚合函数用来做某列的纵向运算。</em></p>
</blockquote>
<ol>
<li>COUNT<br><code>SELECT COUNT(*) FROM emp;</code><br>–&gt; 计算emp表中所有列都不为NULL的记录的行数<br><code>SELECT COUNT(comm) FROM emp;</code><br>–&gt; 云计算emp表中comm列不为NULL的记录的行数</li>
<li>MAX<br><code>SELECT MAX(sal) FROM emp;</code><br>–&gt; 查询最高工资</li>
<li>MIN<br><code>SELECT MIN(sal) FROM emp;</code><br>–&gt; 查询最低工资</li>
<li>SUM<br><code>SELECT SUM(sal) FROM emp;</code><br>–&gt; 查询工资合</li>
<li>AVG<br><code>SELECT AVG(sal) FROM emp;</code><br>–&gt; 查询平均工资</li>
</ol>
<h3 id="四、分组查询"><a href="#四、分组查询" class="headerlink" title="四、分组查询"></a>四、分组查询</h3><blockquote>
<p>分组查询是把记录使用某一列进行分组，然后查询组信息。<br>  例如：查看所有部门的记录数。<br>  <code>SELECT deptno, COUNT(*) FROM emp GROUP BY deptno;</code><br>  –&gt; 使用deptno分组，查询部门编号和每个部门的记录数<br>  <code>SELECT job, MAX(SAL) FROM emp GROUP BY job;</code><br>  –&gt; 使用job分组，查询每种工作的最高工资</p>
</blockquote>
<blockquote>
<p>组条件<br>  以部门分组，查询每组记录数。条件为记录数大于3<br>  <code>SELECT deptno, COUNT(*) FROM emp GROUP BY deptno HAVING COUNT(*) &gt; 3;</code></p>
</blockquote>
<h3 id="五、limit子句-方言"><a href="#五、limit子句-方言" class="headerlink" title="五、limit子句(方言)"></a>五、limit子句(方言)</h3><p>  LIMIT用来限定查询结果的起始行，以及总行数。</p>
<blockquote>
<p>例如：查询起始行为第5行，一共查询3行记录<br>  <code>SELECT * FROM emp LIMIT 4, 3;</code><br>  –&gt; 其中4表示从第5行开始，其中3表示一共查询3行。即第5、6、7行记录。</p>
</blockquote>
<pre class="line-numbers language-sql"><code class="language-sql">  <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">;</span>

  <span class="token number">1</span><span class="token punctuation">.</span> 一页的记录数：<span class="token number">10</span>行
  <span class="token number">2</span><span class="token punctuation">.</span> 查询第<span class="token number">3</span>页

  <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">limit</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">;</span>

  <span class="token punctuation">(</span>当前页<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> 每页记录数
  <span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span>

  <span class="token punctuation">(</span><span class="token number">17</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="九、备份恢复"><a href="#九、备份恢复" class="headerlink" title="九、备份恢复"></a>九、备份恢复</h2><p>数据库 –&gt; sql语句<br>sql语句 –&gt; 数据库</p>
<ol>
<li><p>数据库导出SQL脚本(备份数据库内容，并不是备份数据库！)</p>
<blockquote>
<p><code>mysqldump –u用户名 –p密码 数据库名&gt;生成的脚本文件路径</code><br>例如：<br><code>mysqldump -uroot -p123 mydb1&gt;C:\mydb1.sql</code>(与mysql.exe和mysqld.exe一样, 都在bin目录下)<br><em>注意：</em>不要打分号，不要登录mysql，直接在cmd下运行<br><em>注意：</em>生成的脚本文件中不包含create database语句</p>
</blockquote>
</li>
<li><p>执行SQL脚本<br>第一种方式</p>
<blockquote>
<p><code>mysql -u用户名 -p密码 数据库&lt;脚本文件路径</code><br>例如：<br>先删除mydb1库，再重新创建mydb1库<br><code>mysql -uroot -p123 mydb1&lt;C:\mydb1.sql</code><br><em>注意：</em>不要打分号，不要登录mysql，直接在cmd下运行</p>
</blockquote>
<p>第二种方式</p>
<blockquote>
<p>登录mysql<br>source SQL脚本路径<br>例如：<br>先删除mydb1库，再重新创建mydb1库<br>切换到mydb1库<br><code>source c:\mydb1.sql</code></p>
</blockquote>
</li>
</ol>
<h2 id="十、主键约束（唯一标识）"><a href="#十、主键约束（唯一标识）" class="headerlink" title="十、主键约束（唯一标识）"></a>十、主键约束（唯一标识）</h2><p>  <code>非空</code><br>  <code>唯一</code><br>  <code>被引用</code>（学习外键时）</p>
<p>  <strong>当表的某一列被指定为主键后，该列就不能为空，不能有重复值出现。</strong><br><em>创建表时指定主键的两种方式：</em><br>1.</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> stu<span class="token punctuation">(</span>
sid        CHAR<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
sname    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
age        <span class="token keyword">INT</span><span class="token punctuation">,</span>
gender    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
指定sid列为主键列，即为sid列添加主键约束<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>2.</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> stu<span class="token punctuation">(</span>
sid        CHAR<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
sname    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
age        <span class="token keyword">INT</span><span class="token punctuation">,</span>
gender    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>sid<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
指定sid列为主键列，即为sid列添加主键约束<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>  <em>修改表时指定主键：</em><br>  <code>ALTER TABLE stu ADD PRIMARY KEY(sid);</code><br>  <em>删除主键：</em><br>  <code>ALTER TABLE stu DROP PRIMARY KEY;</code></p>
<h2 id="十一、主键自增长"><a href="#十一、主键自增长" class="headerlink" title="十一、主键自增长"></a>十一、主键自增长</h2><ul>
<li><p>因为主键列的特性是：<code>必须唯一</code>、<code>不能为空</code>，所以我们通常会指定主键类为整型，然后设置其自动增长，这样可以保证在插入数据时主键列的唯一和非空特性。</p>
</li>
<li><p><strong>创建表时指定主键自增长</strong></p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> stu<span class="token punctuation">(</span>
    sid <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    sname    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    age        <span class="token keyword">INT</span><span class="token punctuation">,</span>
    gender    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><strong>修改表时设置主键自增长：</strong><br><code>ALTER TABLE stu CHANGE sid sid INT AUTO_INCREMENT;</code></p>
</li>
<li><p><strong>修改表时删除主键自增长：</strong><br><code>ALTER TABLE stu CHANGE sid sid INT;</code></p>
</li>
<li><p><strong>测试主键自增长：</strong></p>
<blockquote>
<p>INSERT INTO stu VALUES(NULL, ‘zhangSan’,23,’male’);<br>INSERT INTO stu(sname,age,gender) VALUES(‘zhangSan’,23,’male’);</p>
</blockquote>
</li>
</ul>
<h2 id="十二、非空约束与唯一约束"><a href="#十二、非空约束与唯一约束" class="headerlink" title="十二、非空约束与唯一约束"></a>十二、非空约束与唯一约束</h2><ol>
<li>非空约束<ul>
<li>因为某些列不能设置为NULL值，所以可以对列添加非空约束。</li>
<li>例如：</li>
</ul>
</li>
</ol>
<pre class="line-numbers language-sql"><code class="language-sql">  <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> stu<span class="token punctuation">(</span>
        sid <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
        sname    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
        age        <span class="token keyword">INT</span><span class="token punctuation">,</span>
        gender    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>对sname列设置了非空约束</p>
</blockquote>
<ol start="2">
<li>唯一约束<ul>
<li>车库某些列不能设置重复的值，所以可以对列添加唯一约束。</li>
<li>例如：</li>
</ul>
</li>
</ol>
<pre class="line-numbers language-sql"><code class="language-sql">  <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> stu<span class="token punctuation">(</span>
        sid <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
        sname    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span>
        age        <span class="token keyword">INT</span><span class="token punctuation">,</span>
        gender    <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>对sname列设置了唯一约束</p>
</blockquote>
<h2 id="十三、概述模型、对象模型、关系模型"><a href="#十三、概述模型、对象模型、关系模型" class="headerlink" title="十三、概述模型、对象模型、关系模型"></a>十三、概述模型、对象模型、关系模型</h2><p><em>对象模型：</em>可以双向关联，而且引用的是对象，而不是一个主键！<br><em>关系模型：</em>只能多方引用一方，而且引用的只是主键，而不是一整行记录。</p>
<p><code>对象模型：**在java中是domain！！！例如：User、Student</code></p>
<blockquote>
<p>is a<br>has a(关联)<br>1对1<br>1对多<br>多对多<br>use a</p>
</blockquote>
<p><code>关系模型：在数据库中表！！！</code></p>
<blockquote>
<p>当我们要完成一个软件系统时，需要把系统中的实体抽取出来，形成概念模型。<br>  例如部门、员工都是系统中的实体。概念模型中的实体最终会成为Java中的类、数据库中表。<br>  实体之间还存在着关系，关系有三种：</p>
</blockquote>
<ul>
<li>1对多：例如每个员工都从属一个部门，而一个部门可以有多个员工，其中员工是多方，而部门是一方。</li>
<li>1对1：例如老公和老婆就是一对一的关系，一个老公只能有一个老婆，而一个老婆只能有一个老公。</li>
<li>多对多：老师与学生的关系就是多对多，一个老师可以有多个学生，一个学生可以有多个老师。</li>
</ul>
<p><code>概念模型：在Java中成为实体类（javaBean）</code></p>
<blockquote>
<p>  类就使用成员变量来完成关系，一般都是双向关联！<br>  多对一双向中关联，即员工关联部门，部门也关联员工</p>
</blockquote>
<pre class="line-numbers language-sql"><code class="language-sql">class Employee {<span class="token comment" spellcheck="true">//多方关联一方</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
   private Department department<span class="token punctuation">;</span>
}
class Department {<span class="token comment" spellcheck="true">//一方关联多方</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
   private List<span class="token operator">&lt;</span>Employee<span class="token operator">></span> employees<span class="token punctuation">;</span>
}<span class="token punctuation">`</span><span class="token punctuation">`</span><span class="token punctuation">`</span>

<span class="token punctuation">`</span><span class="token punctuation">`</span><span class="token punctuation">`</span>sql
  class Husband {
     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
     private Wife wife<span class="token punctuation">;</span>
  }
  class Wife {
     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
     private Husband
  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-sql"><code class="language-sql">  class Student {
     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
     private List<span class="token operator">&lt;</span>Teacher<span class="token operator">></span> teachers
  }
  class Teacher {
     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
     private List<span class="token operator">&lt;</span>Student<span class="token operator">></span> students<span class="token punctuation">;</span>
  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="十四、外键约束"><a href="#十四、外键约束" class="headerlink" title="十四、外键约束"></a>十四、外键约束</h2><ul>
<li>外键必须是<code>另一表的主键的值</code>(外键要引用主键！)<ul>
<li><strong>外键可以重复</strong></li>
<li><strong>外键可以为空</strong></li>
<li><strong>一张表中可以有多个外键！</strong></li>
</ul>
</li>
</ul>
<p>  <em>概念模型在数据库中成为表</em><br>  数据库表中的多对一关系，只需要在多方使用一个独立的列来引用1方的主键即可</p>
<pre class="line-numbers language-sql"><code class="language-sql">  <span class="token comment" spellcheck="true">/*员工表*/</span>
  <span class="token keyword">create</span> talbe emp <span class="token punctuation">(</span>
    empno <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">/*员工编号*/</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    deptno <span class="token keyword">int</span><span class="token comment" spellcheck="true">/*所属部门的编号*/</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/*部门表*/</span>
  <span class="token keyword">create</span> <span class="token keyword">table</span> dept <span class="token punctuation">(</span>
    deptno <span class="token keyword">int</span>  <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">/*部门编号*/</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>emp表中的deptno列的值表示当前员工所从属的部门编号。也就是说emp.deptno必须在dept表中是真实存在！<br>  但是我们必须要去对它进行约束，不然可能会出现员工所属的部门编号是不存在的。这种约束就是外键约束。<br>  我们需要给emp.deptno添加外键约束，约束它的值必须在dept.deptno中存在。外键必须是另一个表的主键！<br>语法：<code>CONSTRAINT 约束名称 FOREIGN KEY(外键列名) REFERENCES 关联表(关联表的主键)</code></p>
<ul>
<li>创建表时指定外键约束</li>
</ul>
</blockquote>
<pre class="line-numbers language-sql"><code class="language-sql">  <span class="token keyword">create</span> talbe emp <span class="token punctuation">(</span>
    empno <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    deptno <span class="token keyword">int</span><span class="token punctuation">,</span>
    <span class="token keyword">CONSTRAINT</span> fk_emp <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>mgr<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> emp<span class="token punctuation">(</span>empno<span class="token punctuation">)</span> 
  <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<ul>
<li>修改表时添加外键约束</li>
</ul>
</blockquote>
<pre class="line-numbers language-sql"><code class="language-sql">  ALERT <span class="token keyword">TABLE</span> emp
  <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> fk_emp_deptno <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>deptno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> dept<span class="token punctuation">(</span>deptno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<ul>
<li>修改表时删除外键约束</li>
</ul>
</blockquote>
<pre class="line-numbers language-sql"><code class="language-sql">  <span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> emp
  <span class="token keyword">DROP</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> fk_emp_deptno<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*约束名称*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="十五、数据库关系"><a href="#十五、数据库关系" class="headerlink" title="十五、数据库关系"></a>十五、数据库关系</h2><p><em>1.一对一关系</em><br>在表中建立一对一关系比较特殊，需要让其中一张表的主键，<code>即是主键又是外键</code>。</p>
<pre class="line-numbers language-sql"><code class="language-sql">  <span class="token keyword">create</span> <span class="token keyword">table</span> husband<span class="token punctuation">(</span>
    hid <span class="token keyword">int</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">create</span> <span class="token keyword">table</span> wife<span class="token punctuation">(</span>
    wid <span class="token keyword">int</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> fk_wife_wid <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>wid<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> husband<span class="token punctuation">(</span>hid<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>其中wife表的wid即是主键，又是相对husband表的外键！<br>  husband.hid是主键，不能重复！<br>  wife.wid是主键，不能重复，又是外键，必须来自husband.hid。<br>  所以如果在wife表中有一条记录的wid为1，那么wife表中的其他记录的wid就不能再是1了，因为它是主键。<br>  同时在husband.hid中必须存在1这个值，因为wid是外键。这就完成了一对一关系。<br>  <code>*从表的主键即是外键！</code></p>
</blockquote>
<p><em>2.多对多关系</em><br>在表中建立多对多关系需要使用中间表，即需要三张表，在中间表中使用两个外键，分别引用其他两个表的主键。</p>
<pre class="line-numbers language-sql"><code class="language-sql">  <span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>
    sid <span class="token keyword">int</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">create</span> <span class="token keyword">table</span> teacher<span class="token punctuation">(</span>
    tid <span class="token keyword">int</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-sql"><code class="language-sql">  <span class="token keyword">create</span> <span class="token keyword">table</span> stu_tea<span class="token punctuation">(</span>
    sid <span class="token keyword">int</span><span class="token punctuation">,</span>
    tid <span class="token keyword">int</span><span class="token punctuation">,</span>
    <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> fk_stu_tea_sid <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>sid<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> student<span class="token punctuation">(</span>sid<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> fk_stu_tea_tid <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>tid<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> teacher<span class="token punctuation">(</span>tid<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>这时在stu_tea这个中间表中的每条记录都是来说明student和teacher表的关系<br>例如在stu_tea表中的记录：sid为1001，tid为2001，这说明编号为1001的学生有一个编号为2001的老师</p>
</blockquote>
<pre class="line-numbers language-sql"><code class="language-sql">  sid    tid
  <span class="token number">101</span>    <span class="token number">201</span> <span class="token comment" spellcheck="true">/*编号为101的学生有一个编号为201的老师*/</span>
  <span class="token number">101</span>    <span class="token number">202</span> <span class="token comment" spellcheck="true">/*编号为101的学生有一个编号为202的老师*/</span>
  <span class="token number">101</span>    <span class="token number">203</span> <span class="token comment" spellcheck="true">/*编号为101的学生有一个编号为203的老师*/</span>
  <span class="token number">102</span>    <span class="token number">201</span> <span class="token comment" spellcheck="true">/*编号为102的学生有一个编号为201的老师*/</span>
  <span class="token number">102</span>    <span class="token number">204</span> <span class="token comment" spellcheck="true">/*编号为102的学生有一个编号为204的老师*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="十六、多表查询"><a href="#十六、多表查询" class="headerlink" title="十六、多表查询"></a>十六、多表查询</h2><p>分类：</p>
<ul>
<li>合并结果集(了解)</li>
<li>连接查询</li>
<li>子查询</li>
</ul>
<p><em>1. 合并结果集</em></p>
<ul>
<li>要求被合并的表中，列的<code>类型</code>和<code>列数</code>相同</li>
<li>UNION：去除重复行</li>
<li>UNION ALL：不去除重复行<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token number">cd</span>
<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token number">ab</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p><em>2. 连接查询</em></p>
<ol>
<li><strong>分类</strong><ul>
<li>内连接</li>
<li>外连接<ul>
<li>左外连接</li>
<li>右外连接</li>
<li>全外连接(MySQL不支持)</li>
</ul>
</li>
<li>自然连接（属于一种简化方式）</li>
</ul>
</li>
<li><strong>内连接</strong><ul>
<li>方言：<code>SELECT * FROM 表1 别名1, 表2 别名2 WHERE 别名1.xx=别名2.xx</code></li>
<li>标准：<code>SELECT * FROM 表1 别名1 INNER JOIN 表2 别名2 ON 别名1.xx=别名2.xx</code></li>
<li>自然：<code>SELECT * FROM 表1 别名1 NATURAL JOIN 表2 别名2</code></li>
<li><em>内连接查询出的所有记录都满足条件</em>。</li>
</ul>
</li>
<li><strong>外连接</strong><ul>
<li>左外：<code>SELECT * FROM 表1 别名1 LEFT OUTER JOIN 表2 别名2 ON 别名1.xx=别名2.xx</code><blockquote>
<p>左表记录无论是否满足条件都会查询出来，而右表只有满足条件才能出来。左表中不满足条件的记录，右表部分都为NULL</p>
</blockquote>
</li>
<li>左外自然：<code>SELECT * FROM 表1 别名1 NATURAL LEFT OUTER JOIN 表2 别名2 ON 别名1.xx=别名2.xx</code></li>
<li>右外：<code>SELECT * FROM 表1 别名1 RIGHT OUTER JOIN 表2 别名2 ON 别名1.xx=别名2.xx</code><blockquote>
<p>右表记录无论是否满足条件都会查询出来，而左表只有满足条件才能出来。右表不满足条件的记录，其左表部分都为NULL</p>
</blockquote>
</li>
<li>右外自然：<code>SELECT * FROM 表1 别名1 NATURAL RIGHT OUTER JOIN 表2 别名2 ON 别名1.xx=别名2.xx</code></li>
<li>全链接：把left或者right改为full，但是<code>mysql不支持</code>，可以使用<code>UNION</code>来完成全链接</li>
</ul>
</li>
</ol>
<p><em>3. 子查询</em><br>　　：查询中有查询（<code>查看select关键字的个数！</code>）</p>
<ol>
<li><p>出现的位置：</p>
<ul>
<li>where后作为条件存在</li>
<li>from后作为表存在(多行多列)</li>
</ul>
</li>
<li><p>条件</p>
<ul>
<li>(***)单行单列：<code>SELECT * FROM 表1 别名1 WHERE 列1 [=、&gt;、&lt;、&gt;=、&lt;=、!=] (SELECT 列 FROM 表2 别名2 WHERE 条件)</code></li>
<li>(**)多行单列：<code>SELECT * FROM 表1 别名1 WHERE 列1 [IN, ALL, ANY] (SELECT 列 FROM 表2 别名2 WHERE 条件)</code></li>
<li>(*)单行多列：<code>SELECT * FROM 表1 别名1 WHERE (列1,列2) IN (SELECT 列1, 列2 FROM 表2 别名2 WHERE 条件)</code></li>
<li>(***)多行多列：<code>SELECT * FROM 表1 别名1 , (SELECT ....) 别名2 WHERE 条件</code></li>
</ul>
</li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>那些年经历过的编码警告</title>
    <url>/2017/07/17/dai-ma-jing-gao/</url>
    <content><![CDATA[<h3 id="try-catch中catch块臃肿"><a href="#try-catch中catch块臃肿" class="headerlink" title="try catch中catch块臃肿"></a>try catch中catch块臃肿</h3><p><strong>catch块臃肿</strong><br><img src="http://47.106.179.244/%E4%BB%A3%E7%A0%81%E8%AD%A6%E5%91%8A/catch%E5%9D%97%E8%87%83%E8%82%BF1.jpg" alt="catch块臃肿1"><br><img src="http://47.106.179.244/%E4%BB%A3%E7%A0%81%E8%AD%A6%E5%91%8A/catch%E5%9D%97%E8%87%83%E8%82%BF2.jpg" alt="catch块臃肿2"></p>
<blockquote>
<p>虽然不会报错，但是会有警告。</p>
</blockquote>
<p>正确的书写方式如下：</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">try</span><span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//...</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> ClassNotFoundException e<span class="token punctuation">)</span><span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>可以看到，通过 <code>|</code> 运算符号折叠成一个判断语句，这个符号有”或”的意思，在这里理解非常合适。</p>
</blockquote>
<p>应该是java意识到了catch语句的臃肿，所以在JDK中开始建议这种模式来捕获异常。</p>
<h3 id="集合泛型检查警告"><a href="#集合泛型检查警告" class="headerlink" title="集合泛型检查警告"></a>集合泛型检查警告</h3><p><img src="http://47.106.179.244/%E4%BB%A3%E7%A0%81%E8%AD%A6%E5%91%8A/%E9%9B%86%E5%90%88%E6%B3%9B%E5%9E%8B%E6%A3%80%E6%9F%A5%E8%AD%A6%E5%91%8A.png" alt="集合泛型检查警告"></p>
<blockquote>
<p>该警告就是集合在创建是没有用泛型指定存储的对象类型</p>
</blockquote>
<p><strong>解决方式：</strong></p>
<ol>
<li>为集合指定泛型<pre class="line-numbers language-java"><code class="language-java"> List<span class="token operator">&lt;</span>String<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>利用Commons工具包生成集合<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>collect<span class="token punctuation">.</span>Lists<span class="token punctuation">;</span>
 List<span class="token operator">&lt;</span>String<span class="token operator">></span> list <span class="token operator">=</span> Lists<span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ol>
<blockquote>
<p>其他集合类型如：<code>Map</code>、<code>Set</code>类似</p>
</blockquote>
<h3 id="一些清晰易懂的警告"><a href="#一些清晰易懂的警告" class="headerlink" title="一些清晰易懂的警告"></a>一些清晰易懂的警告</h3><h4 id="1、空指针警告"><a href="#1、空指针警告" class="headerlink" title="1、空指针警告"></a>1、空指针警告</h4><p><img src="http://47.106.179.244/%E4%BB%A3%E7%A0%81%E8%AD%A6%E5%91%8A/%E7%A9%BA%E6%8C%87%E9%92%88%E8%AD%A6%E5%91%8A.png" alt="空指针警告"></p>
<blockquote>
<p>该警告意思是可能报空指针异常，也就是没有做安全处理。<br>消除警告的做法就是在调用方法之前，对有可能出现空指针异常的对象做是否为空的判断，也就是安全处理。</p>
</blockquote>
<h4 id="2、忽略返回值警告"><a href="#2、忽略返回值警告" class="headerlink" title="2、忽略返回值警告"></a>2、忽略返回值警告</h4><p><img src="http://47.106.179.244/%E4%BB%A3%E7%A0%81%E8%AD%A6%E5%91%8A/%E5%BF%BD%E7%95%A5%E8%BF%94%E5%9B%9E%E5%80%BC%E8%AD%A6%E5%91%8A.png" alt="忽略返回值警告"></p>
<blockquote>
<p>该警告消除方式为定义一个该方法的返回值类型去接收返回值。</p>
</blockquote>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>代码规范</tag>
      </tags>
  </entry>
  <entry>
    <title>Idea创建Maven项目注意事项</title>
    <url>/2016/07/23/idea-chuang-jian-maven-xiang-mu-zhu-yi-shi-xiang/</url>
    <content><![CDATA[<p>新建项目的时候选择maven项目。<br><img src="http://47.106.179.244/idea%E5%88%9B%E5%BB%BAMaven%E9%A1%B9%E7%9B%AE%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/1.png" alt=""><br>接着下一步，这里需要注在Properties中添加一个参数<code>archetypeCatalog=internal</code>，不加这个参数，在maven生成骨架的时候将会非常慢，有时候直接卡住。</p>
<blockquote>
<p>来自网上的解释：<br><em>archetypeCatalog</em>表示插件使用的archetype元数据，不加这个参数时默认为remote，local，即中央仓库archetype元数据，由于中央仓库的archetype太多了所以导致很慢，指定internal来表示仅使用内部元数据。</p>
</blockquote>
<p><img src="http://47.106.179.244/idea%E5%88%9B%E5%BB%BAMaven%E9%A1%B9%E7%9B%AE%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/2.png" alt=""><br>这样，在初始化maven项目的时候就不会被卡住了。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Maven</tag>
        <tag>Idea</tag>
        <tag>编辑器</tag>
      </tags>
  </entry>
</search>
