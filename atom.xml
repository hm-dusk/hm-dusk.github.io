<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>貍铭的博客</title>
  
  <subtitle>越自律，越自由</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cyanide.top/"/>
  <updated>2019-08-16T07:03:41.000Z</updated>
  <id>http://cyanide.top/</id>
  
  <author>
    <name>貍铭</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS7离线安装CDH</title>
    <link href="http://cyanide.top/2019/08/16/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/"/>
    <id>http://cyanide.top/2019/08/16/CentOS7离线安装CDH/</id>
    <published>2019-08-16T07:03:41.000Z</published>
    <updated>2019-08-16T07:03:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS7.6离线安装CDP，Cloudera Manager版本：6.3.0，CDH版本：6.3.0-1</p><a id="more"></a><h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><table><thead><tr><th align="center">节点</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hdp001</td><td align="center">192.168.171.10</td></tr><tr><td align="center">hdp002</td><td align="center">192.168.171.11</td></tr><tr><td align="center">hdp003</td><td align="center">192.168.171.12</td></tr></tbody></table><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="磁盘准备"><a href="#磁盘准备" class="headerlink" title="磁盘准备"></a>磁盘准备</h4><p>离线安装包共计3G左右，请保证有足够空间。<br>保证/opt目录有足够空间，至少20G</p><h4 id="网络准备"><a href="#网络准备" class="headerlink" title="网络准备"></a>网络准备</h4><p>CDH支持IPV4，不支持IPV6</p><ol><li>将主机名设置为全限定域名格式（FQDN：Fully Qualified Domain Name）<br><code>sudo hostnamectl set-hostname foo-1.example.com</code></li><li>配置/etc/hosts文件，添加集群中所有全限定域名，也可以添加非限定名<br>```bash</li><li>1.1.1 foo-1.example.com foo-1</li><li>2.2.2 foo-2.example.com foo-2</li><li>3.3.3 foo-3.example.com foo-3</li><li>4.4.4 foo-4.example.com foo-4<pre><code></code></pre></li></ol><h4 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h4><p>配置免密码登录教程请点击<a href="http://blog.hming.org/2018/09/16/Linux%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/" target="_blank" rel="noopener">这里</a></p><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><p>查看防火墙状态<br><code>firewall-cmd --state</code>或<code>systemctl status firewalld</code><br>临时关闭防火墙<br><code>systemctl stop firewalld</code><br>禁止开机启动<br><code>systemctl disable firewalld</code></p><h4 id="设置SELinux模式"><a href="#设置SELinux模式" class="headerlink" title="设置SELinux模式"></a>设置SELinux模式</h4><p>不关闭可能导致Apache http服务无法访问。</p><ol><li>查看SELinux状态：<code>getenforce</code><br>如果是<code>Permissive</code>或者<code>Disabled</code>则可以继续安装，如果显示<code>enforcing</code>，则需要进行以下步骤修改模式</li><li>编辑<code>/etc/selinux/config</code>文件</li><li>修改<code>SELINUX=enforcing</code>行内容为<code>SELINUX=permissive</code>或者<code>SELINUX=disabled</code></li><li>重启系统或者运行<code>setenforce 0</code>命令禁用SELinux</li></ol><h4 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h4><p>离线安装MySQL教程点击<a href="http://blog.hming.org/2018/12/08/CentOS7%E4%B8%8B%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85MySQL/" target="_blank" rel="noopener">这里</a></p><p>新建数据库hive、ambari（为后续安装做准备）。</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> create database hive<span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> create database ambari<span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CentOS7.6离线安装CDP，Cloudera Manager版本：6.3.0，CDH版本：6.3.0-1&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="CDH" scheme="http://cyanide.top/tags/CDH/"/>
    
      <category term="离线安装" scheme="http://cyanide.top/tags/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Centos7安装VNC服务</title>
    <link href="http://cyanide.top/2019/08/06/Centos7%E5%AE%89%E8%A3%85VNC%E6%9C%8D%E5%8A%A1/"/>
    <id>http://cyanide.top/2019/08/06/Centos7安装VNC服务/</id>
    <published>2019-08-06T08:00:24.000Z</published>
    <updated>2019-08-06T08:00:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍在Centos7.6下安装VNC Viewer并通过Windows连接远程桌面的过程</p><a id="more"></a><h3 id="安装gnome桌面"><a href="#安装gnome桌面" class="headerlink" title="安装gnome桌面"></a>安装gnome桌面</h3><p>如果Centos7为最小化安装，则需要单独安装gnome图形化桌面</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum groupinstall -y "GNOME Desktop"</span></code></pre><h3 id="安装vnc-server"><a href="#安装vnc-server" class="headerlink" title="安装vnc server"></a>安装vnc server</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install -y tigervnc-server</span></code></pre><h3 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h3><ol><li><p>复制一个服务设置模板，命名为<code>vncserver@:1.service</code></p><pre class=" language-bash"><code class="language-bash"> <span class="token function">cp</span> /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service</code></pre></li><li><p>修改服务配置，</p><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/systemd/system/vncserver\@\:1.service</span></code></pre><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>Unit<span class="token punctuation">]</span> Description<span class="token operator">=</span>Remote desktop <span class="token function">service</span> <span class="token punctuation">(</span>VNC<span class="token punctuation">)</span> After<span class="token operator">=</span>syslog.target network.target <span class="token punctuation">[</span>Service<span class="token punctuation">]</span> Type<span class="token operator">=</span>forking User<span class="token operator">=</span>root   <span class="token comment" spellcheck="true">#设置登录用户为root</span> <span class="token comment" spellcheck="true"># Clean any existing files in /tmp/.X11-unix environment</span> ExecStartPre<span class="token operator">=</span>/bin/sh -c <span class="token string">'/usr/bin/vncserver -kill %i > /dev/null 2>&amp;1 || :'</span> <span class="token comment" spellcheck="true">#将这里的User改为root，-geometry 1920x1080选项指定连接分辨率，也可以不指定</span> ExecStart<span class="token operator">=</span>/usr/sbin/runuser -l root -c <span class="token string">"/usr/bin/vncserver -geometry 1920x1080 %i"</span> PIDFile<span class="token operator">=</span>/root/.vnc/%H%i.pid         <span class="token comment" spellcheck="true">#这里指向root根目录地址</span> ExecStop<span class="token operator">=</span>/bin/sh -c <span class="token string">'/usr/bin/vncserver -kill %i > /dev/null 2>&amp;1 || :'</span> <span class="token punctuation">[</span>Install<span class="token punctuation">]</span> WantedBy<span class="token operator">=</span>multi-user.target</code></pre></li><li><p>如果需要配置其他用户登录，则重复1,2步骤，再复制一个配置文件，修改相应用户</p></li><li><p>更新systemctl</p><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl daemon-reload</span></code></pre></li></ol><h3 id="设置VNC密码"><a href="#设置VNC密码" class="headerlink" title="设置VNC密码"></a>设置VNC密码</h3><p>VNC的密码跟系统的用户密码不一样，是使用VNC Viewer登陆时需要使用的密码</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vncpasswd</span>Password:Verify:Would you like to enter a view-only password <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>? nA view-only password is not used<span class="token comment" spellcheck="true"># 这里不添加只读账号密码</span><span class="token comment" spellcheck="true"># 每个不用的系统用户，设置密码时，需要切换到该用户下，执行此命令</span><span class="token comment" spellcheck="true"># 如：su zhangsan  切换到zhangsan用户再执行上vncpasswd设置密码</span></code></pre><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>启动刚才配置的服务，如果配置了多个，则需要启动相应的服务</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start vncserver@:1.service</span></code></pre><p>设置开机自启动</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable vncserver@:1.service</span></code></pre><p>查看端口信息，VNC默认端口为<code>5901</code>，因为我启动了两个服务，所以还有一个5902端口存在</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># netstat -lnpt|grep Xvnc</span>tcp        0      0 0.0.0.0:5901            0.0.0.0:*               LISTEN      10196/Xvnc          tcp        0      0 0.0.0.0:5902            0.0.0.0:*               LISTEN      11394/Xvnc          tcp        0      0 0.0.0.0:6001            0.0.0.0:*               LISTEN      10196/Xvnc          tcp        0      0 0.0.0.0:6002            0.0.0.0:*               LISTEN      11394/Xvnc          tcp6       0      0 :::5901                 :::*                    LISTEN      10196/Xvnc          tcp6       0      0 :::5902                 :::*                    LISTEN      11394/Xvnc          tcp6       0      0 :::6001                 :::*                    LISTEN      10196/Xvnc          tcp6       0      0 :::6002                 :::*                    LISTEN      11394/Xvnc          </code></pre><h3 id="配置防火墙，开通端口"><a href="#配置防火墙，开通端口" class="headerlink" title="配置防火墙，开通端口"></a>配置防火墙，开通端口</h3><p>如果没有开启防火墙，则这一步可以跳过<br>根据监听的端口，进行端口开放，每个用户会对应一个端口，第一个用户默认为<code>5901</code>端口，如果配置多个，则需要开发相应端口</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --add-port=5901/tcp --permanent</span><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --reload</span></code></pre><h3 id="Windows安装VNC，连接Centos远程桌面"><a href="#Windows安装VNC，连接Centos远程桌面" class="headerlink" title="Windows安装VNC，连接Centos远程桌面"></a>Windows安装VNC，连接Centos远程桌面</h3><ol><li>到官方下载地址：<a href="https://www.realvnc.com/en/connect/download/viewer/" target="_blank" rel="noopener">https://www.realvnc.com/en/connect/download/viewer/</a>选择对应版本下载客户端</li><li>新建连接中VNC Server输入<code>IP地址:1</code>，输入密码即可连接成功</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍在Centos7.6下安装VNC Viewer并通过Windows连接远程桌面的过程&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://cyanide.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://cyanide.top/tags/Linux/"/>
    
      <category term="VNC Viewer" scheme="http://cyanide.top/tags/VNC-Viewer/"/>
    
  </entry>
  
  <entry>
    <title>HDP与CDH对比</title>
    <link href="http://cyanide.top/2019/07/03/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/"/>
    <id>http://cyanide.top/2019/07/03/HDP与CDH对比/</id>
    <published>2019-07-03T06:25:43.000Z</published>
    <updated>2019-07-19T03:22:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hortonworks HDP与Cloudera CDH对比。</p><a id="more"></a><h3 id="HDP与CDH的对比"><a href="#HDP与CDH的对比" class="headerlink" title="HDP与CDH的对比"></a>HDP与CDH的对比</h3><h4 id="版本更新对比"><a href="#版本更新对比" class="headerlink" title="版本更新对比"></a>版本更新对比</h4><p>HDP版本更新较快，因为Hortonworks内部大部分员工都是apache代码贡献者，尤其是Hadoop 2.0的贡献者。</p><p>CDH版本更新比Apache版本慢。</p><p>目前Apache社区Hadoop最新版本：3.2.0</p><p>目前CDH最新版支持Hadoop版本：3.0.0</p><p>目前HDP最新版支持Hadoop版本：3.1.1</p><h4 id="原装支持组件对比"><a href="#原装支持组件对比" class="headerlink" title="原装支持组件对比"></a>原装支持组件对比</h4><table><thead><tr><th>必要组件</th><th>HDP</th><th>CDH</th></tr></thead><tbody><tr><td>Zookeeper</td><td>√</td><td>√</td></tr><tr><td>HDFS</td><td>√</td><td>√</td></tr><tr><td>Yarn/MapReduce</td><td>√</td><td>√</td></tr><tr><td>Hive</td><td>√</td><td>√</td></tr><tr><td>HBase</td><td>√</td><td>√</td></tr><tr><td>Phoenix</td><td>√（最高支持5.0）</td><td>×（需要单独配置，最高支持版本1.3）</td></tr><tr><td>Spark</td><td>√</td><td>√</td></tr><tr><td>Zeppelin</td><td>√</td><td>×（需要自己编译安装）</td></tr><tr><td>Oozie</td><td>√</td><td>√</td></tr><tr><td>Sqoop1</td><td>√</td><td>√</td></tr><tr><td>Sqoop2</td><td>×</td><td>√</td></tr><tr><td>Kafka</td><td>√</td><td>√</td></tr><tr><td>Flink</td><td>×</td><td>×</td></tr><tr><td>Kerberos</td><td>√</td><td>√</td></tr><tr><td><strong>次要组件</strong></td><td><strong>HDP</strong></td><td><strong>CDH</strong></td></tr><tr><td>Tez</td><td>√</td><td>×</td></tr><tr><td>Druid</td><td>√</td><td>×</td></tr><tr><td>Knox</td><td>√</td><td>×</td></tr><tr><td>Ranger</td><td>√</td><td>×</td></tr><tr><td>Storm</td><td>√</td><td>×</td></tr><tr><td>Ambari</td><td>√</td><td>×</td></tr><tr><td>Nifi</td><td>√</td><td>×</td></tr><tr><td>Cloudera Manager</td><td>×</td><td>√</td></tr><tr><td>HBase Indexer（方便在Solr中建立HBase索引）</td><td>×</td><td>√</td></tr><tr><td><a href="https://github.com/cloudera/hue/tree/cdh6.2.0" target="_blank" rel="noopener">Hue</a></td><td>×</td><td>√</td></tr><tr><td>Impala</td><td>×（需要单独安装）</td><td>√</td></tr><tr><td><strong>其他组件</strong></td><td><strong>HDP</strong></td><td><strong>CDH</strong></td></tr><tr><td>Solr</td><td>√</td><td>√</td></tr><tr><td>Flume</td><td>√（HDP3.0之后不再支持）</td><td>√</td></tr><tr><td>Pig</td><td>√</td><td>×（CDH6.X不再支持）</td></tr><tr><td>Avro</td><td>×</td><td>√</td></tr></tbody></table><h4 id="安全权限模块对比"><a href="#安全权限模块对比" class="headerlink" title="安全权限模块对比"></a>安全权限模块对比</h4><ol><li><p>HDP<br>包含Ranger组件，即使在没有Kerberos的情况下，也能作一些简单的权限分配管理。由于100%开源，所以支持Ldap+Kerberos+Ranger的权限配置方式，分配权限简单易用。另外，Kerberos配置具有向导式界面。</p></li><li><p>CDH<br>不具有类似Ranger的组件，想要做权限只能加Kerberos认证，然而express免费版只支持集成Kerberos，需要Ldap支持的需要企业版，Kerberos向导页面也只有企业版才支持（<a href="#CDH免费版和企业版区别">CDH免费版和企业版区别对比</a>）。</p></li></ol><h4 id="运维管理对比"><a href="#运维管理对比" class="headerlink" title="运维管理对比"></a>运维管理对比</h4><h5 id="HDP"><a href="#HDP" class="headerlink" title="HDP"></a>HDP</h5><p>采用Apache Ambari进行统一管理，Ambari2.7之后的版本相对2.6有很大的改动，2.6个人看来也不够人性化，2.7界面布局更加人性化。</p><ol><li>Ambari不支持中文，整个管理页面都是英文呈现。</li><li>组件比较重要的基本配置都以图形化的方式呈现，比直接配文字版体验效果好。<br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A21.png" alt><br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22.png" alt><br>鼠标hover到配置项上面会有该项配置的说明。<br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22-1.png" alt></li><li>其他配置都是按照节点（如下图中的NameNode）、配置文件（如下图中的Advanced hdfs-site）来进行组织的，方便运维人员快速定位。另外配置有版本记录，可以回退到任意版本。<br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A23.png" alt></li><li>组件界面可以直接看到该组件的哪些服务以及服务情况，右边就有该服务的快速链接，下图为Yarn的界面。<br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E7%BB%84%E4%BB%B6%E7%95%8C%E9%9D%A21.png" alt></li><li>部分组件可以看到链接地址，比如Hive。<br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E7%BB%84%E4%BB%B6%E7%95%8C%E9%9D%A22.png" alt></li><li>Ambari服务本身不支持高可用。</li></ol><h5 id="CDH"><a href="#CDH" class="headerlink" title="CDH"></a>CDH</h5><p>采用Cloudera Manager（下文统一用cm代替）进行统一管理。</p><ol><li>cm可以根据浏览器配置进行语言选择，支持中文。<br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A20.png" alt></li><li>配置界面左边将所有配置按照范围、类别、状态进行分类，也能很方便的找到配置。<br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22.png" alt><br>右边提供每个配置的说明，点看可以看到各项配置的说明。<br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22-1.png" alt></li><li>配置版本控制免费版不支持<br>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_mc_revert_configs.html" target="_blank" rel="noopener">Viewing and Reverting Configuration Changes</a></li><li>组件服务的快速链接在tab页上<br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A23.png" alt></li><li>cm服务可以配置高可用<br>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/admin_cm_ha_server.html" target="_blank" rel="noopener">Installing and Configuring Cloudera Manager Server for High Availability</a></li><li>cm支持数据加密，无论是静态加密或保护数据传输，但是可惜的是免费版cm支持很有限。另外加密前官方强烈建议安装Kerberos<br>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/sg_enc_overview.html" target="_blank" rel="noopener">Encryption Overview</a><br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E5%8A%A0%E5%AF%86%E9%85%8D%E7%BD%AE%E9%A1%B5%E9%9D%A2.png" alt></li></ol><h3 id="CDH版本说明"><a href="#CDH版本说明" class="headerlink" title="CDH版本说明"></a>CDH版本说明</h3><h4 id="CDH6-X组件版本对应"><a href="#CDH6-X组件版本对应" class="headerlink" title="CDH6.X组件版本对应"></a>CDH6.X组件版本对应</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_cdh_6_packaging.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_cdh_6_packaging.html</a></p><h4 id="CDH5-X组件版本对应"><a href="#CDH5-X组件版本对应" class="headerlink" title="CDH5.X组件版本对应"></a>CDH5.X组件版本对应</h4><p><a href="https://www.cloudera.com/documentation/enterprise/release-notes/topics/cdh_vd_cdh_package_tarball.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/release-notes/topics/cdh_vd_cdh_package_tarball.html</a></p><h4 id="Impala版本说明"><a href="#Impala版本说明" class="headerlink" title="Impala版本说明"></a>Impala版本说明</h4><p>Impala在3.1之后才支持ORC格式HDFS文件，目前最高版本为3.2，CDH6.1对应的Impala版本为3.1，CDH6.2对应的Impala版本为3.2</p><h4 id="Docker-QuickStart版本说明"><a href="#Docker-QuickStart版本说明" class="headerlink" title="Docker QuickStart版本说明"></a>Docker QuickStart版本说明</h4><p>Cloudera <code>Quickstart</code>和HDP的<code>sandbox</code>类似，都是单机版的供学习交流使用的大数据集群。<br>目前Docker版启动的quickstart CDH版本最新为<strong>5.13.0</strong>，对应部分组件版本为：</p><table><thead><tr><th><strong>组件</strong></th><th><strong>组件包版本</strong></th><th><strong>压缩包下载地址</strong></th><th><strong>版本发布说明</strong></th><th align="left"><strong>更改文件</strong></th></tr></thead><tbody><tr><td>Apache Hadoop</td><td>hadoop-2.6.0+cdh5.13.0+2639</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hadoop-2.6.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hadoop-2.6.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hadoop-2.6.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Hadoop Mrv1</td><td>hadoop-0.20-mapreduce-2.6.0+cdh5.13.0+2639</td><td>(none)</td><td>(none)</td><td align="left">(none)</td></tr><tr><td>Hbase</td><td>hbase-1.2.0+cdh5.13.0+411</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hbase-1.2.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hbase-1.2.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hbase-1.2.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Hive</td><td>hive-1.1.0+cdh5.13.0+1269</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hive-1.1.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hive-1.1.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hive-1.1.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Hue</td><td>hue-3.9.0+cdh5.13.0+7079</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hue-3.9.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hue-3.9.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hue-3.9.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Impala</td><td>impala-2.10.0+cdh5.13.0+0</td><td>(none)</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/impala-2.10.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/impala-2.10.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Kudu</td><td>kudu-1.5.0+cdh5.13.0+0</td><td>(none)</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/kudu-1.5.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/kudu-1.5.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Oozie</td><td>oozie-4.1.0+cdh5.13.0+458</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/oozie-4.1.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/oozie-4.1.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/oozie-4.1.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Cloudera Search</td><td>search-1.0.0+cdh5.13.0+0</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/search-1.0.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/search-1.0.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/search-1.0.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Solr</td><td>solr-4.10.3+cdh5.13.0+519</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/solr-4.10.3-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/solr-4.10.3-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/solr-4.10.3-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Spark</td><td>spark-1.6.0+cdh5.13.0+530</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/spark-1.6.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/spark-1.6.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/spark-1.6.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Sqoop</td><td>sqoop-1.4.6+cdh5.13.0+116</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop-1.4.6-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop-1.4.6-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop-1.4.6-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Sqoop2</td><td>sqoop2-1.99.5+cdh5.13.0+46</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop2-1.99.5-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop2-1.99.5-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop2-1.99.5-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Zookeeper</td><td>zookeeper-3.4.5+cdh5.13.0+118</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/zookeeper-3.4.5-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/zookeeper-3.4.5-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/zookeeper-3.4.5-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr></tbody></table><h3 id="CDH免费版和企业版区别"><a href="#CDH免费版和企业版区别" class="headerlink" title="CDH免费版和企业版区别"></a>CDH免费版和企业版区别</h3><p><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E5%85%8D%E8%B4%B9%E7%89%88%E5%92%8C%E4%BB%98%E8%B4%B9%E7%89%88%E5%8A%9F%E8%83%BD%E5%AF%B9%E6%AF%94%E5%9B%BE.png" alt="免费版和企业版功能对比图"><br>注：<br>1.snmp traps：SNMP是指简单网络管理协议，trap是它规定的一种通信方式，用于被管理的设备主动向充当管理者的设备报告自己的异常信息。</p><p><a href="https://www.cloudera.com/content/dam/www/marketing/resources/datasheets/cloudera-enterprise-datasheet.pdf.landing.html" target="_blank" rel="noopener">官网参考地址</a><br>截图来自<a href="https://blog.csdn.net/levy_cui/article/details/51143092" target="_blank" rel="noopener">CSDN</a><br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/%E5%AE%98%E7%BD%91%E8%A1%A81.jpg" alt><br><img src="http://image.hming.org/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/%E5%AE%98%E7%BD%91%E8%A1%A82.jpg" alt></p><h3 id="CDH官方文档地址（基于6-2-x版本）"><a href="#CDH官方文档地址（基于6-2-x版本）" class="headerlink" title="CDH官方文档地址（基于6.2.x版本）"></a>CDH官方文档地址（基于6.2.x版本）</h3><p>安装教程：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/installation.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.2/topics/installation.html</a>  </p><p>Impala安装要求：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/impala_prereqs.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.2/topics/impala_prereqs.html</a>  </p><p>集群所使用端口：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_ig_ports.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_ig_ports.html</a>  </p><p>集群组件服务主机分配建议：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_ig_host_allocations.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_ig_host_allocations.html</a>  </p><p>定制化安装（离线安装）：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_ig_custom_installation.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_ig_custom_installation.html</a>  </p><p>Cloudera Manager API：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_intro_api.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_intro_api.html</a>  </p><p>基于裸金属部署参考文档：<a href="https://www.cloudera.com/documentation/other/reference-architecture/topics/ra_bare_metal_deployment.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/other/reference-architecture/topics/ra_bare_metal_deployment.html</a>  </p><p>Cloudera Manager常见问题（FAQ）<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_faqs.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_faqs.html</a>  </p><p>CHD各组件服务依赖项<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_ig_service_dependencies.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_ig_service_dependencies.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hortonworks HDP与Cloudera CDH对比。&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="CDH" scheme="http://cyanide.top/tags/CDH/"/>
    
      <category term="HDP" scheme="http://cyanide.top/tags/HDP/"/>
    
  </entry>
  
  <entry>
    <title>文档网站生成工具选型</title>
    <link href="http://cyanide.top/2019/05/15/%E6%96%87%E6%A1%A3%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7%E9%80%89%E5%9E%8B/"/>
    <id>http://cyanide.top/2019/05/15/文档网站生成工具选型/</id>
    <published>2019-05-15T01:16:04.000Z</published>
    <updated>2019-05-15T01:16:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>对比多款静态网站生成工具，分析需求，找到合适的工具。</p><a id="more"></a><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol><li>要求部署一个静态网站，用于开发者文档的呈现。</li><li>要求所有文档采用markdown格式书写，md文件保存到git仓库（github），并且目录结构必须清晰</li><li>要求md文件解析操作是在前端完成</li></ol><h2 id="方案选择"><a href="#方案选择" class="headerlink" title="方案选择"></a>方案选择</h2><table><thead><tr><th align="center"></th><th align="center">方式一 预先渲染HTML</th><th align="center">方式二 运行时解析md</th></tr></thead><tbody><tr><td align="center">描述</td><td align="center">先将所有md文件解析成HTML文件，<br>然后前端进行HTML文件的展示<br>参考：Hexo</td><td align="center">前端直接读取md文件，<br>在渲染页面时进行md文件的解析<br>参考：docsify</td></tr><tr><td align="center">优点</td><td align="center">由于前端不需要渲染，直接展示，<br>理论上速度没有延迟</td><td align="center">由于每次都是即时渲染，<br>所以在更新md文件时不会有额外工作量</td></tr><tr><td align="center">缺点</td><td align="center">在更新md文件，哪怕只更新一点，<br>也需要所有md文件重新编译解析一次，<br>工作量较大</td><td align="center">需要前端实时解析md文件，<br>在文件较大时可能会有延迟</td></tr><tr><td align="center">选择</td><td align="center">x</td><td align="center"><code>√</code></td></tr><tr><td align="center">## 网站生成逻辑</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><img src="http://image.hming.org/%E6%96%87%E6%A1%A3%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7%E9%80%89%E5%9E%8B/%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E9%80%BB%E8%BE%91%E5%9B%BE.png" alt></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">## 各种开源工具对比</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">开源工具对比</td><td align="center">Hexo</td><td align="center">VuePress</td></tr><tr><td align="center">:–:</td><td align="center">:–:</td><td align="center">:–:</td></tr><tr><td align="center">文档生成方式</td><td align="center">预先渲染HTML</td><td align="center">预先渲染HTML</td></tr><tr><td align="center">对SEO友好程度</td><td align="center">友好</td><td align="center">友好</td></tr><tr><td align="center">官网地址</td><td align="center"><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo</a></td><td align="center"><a href="https://vuepress.vuejs.org/zh/" target="_blank" rel="noopener">vuepress</a></td></tr><tr><td align="center">适用场景</td><td align="center">个人博客</td><td align="center">需要SEO支持<br>的技术文档</td></tr><tr><td align="center">特点</td><td align="center">与主题解耦，<br>更换主题成本低</td><td align="center">采用vue，<br>对vue开发友好</td></tr><tr><td align="center">## Docute与Docsify区别</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">1. Docsify官方文档更友好，内容更多，本身占用空间更小</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">2. 同样的md文件，Docute解析代码段有问题，Docsify没问题</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">3. Docute提供一些官方组件，Badge、Note等，但是插件较少，而Docsify没有自带组件，但是支持很多有用的插件，如评论插件（Gitalk等）、全文搜索、谷歌统计等。而Docsify也支持Note插件：<a href="https://github.com/zanfab/docsify-plugin-flexible-alerts" target="_blank" rel="noopener">flexible-alerts</a></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">4. Docsify支持封面主页，Docute不支持</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">5. Docsify样式配置可以通过md文件进行配置，而Docute只能在index.html中配置</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">6. Docsify支持热部署，更新配置和文章不需要重启服务，Docute不支持</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">## 最终选型</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">最终选型：<a href="https://docsify.js.org/#/zh-cn/" target="_blank" rel="noopener">Docsify</a></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">查看演示：<a href="https://docs.hming.org/#/" target="_blank" rel="noopener">https://docs.hming.org</a></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对比多款静态网站生成工具，分析需求，找到合适的工具。&lt;/p&gt;
    
    </summary>
    
      <category term="部署" scheme="http://cyanide.top/categories/%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="文档" scheme="http://cyanide.top/tags/%E6%96%87%E6%A1%A3/"/>
    
      <category term="网站生成工具" scheme="http://cyanide.top/tags/%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>SandBox HDFS上传文件失败问题</title>
    <link href="http://cyanide.top/2019/04/16/SandBox-HDFS%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/"/>
    <id>http://cyanide.top/2019/04/16/SandBox-HDFS上传文件失败问题/</id>
    <published>2019-04-16T02:02:55.000Z</published>
    <updated>2019-04-16T02:02:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>SandBox上传文件到HDFS时，文件创建成功，向文件写入数据失败问题分析和解决方案。</p><a id="more"></a><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>远程（非Docker容器内、非宿主机）上传文件，新建文件成功，写入文件内容失败。查看<code>/var/log/hadoop/hdfs/hadoop-hdfs-namenode-sandbox-hdp.hortonworks.com.log</code>文件，发现如下错误：</p><pre><code>2019-04-15 10:51:33,322 INFO  ipc.Server (Server.java:logException(2726)) - IPC Server handler 74 on 8020, call Call#4 Retry#0 org.apache.hadoop.hdfs.protocol.ClientProtocol.addBlock from 172.18.0.3:48170java.io.IOException: File /tmp/1.csv could only be written to 0 of the 1 minReplication nodes. There are 1 datanode(s) running and 1 node(s) are excluded in this operation.        at org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.chooseTarget4NewBlock(BlockManager.java:2121)        at org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp.chooseTargetForNewBlock(FSDirWriteFileOp.java:286)        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getAdditionalBlock(FSNamesystem.java:2706)        at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.addBlock(NameNodeRpcServer.java:875)        at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.addBlock(ClientNamenodeProtocolServerSideTranslatorPB.java:561)        at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)        at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:524)        at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1025)        at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:876)        at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:822)        at java.security.AccessController.doPrivileged(Native Method)        at javax.security.auth.Subject.doAs(Subject.java:422)        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)        at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2682)</code></pre><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>上传文件过程中，Client先向NameNode发送上传文件请求，NameNode将DataNode的地址返回给Client，Client再通过该地址，写入文件内容。<br>由于SandBox HDP是搭建在Docker容器内部，所以NameNode返回的是Docker容器的ip地址（这和Docker的网络模式有关），因为SandBox默认启动的是自定义网络，所以容器内部ip为<code>172.18.0.3</code>，返回给Client之后，Client通过该IP是无法找到DataNode的，所以导致文件的元数据存到了NameNode上，而文件内容无法写入DataNode。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="方案一（推荐）"><a href="#方案一（推荐）" class="headerlink" title="方案一（推荐）"></a>方案一（推荐）</h4><p>修改代码和增加端口映射<br>因为NameNode返回的是Docker的ip，Client访问不了DataNode，所以可以让NameNode返回主机名，然后Client配置host的方式请求到宿主机的地址</p><ol><li>修改Client host文件配置，增加host映射</li></ol><pre class=" language-bash"><code class="language-bash">10.75.4.32 sandbox-hdp.hortonworks.com</code></pre><ol start="2"><li>java代码修改：</li></ol><pre class=" language-java"><code class="language-java">Configuration conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>conf<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"fs.defaultFS"</span><span class="token punctuation">,</span> <span class="token string">"hdfs://10.75.4.32:8020/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//增加下面一行，设置返回DataNode的主机名而不是ip</span>conf<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"dfs.client.use.datanode.hostname"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>此时还是不能访问到DataNode，因为<code>sandbox-proxy</code>容器并没有映射DataNode的端口（默认为<code>50010</code>）。</p><ol start="3"><li>修改<code>sandbox-proxy</code>端口映射，增加<code>50010</code>端口<br>停止、删除<code>sandbox-proxy</code>容器</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker stop sandbox-proxy</span>sandbox-proxy<span class="token punctuation">[</span>root@sandbox-host ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker rm sandbox-proxy</span>sandbox-proxy</code></pre><p>修改<code>generate-proxy-deploy-script.sh</code>脚本，在<code>tcpPortsHDP=(...)</code>部分新增<code>50010</code>端口映射<br>VMware版本脚本路径：<code>/sandbox/proxy/generate-proxy-deploy-script.sh</code><br>纯Docker版脚本路径：<code>./assets/generate-proxy-deploy-script.sh</code></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">..</span>.tcpPortsHDP<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">..</span>.<span class="token punctuation">[</span>50010<span class="token punctuation">]</span><span class="token operator">=</span>50010<span class="token punctuation">..</span>.<span class="token punctuation">)</span></code></pre><ol start="4"><li>重新执行<code>docker-deploy-hdp30.sh</code>脚本中配置代理容器的脚本</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#Deploy the proxy container.</span><span class="token function">sed</span> <span class="token string">'s/sandbox-hdp-security/sandbox-hdp/g'</span> assets/generate-proxy-deploy-script.sh <span class="token operator">></span> assets/generate-proxy-deploy-script.sh.new<span class="token function">mv</span> -f assets/generate-proxy-deploy-script.sh.new assets/generate-proxy-deploy-script.sh<span class="token function">chmod</span> +x assets/generate-proxy-deploy-script.shassets/generate-proxy-deploy-script.sh 2<span class="token operator">></span>/dev/null</code></pre><h4 id="方案二（不推荐）"><a href="#方案二（不推荐）" class="headerlink" title="方案二（不推荐）"></a>方案二（不推荐）</h4><p>暴力取消Docker网络隔离层，<strong>这样也就失去了Docker容器网络隔离的特性，具体利弊需要斟酌</strong>。<br>因为原因是Client连不上DataNode节点，所以直接将Docker容器的网络模式设置成host模式（详细参照Docker网络模式），将容器的ip和端口直接和宿主机打通，这样就能远程连接DataNode了。</p><h5 id="纯Docker模式"><a href="#纯Docker模式" class="headerlink" title="纯Docker模式"></a>纯Docker模式</h5><ol><li>停止、删除已生成容器（<code>sandbox-proxy</code>和<code>sandbox-hdp</code>）</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker stop $(docker ps -aq)</span>ef35a5989c7125f814082615<span class="token punctuation">[</span>root@sandbox proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker rm $(docker ps -aq)</span>ef35a5989c7125f814082615</code></pre><ol start="2"><li>修改脚本文件<code>docker-deploy-hdp30.sh</code>，将容器启动改为host网络模式，注释代理容器相关代码<blockquote><p>脚本文件为运行sandbox时的启动脚本</p></blockquote></li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#!/usr/bin/env sh</span><span class="token comment" spellcheck="true">#This script downloads HDP sandbox along with their proxy docker container</span><span class="token keyword">set</span> -x<span class="token comment" spellcheck="true"># CAN EDIT THESE VALUES</span>registry<span class="token operator">=</span><span class="token string">"hortonworks"</span>name<span class="token operator">=</span><span class="token string">"sandbox-hdp"</span>version<span class="token operator">=</span><span class="token string">"3.0.1"</span>proxyName<span class="token operator">=</span><span class="token string">"sandbox-proxy"</span>proxyVersion<span class="token operator">=</span><span class="token string">"1.0"</span>flavor<span class="token operator">=</span><span class="token string">"hdp"</span><span class="token comment" spellcheck="true"># NO EDITS BEYOND THIS LINE</span><span class="token comment" spellcheck="true"># housekeeping</span><span class="token comment" spellcheck="true"># 这里已经没用了，注释</span><span class="token comment" spellcheck="true">#echo $flavor > sandbox-flavor</span><span class="token comment" spellcheck="true"># create necessary folders for nginx and copy over our rule generation script there</span><span class="token comment" spellcheck="true">#这里也注释，不需要代理容器了</span><span class="token comment" spellcheck="true">#mkdir -p sandbox/proxy/conf.d</span><span class="token comment" spellcheck="true">#mkdir -p sandbox/proxy/conf.stream.d</span><span class="token comment" spellcheck="true"># pull and tag the sandbox and the proxy container</span><span class="token comment" spellcheck="true"># 本地已经存在镜像文件，这里可以注释减少脚本执行时间</span><span class="token comment" spellcheck="true">#docker pull "$registry/$name:$version"</span><span class="token comment" spellcheck="true">#docker pull "$registry/$proxyName:$proxyVersion"</span><span class="token comment" spellcheck="true"># start the docker container and proxy</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdf"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> hostname<span class="token operator">=</span><span class="token string">"sandbox-hdf.hortonworks.com"</span><span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdp"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> hostname<span class="token operator">=</span><span class="token string">"sandbox-hdp.hortonworks.com"</span><span class="token keyword">fi</span>version<span class="token operator">=</span><span class="token punctuation">$(</span>docker images <span class="token operator">|</span> <span class="token function">grep</span> <span class="token variable">$registry</span>/<span class="token variable">$name</span>  <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># Create cda docker network</span><span class="token comment" spellcheck="true"># 因为采用host网络模式，这里创建网络cda也注释</span><span class="token comment" spellcheck="true">#docker network create cda 2>/dev/null</span><span class="token comment" spellcheck="true"># Deploy the sandbox into the cda docker network</span><span class="token comment" spellcheck="true"># 将原本的run语句注释，修改为以下语句（将网络模式修改为host）</span><span class="token comment" spellcheck="true">#docker run --privileged --name $name -h $hostname --network=cda --network-alias=$hostname -d "$registry/$name:$version"</span>docker run --privileged --name <span class="token variable">$name</span> -h <span class="token variable">$hostname</span> --network<span class="token operator">=</span>host -d <span class="token string">"<span class="token variable">$registry</span>/<span class="token variable">$name</span>:<span class="token variable">$version</span>"</span><span class="token keyword">echo</span> <span class="token string">" Remove existing postgres run files. Please wait"</span><span class="token function">sleep</span> 2docker <span class="token function">exec</span> -t <span class="token string">"<span class="token variable">$name</span>"</span> sh -c <span class="token string">"rm -rf /var/run/postgresql/*; systemctl restart postgresql-9.6.service;"</span><span class="token comment" spellcheck="true">#Deploy the proxy container.</span><span class="token comment" spellcheck="true"># 这里为代理容器配置，因为host模式自动将所有端口映射到宿主机上，所以不再需要sandbox-proxy容器的支持</span><span class="token comment" spellcheck="true">#sed 's/sandbox-hdp-security/sandbox-hdp/g' assets/generate-proxy-deploy-script.sh > assets/generate-proxy-deploy-script.sh.new</span><span class="token comment" spellcheck="true">#mv -f assets/generate-proxy-deploy-script.sh.new assets/generate-proxy-deploy-script.sh</span><span class="token comment" spellcheck="true">#chmod +x assets/generate-proxy-deploy-script.sh</span><span class="token comment" spellcheck="true">#assets/generate-proxy-deploy-script.sh 2>/dev/null</span><span class="token comment" spellcheck="true">#check to see if it's windows</span><span class="token comment" spellcheck="true"># 以下为window环境代码，也注释</span><span class="token comment" spellcheck="true">#if uname | grep MINGW; then</span><span class="token comment" spellcheck="true"># sed -i -e 's/\( \/[a-z]\)/\U\1:/g' sandbox/proxy/proxy-deploy.sh</span><span class="token comment" spellcheck="true">#fi</span><span class="token comment" spellcheck="true">#chmod +x sandbox/proxy/proxy-deploy.sh 2>/dev/null</span><span class="token comment" spellcheck="true">#sandbox/proxy/proxy-deploy.sh</span></code></pre><ol start="3"><li>重新运行<code>docker-deploy-hdp30.sh</code>脚本文件</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># sh docker-deploy-hdp30.sh </span>+ registry<span class="token operator">=</span>hortonworks+ name<span class="token operator">=</span>sandbox-hdp+ version<span class="token operator">=</span>3.0.1+ proxyName<span class="token operator">=</span>sandbox-proxy+ proxyVersion<span class="token operator">=</span>1.0+ flavor<span class="token operator">=</span>hdp+ <span class="token keyword">echo</span> hdp+ <span class="token function">mkdir</span> -p sandbox/proxy/conf.d+ <span class="token function">mkdir</span> -p sandbox/proxy/conf.stream.d+ <span class="token string">'['</span> hdp <span class="token operator">==</span> hdf <span class="token string">']'</span>+ <span class="token string">'['</span> hdp <span class="token operator">==</span> hdp <span class="token string">']'</span>+ hostname<span class="token operator">=</span>sandbox-hdp.hortonworks.com++ docker images++ <span class="token function">grep</span> hortonworks/sandbox-hdp++ <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span>+ version<span class="token operator">=</span>3.0.1+ docker run --privileged --name sandbox-hdp -h sandbox-hdp.hortonworks.com --network<span class="token operator">=</span>host -d hortonworks/sandbox-hdp:3.0.1b91b70d7792a806310c067e7792f4c3930a5329261128d5a4c211b804a923342+ <span class="token keyword">echo</span> <span class="token string">' Remove existing postgres run files. Please wait'</span> Remove existing postgres run files. Please <span class="token function">wait</span>+ <span class="token function">sleep</span> 2+ docker <span class="token function">exec</span> -t sandbox-hdp sh -c <span class="token string">'rm -rf /var/run/postgresql/*; systemctl restart postgresql-9.6.service;'</span><span class="token comment" spellcheck="true"># 可以看到此时只剩下sandbox-hdp一个容器在运行</span><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker ps</span>CONTAINER ID        IMAGE                           COMMAND             CREATED             STATUS              PORTS               NAMESb91b70d7792a        hortonworks/sandbox-hdp:3.0.1   <span class="token string">"/usr/sbin/init"</span>    8 minutes ago       Up 8 minutes                            sandbox-hdp</code></pre><ol start="4"><li>最后进行各种初始化配置即可<br>进入sandbox容器，重置Ambari admin密码</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker exec -it sandbox-hdp /bin/bash</span><span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-admin-password-reset </span>Please <span class="token keyword">set</span> the password <span class="token keyword">for</span> admin: Please retype the password <span class="token keyword">for</span> admin: The admin password has been set.Restarting ambari-server to <span class="token function">make</span> the password change effective<span class="token punctuation">..</span>.Using python  /usr/bin/pythonRestarting ambari-serverAmbari Server is not runningAmbari Server running with administrator privileges.Organizing resource files at /var/lib/ambari-server/resources<span class="token punctuation">..</span>.Ambari database consistency check started<span class="token punctuation">..</span>.Server PID at: /var/run/ambari-server/ambari-server.pidServer out at: /var/log/ambari-server/ambari-server.outServer log at: /var/log/ambari-server/ambari-server.logWaiting <span class="token keyword">for</span> server start<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Server started listening on 8080DB configs consistency check: no errors and warnings were found.</code></pre><p>访问8080端口，到Ambari界面，登录后重启服务即可。</p><p>SandBox使用参照：<br><a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/" target="_blank" rel="noopener">SandBox-HDP使用详解</a><br><strong>注意：由于没有运行sandbox-proxy容器，1080端口已经无法访问</strong></p><h5 id="VMware模式"><a href="#VMware模式" class="headerlink" title="VMware模式"></a>VMware模式</h5><ol><li>通过ssh连接22端口登录到VMware虚拟机（sandbox的宿主机）里面<br>也可以通过XShell等工具进入<br>默认<code>root</code>初始密码为<code>hadoop</code></li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh 10.75.4.6 -p 22</span>root@10.75.4.6's password: Last failed login: Tue Apr 16 15:38:03 UTC 2019 from 10.75.4.32 on ssh:nottyThere was 1 failed login attempt since the last successful login.Last login: Mon Apr 15 16:34:49 2019 from 10.75.4.11<span class="token punctuation">[</span>root@sandbox-host ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker images</span>REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZEhortonworks/sandbox-proxy          1.0                 ca272ae0e63a        4 months ago        109MBhortonworks/sandbox-hdp-security   3.0                 ae1d1779b081        4 months ago        27.5GB</code></pre><ol start="2"><li>停止、删除已生成容器（<code>sandbox-proxy</code>和<code>sandbox-hdp-security</code>）</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker stop $(docker ps -aq)</span>ef35a5989c7125f814082615<span class="token punctuation">[</span>root@sandbox-host proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker rm $(docker ps -aq)</span>ef35a5989c7125f814082615</code></pre><ol start="3"><li>修改脚本文件<code>/sandbox/sandbox-deploy.sh</code>，将容器启动改为host网络模式，注释代理容器相关代码</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#!/usr/bin/env bash</span>flavor<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /sandbox-flavor<span class="token variable">)</span></span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdf"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> name<span class="token operator">=</span><span class="token string">"sandbox-hdf-standalone-cda-ready"</span> hostname<span class="token operator">=</span><span class="token string">"sandbox-hdf.hortonworks.com"</span><span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdp"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> name<span class="token operator">=</span><span class="token string">"sandbox-hdp-security"</span> hostname<span class="token operator">=</span><span class="token string">"sandbox-hdp.hortonworks.com"</span><span class="token keyword">fi</span>version<span class="token operator">=</span><span class="token punctuation">$(</span>docker images <span class="token operator">|</span> <span class="token function">grep</span> <span class="token variable">$name</span>  <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>image<span class="token operator">=</span><span class="token string">"hortonworks/<span class="token variable">$name</span>:<span class="token variable">$version</span>"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># Create cda docker network</span><span class="token comment" spellcheck="true"># 因为采用host网络模式，这里注释创建网络cda</span><span class="token comment" spellcheck="true">#docker network create cda</span><span class="token comment" spellcheck="true"># Deploy the sandbox into the cda docker network</span><span class="token comment" spellcheck="true"># 将原本的run语句注释，修改为以下语句（将网络模式修改为host）</span><span class="token comment" spellcheck="true">#docker run --privileged --name $name -h $hostname --network=cda --network-alias=$hostname -d $image</span>docker run --privileged --name <span class="token variable">$name</span> -h <span class="token variable">$hostname</span> --network<span class="token operator">=</span>host -d <span class="token variable">$image</span><span class="token comment" spellcheck="true"># Deploy the proxy container.  This script was generated by running</span><span class="token comment" spellcheck="true"># 这里为代理容器配置，因为host模式自动将所有端口映射到宿主机上，所以不再需要sandbox-proxy容器的支持</span><span class="token comment" spellcheck="true">#/sandbox/proxy/generate-proxy-deploy-script.sh</span><span class="token comment" spellcheck="true">#/sandbox/proxy/proxy-deploy.sh</span></code></pre><ol start="4"><li>运行脚本文件<code>/sandbox/sandbox-deploy.sh</code>，重新生成容器</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># sh sandbox-deploy.sh </span>12e3df82d057057c6af78eea1c8bd9eb9156ebe0bac3dc90d2fec8377f48aa6f<span class="token comment" spellcheck="true"># 可以看到此时只剩下sandbox-hdp-security一个容器在运行</span><span class="token punctuation">[</span>root@sandbox-host sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker ps</span>CONTAINER ID  IMAGE                                  COMMAND           CREATED        STATUS       PORTS  NAMES12e3df82d057  hortonworks/sandbox-hdp-security:3.0   <span class="token string">"/usr/sbin/init"</span>  6 seconds ago  Up 3 seconds        sandbox-hdp-security</code></pre><ol start="5"><li>最后进行各种初始化配置即可<br>进入sandbox容器，重置Ambari admin密码</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker exec -it sandbox-hdp-security /bin/bash</span><span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-admin-password-reset </span>Please <span class="token keyword">set</span> the password <span class="token keyword">for</span> admin: Please retype the password <span class="token keyword">for</span> admin: The admin password has been set.Restarting ambari-server to <span class="token function">make</span> the password change effective<span class="token punctuation">..</span>.Using python  /usr/bin/pythonRestarting ambari-serverAmbari Server is not runningAmbari Server running with administrator privileges.Organizing resource files at /var/lib/ambari-server/resources<span class="token punctuation">..</span>.Ambari database consistency check started<span class="token punctuation">..</span>.Server PID at: /var/run/ambari-server/ambari-server.pidServer out at: /var/log/ambari-server/ambari-server.outServer log at: /var/log/ambari-server/ambari-server.logWaiting <span class="token keyword">for</span> server start<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Server started listening on 8080DB configs consistency check: no errors and warnings were found.</code></pre><p>访问8080端口，到Ambari界面，登录后重启服务即可。</p><p>SandBox使用参照：<br><a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/" target="_blank" rel="noopener">SandBox-HDP使用详解</a><br><strong>注意：由于没有运行sandbox-proxy容器，1080端口已经无法访问</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SandBox上传文件到HDFS时，文件创建成功，向文件写入数据失败问题分析和解决方案。&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="HDP" scheme="http://cyanide.top/tags/HDP/"/>
    
      <category term="SandBox" scheme="http://cyanide.top/tags/SandBox/"/>
    
      <category term="HDFS" scheme="http://cyanide.top/tags/HDFS/"/>
    
  </entry>
  
  <entry>
    <title>SandBox-HDP使用详解</title>
    <link href="http://cyanide.top/2019/04/04/SandBox-HDP%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/"/>
    <id>http://cyanide.top/2019/04/04/SandBox-HDP使用详解/</id>
    <published>2019-04-04T01:36:23.000Z</published>
    <updated>2019-04-04T01:36:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>SandBox HDP版本3.0.1</p><a id="more"></a><p>官方文档介绍得非常详细，本文提取一些关键点作介绍，参考官网教程：<br><a href="https://hortonworks.com/tutorial/hortonworks-sandbox-guide/section/1/" target="_blank" rel="noopener">Sandbox Docs</a><br><a href="https://hortonworks.com/tutorial/hortonworks-sandbox-guide/section/3/" target="_blank" rel="noopener">Sandbox Port Forwards</a><br><a href="https://hortonworks.com/tutorial/sandbox-architecture/" target="_blank" rel="noopener">Sandbox Architecture</a><br><a href="https://hortonworks.com/tutorial/learning-the-ropes-of-the-hortonworks-sandbox/" target="_blank" rel="noopener">Learning the Ropes of the HDP Sandbox</a></p><h3 id="SandBox是什么"><a href="#SandBox是什么" class="headerlink" title="SandBox是什么"></a>SandBox是什么</h3><blockquote><p>The Sandbox is a straightforward, pre-configured, learning environment that contains the latest developments from Apache Hadoop, specifically the Hortonworks Data Platform (HDP). The Sandbox comes packaged in a virtual environment that can run in the cloud or on your personal machine. The Sandbox allows you to learn and explore HDP on your own.</p></blockquote><p>SandBox是Hortonworks提供的单机版HDP或HDF环境，主要用于测试和学习使用，对于没有服务器集群又想使用HDP/HDF的情况，SandBox是不二之选。<br>另外，SandBox里面内置了<code>DAS（Data Analytics Studio）</code>，非SandBox版本是没有这个的，需要购买Hortonworks服务才的获取到安装包。<br>SandBox提供三种安装方式：<code>VirtualBox虚拟机</code>、<code>VMware虚拟机</code>、<code>Docker容器</code>。<br>本文主要针对讲SandBox-HDP，HDF安装使用和HDP大致相同。<br>安装教程参考：<br><a href="http://blog.hming.org/2019/04/02/安装SandBox-HDP（Docker版）" target="_blank" rel="noopener">安装SandBox HDP（Docker版）</a><br><a href="http://blog.hming.org/2019/04/02/安装SandBox-HDP（VMware版）" target="_blank" rel="noopener">安装SandBox HDP（VMware版）</a></p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>一个运行中的SandBox-HDP 3.0.1</p><h3 id="web访问"><a href="#web访问" class="headerlink" title="web访问"></a>web访问</h3><p>1080端口为sandbox容器web服务端口，可以通过浏览器访问该端口，得到以下界面：<br><img src="http://image.hming.org/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/sandbox%E9%A1%B5%E9%9D%A2.png" alt="sandbox页面"><br>左侧launch dashboard直接进入ambari管理界面，登录admin账号需要进入容器修改ambari管理员密码<br>右侧则是一些链接，包括ambari管理地址、Ranger地址、DAS地址等</p><p>4200端口则提供了一个浏览器访问命令行的接口：<br><img src="http://image.hming.org/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AEhdp%E5%AE%B9%E5%99%A8.png" alt="浏览器访问hdp容器"><br>使用<code>root</code>登录，默认密码为<code>hadoop</code>，第一次登录会提示修改root密码，对密码强度会有要求</p><h3 id="登录到HDP环境主机"><a href="#登录到HDP环境主机" class="headerlink" title="登录到HDP环境主机"></a>登录到HDP环境主机</h3><p>在运行docker的主机上可以通过<code>2222</code>端口登录到HDP docker主机中，也可以通过<code>docker exec</code>命令进入<br>在其他机器上想登录到HDP主机就只能通过SSH了</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># SSH登录需要输入密码，root初始密码为hadoop</span><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh 127.0.0.1 -p 2222</span>root@127.0.0.1`s password: Last login: Thu Apr  4 08:22:27 2019 from 172.18.0.3<span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span class="token comment" spellcheck="true"># docker命令可以直接进入</span><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker exec -it sandbox-hdp /bin/bash</span><span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><h3 id="登录到Ambari界面"><a href="#登录到Ambari界面" class="headerlink" title="登录到Ambari界面"></a>登录到Ambari界面</h3><p>默认提供的账户，更多账号信息参考<a href="https://hortonworks.com/tutorial/learning-the-ropes-of-the-hortonworks-sandbox/#login-credentials" target="_blank" rel="noopener">官网</a></p><table><thead><tr><th align="center">用户</th><th align="center">密码</th></tr></thead><tbody><tr><td align="center">admin</td><td align="center">参考<a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/#重置Ambari管理员密码" target="_blank" rel="noopener">重置管理员密码</a></td></tr><tr><td align="center">maria_dev</td><td align="center">maria_dev</td></tr><tr><td align="center">raj_ops</td><td align="center">raj_ops</td></tr><tr><td align="center">holger_gov</td><td align="center">holger_gov</td></tr><tr><td align="center">amy_ds</td><td align="center">amy_ds</td></tr></tbody></table><h3 id="重置Ambari管理员密码"><a href="#重置Ambari管理员密码" class="headerlink" title="重置Ambari管理员密码"></a>重置Ambari管理员密码</h3><ol><li>以root用户登录到HDP主机<pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh 127.0.0.1 -p 2222</span>root@127.0.0.1`s password: Last login: Thu Apr  4 08:22:27 2019 from 172.18.0.3<span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre></li><li>运行<code>ambari-admin-password-reset</code>命令，根据提示修改密码<pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-admin-password-reset</span>Please <span class="token keyword">set</span> the password <span class="token keyword">for</span> admin: Please retype the password <span class="token keyword">for</span> admin: </code></pre></li></ol><p>The admin password has been set.<br>Restarting ambari-server to make the password change effective…</p><p>Using python  /usr/bin/python<br>Restarting ambari-server<br>Waiting for server stop…<br>Ambari Server stopped<br>Ambari Server running with administrator privileges.<br>Organizing resource files at /var/lib/ambari-server/resources…<br>Ambari database consistency check started…<br>Server PID at: /var/run/ambari-server/ambari-server.pid<br>Server out at: /var/log/ambari-server/ambari-server.out<br>Server log at: /var/log/ambari-server/ambari-server.log<br>Waiting for server start……………………………………………………………………………………….<br>DB configs consistency check: no errors and warnings were found.<br>ERROR: Exiting with exit code 1.<br>REASON: Server not yet listening on http port 8080 after 90 seconds. Exiting.</p><pre><code>&gt; 可能会遇到报错  `ERROR: Exiting with exit code 1.    REASON: Server not yet listening on http port 8080 after 90 seconds. Exiting.`  这是由于SandBox中所有服务都在一个节点上，启动Ambari比较慢，超过了90秒，实际上这个错不会有任何影响  可以通过编辑`/etc/ambari-server/conf/ambari.properties`文件，添加一行`server.startup.web.timeout = 150`来增加超时时间的方法解决3. 执行命令后Ambari服务会重启，然后就可以通过新的admin密码登录Ambari### 新增host映射Ambari中有些内部链接是通过`sandbox-hdp.hortonworks.com`域名去访问的，比如`HDFS NameNode UI`可以在需要访问的主机上增加host映射方便访问### 数据库初始密码#### PostgreSQL查看ambari用户的密码，默认为`bigdata````bash[root@sandbox-hdp ~]# grep &quot;password&quot; /etc/ambari-server/conf/ambari.propertiesserver.jdbc.rca.user.passwd=/etc/ambari-server/conf/password.datserver.jdbc.user.passwd=/etc/ambari-server/conf/password.dat[root@sandbox-hdp ~]# cat /etc/ambari-server/conf/password.dat bigdata</code></pre><p>使用ambari用户登录postgreSQL</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># psql -U ambari -W</span>Password <span class="token keyword">for</span> user ambari: psql <span class="token punctuation">(</span>9.6.11<span class="token punctuation">)</span>Type <span class="token string">"help"</span> <span class="token keyword">for</span> help.ambari<span class="token operator">=</span><span class="token operator">></span> </code></pre><h4 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h4><p>内置MySQL使用的是Hive新建的MySQL，初始密码为<code>hortonworks1</code><br>登录ambari postgreSQL查找密码</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># psql -U ambari -W</span>Password <span class="token keyword">for</span> user ambari: psql <span class="token punctuation">(</span>9.6.11<span class="token punctuation">)</span>Type <span class="token string">"help"</span> <span class="token keyword">for</span> help.ambari<span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">select</span> version,config_id,type_name,config_data from clusterconfig where type_name<span class="token operator">=</span><span class="token string">'hive-site'</span><span class="token punctuation">;</span></code></pre><p>在结果里查找内容：javax.jdo.option.ConnectionPassword</p><h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><h4 id="远程向HDFS上传文件失败问题"><a href="#远程向HDFS上传文件失败问题" class="headerlink" title="远程向HDFS上传文件失败问题"></a>远程向HDFS上传文件失败问题</h4><p>参照<a href="http://blog.hming.org/2019/04/16/SandBox-HDFS%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">SandBox HDFS上传文件失败问题</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SandBox HDP版本3.0.1&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="HDP" scheme="http://cyanide.top/tags/HDP/"/>
    
      <category term="SandBox" scheme="http://cyanide.top/tags/SandBox/"/>
    
  </entry>
  
  <entry>
    <title>安装SandBox HDP（VMware版）</title>
    <link href="http://cyanide.top/2019/04/02/%E5%AE%89%E8%A3%85SandBox-HDP%EF%BC%88VMware%E7%89%88%EF%BC%89/"/>
    <id>http://cyanide.top/2019/04/02/安装SandBox-HDP（VMware版）/</id>
    <published>2019-04-02T03:28:35.000Z</published>
    <updated>2019-04-02T03:28:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>SandBox HDP版本3.0.1，安装环境为Windows 10</p><a id="more"></a><p>参考官网教程：<a href="https://hortonworks.com/tutorial/sandbox-deployment-and-install-guide/section/2/" target="_blank" rel="noopener">Deploying Hortonworks Sandbox on VMWare</a></p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><table><thead><tr><th align="center">方面</th><th align="center">要求</th></tr></thead><tbody><tr><td align="center">软件</td><td align="center"><a href="https://my.vmware.com/cn/web/vmware/downloads" target="_blank" rel="noopener">安装VMware</a></td></tr><tr><td align="center">内存</td><td align="center">推荐16G以上（会开一个内存为10G的虚拟机）</td></tr><tr><td align="center">### 运行原理</td><td align="center"></td></tr><tr><td align="center">VMware启动了一个Linux虚拟机，在Linux虚拟机里面会启动两个docker容器</td><td align="center"></td></tr><tr><td align="center">```bash</td><td align="center"></td></tr><tr><td align="center">[root@sandbox-host ~]# docker images</td><td align="center"></td></tr><tr><td align="center">REPOSITORY                         TAG     IMAGE ID        CREATED        SIZE</td><td align="center"></td></tr><tr><td align="center">hortonworks/sandbox-proxy          1.0     ca272ae0e63a    4 months ago   109MB</td><td align="center"></td></tr><tr><td align="center">hortonworks/sandbox-hdp-security   3.0     ae1d1779b081    4 months ago   27.5GB</td><td align="center"></td></tr><tr><td align="center">```</td><td align="center"></td></tr><tr><td align="center"><code>sandbox-proxy</code>容器负责代理转发一些端口</td><td align="center"></td></tr><tr><td align="center"><code>sandbox-hdp-security</code>容器则是HDP环境</td><td align="center"></td></tr><tr><td align="center">所以，要对HDP环境进行修改，比如修改ambari管理员密码，就需要进入docker容器里面</td><td align="center"></td></tr><tr><td align="center">可以通过<code>ssh</code>登录<code>2222</code>端口，也可以通过<code>docker exec</code>命令进入，docker相关命令参考<a href="http://blog.hming.org/2018/09/18/Docker%E6%9B%BF%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/" target="_blank" rel="noopener">Docker替换镜像源与常用命令</a></td><td align="center"></td></tr><tr><td align="center">### 下载镜像文件</td><td align="center"></td></tr><tr><td align="center">到<a href="https://hortonworks.com/downloads/#sandbox" target="_blank" rel="noopener">官网</a>下载ova格式的镜像文件（HDP_3.0.1_vmware_181205.ova 20.5G）</td><td align="center"></td></tr><tr><td align="center"><img src="http://image.hming.org/%E5%AE%89%E8%A3%85sandbox-VMware/VMware%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD.png" alt="镜像文件下载"></td><td align="center"></td></tr><tr><td align="center">下载可能需要注册，随便填就行了</td><td align="center"></td></tr><tr><td align="center">### 将.ova镜像导入到VMware中</td><td align="center"></td></tr><tr><td align="center">1. 打开VMware，点击<code>文件</code>-&gt;<code>打开</code>，导入刚才下载的文件：<code>HDP_3.0.1_vmware_181205.ova</code></td><td align="center"></td></tr><tr><td align="center"><img src="http://image.hming.org/%E5%AE%89%E8%A3%85sandbox-VMware/VMware%E5%AF%BC%E5%85%A5%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6.png" alt="导入镜像文件"></td><td align="center"></td></tr><tr><td align="center">2. 开启虚拟机（这里可以看到虚拟机的一些信息，包括内存磁盘等）</td><td align="center"></td></tr><tr><td align="center"><img src="http://image.hming.org/%E5%AE%89%E8%A3%85sandbox-VMware/VMware%E5%BC%80%E5%90%AF%E8%99%9A%E6%8B%9F%E6%9C%BA.png" alt="开启虚拟机"></td><td align="center"></td></tr><tr><td align="center">3. 开启后可能会遇到无法连接网络的问题，这时候选择桥接模式，重启一下就行</td><td align="center"></td></tr><tr><td align="center"><img src="http://image.hming.org/%E5%AE%89%E8%A3%85sandbox-VMware/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F.png" alt="虚拟机网络连接方式"></td><td align="center"></td></tr><tr><td align="center">### 如何使用</td><td align="center"></td></tr><tr><td align="center">成功运行后窗口会打印一些信息，可以通过这些信息连接到虚拟机</td><td align="center"></td></tr><tr><td align="center"><img src="http://image.hming.org/%E5%AE%89%E8%A3%85sandbox-VMware/%E8%BF%90%E8%A1%8C%E6%88%90%E5%8A%9F%E5%90%8E%E6%89%93%E5%8D%B0%E4%BF%A1%E6%81%AF.png" alt="运行成功后打印信息"></td><td align="center"></td></tr><tr><td align="center">上图中的1080端口为sandbox端口，可以通过浏览器访问该端口，得到以下界面：</td><td align="center"></td></tr><tr><td align="center"><img src="http://image.hming.org/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/sandbox%E9%A1%B5%E9%9D%A2.png" alt="sandbox页面"></td><td align="center"></td></tr><tr><td align="center">左侧launch dashboard直接进入ambari管理界面，右侧则是一些链接，包括ambari管理地址、Ranger地址、DAS地址等</td><td align="center"></td></tr><tr><td align="center">4200端口则提供了一个浏览器访问命令行的接口：</td><td align="center"></td></tr><tr><td align="center"><img src="http://image.hming.org/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AEhdp%E5%AE%B9%E5%99%A8.png" alt="浏览器访问hdp容器"></td><td align="center"></td></tr><tr><td align="center">使用<code>root</code>登录，默认密码为<code>hadoop</code>，第一次登录会提示修改root密码，对密码强度会有要求</td><td align="center"></td></tr></tbody></table><p>本文到此为止，更详细的使用教程，请参照<a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/" target="_blank" rel="noopener">SandBox-HDP使用详解</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SandBox HDP版本3.0.1，安装环境为Windows 10&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="HDP" scheme="http://cyanide.top/tags/HDP/"/>
    
      <category term="SandBox" scheme="http://cyanide.top/tags/SandBox/"/>
    
      <category term="虚拟机" scheme="http://cyanide.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
      <category term="VMware" scheme="http://cyanide.top/tags/VMware/"/>
    
  </entry>
  
  <entry>
    <title>安装SandBox HDP（Docker版）</title>
    <link href="http://cyanide.top/2019/04/02/%E5%AE%89%E8%A3%85SandBox-HDP%EF%BC%88Docker%E7%89%88%EF%BC%89/"/>
    <id>http://cyanide.top/2019/04/02/安装SandBox-HDP（Docker版）/</id>
    <published>2019-04-02T03:28:17.000Z</published>
    <updated>2019-06-05T04:00:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>SandBox HDP版本3.0.1，安装环境为CentOS7</p><a id="more"></a><p>参考官网教程：<a href="https://hortonworks.com/tutorial/sandbox-deployment-and-install-guide/section/3/" target="_blank" rel="noopener">Deploying Hortonworks Sandbox on Docker</a></p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><table><thead><tr><th align="center">方面</th><th align="center">要求</th></tr></thead><tbody><tr><td align="center">软件</td><td align="center"><a href="http://blog.hming.org/2018/09/18/Docker%E6%9B%BF%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#%E5%AE%89%E8%A3%85" target="_blank" rel="noopener">安装docker</a></td></tr><tr><td align="center">内存</td><td align="center">官方推荐docker容器至少10G</td></tr><tr><td align="center">磁盘</td><td align="center">docker镜像目录至少30G（sandbox镜像27.5G）</td></tr><tr><td align="center">### 下载脚本文件</td><td align="center"></td></tr><tr><td align="center">到<a href="https://hortonworks.com/downloads/#sandbox" target="_blank" rel="noopener">官网</a>下载zip格式的shell脚本文件</td><td align="center"></td></tr><tr><td align="center"><img src="http://image.hming.org/%E5%AE%89%E8%A3%85sandbox-docker/docker%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD.png" alt="脚本下载"></td><td align="center"></td></tr><tr><td align="center">下载可能需要注册，随便填就行了。压缩包内容如下：</td><td align="center"></td></tr><tr><td align="center"><img src="http://image.hming.org/%E5%AE%89%E8%A3%85sandbox-docker/docker%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E9%A2%84%E8%A7%88.png" alt><img src="http://image.hming.org/%E5%AE%89%E8%A3%85sandbox-docker/docker%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E9%A2%84%E8%A7%882.png" alt></td><td align="center"></td></tr><tr><td align="center">需要将脚本上传到Linux并解压</td><td align="center"></td></tr><tr><td align="center">```bash</td><td align="center"></td></tr><tr><td align="center">[root@sandbox opt]# ls</td><td align="center"></td></tr><tr><td align="center">assets  docker-deploy-hdp30.sh</td><td align="center"></td></tr><tr><td align="center">```</td><td align="center"></td></tr><tr><td align="center">### 执行脚本</td><td align="center"></td></tr><tr><td align="center">#### 1. 在Linux中执行<code>docker-deploy-hdp30.sh</code>脚本，拉取镜像，运行容器</td><td align="center"></td></tr><tr><td align="center">```bash</td><td align="center"></td></tr><tr><td align="center">[root@sandbox opt]# sh docker-deploy-hdp30.sh</td><td align="center"></td></tr><tr><td align="center">+ registry=hortonworks</td><td align="center"></td></tr><tr><td align="center">+ name=sandbox-hdp</td><td align="center"></td></tr><tr><td align="center">+ version=3.0.1</td><td align="center"></td></tr><tr><td align="center">+ proxyName=sandbox-proxy</td><td align="center"></td></tr><tr><td align="center">+ proxyVersion=1.0</td><td align="center"></td></tr><tr><td align="center">+ flavor=hdp</td><td align="center"></td></tr><tr><td align="center">+ echo hdp</td><td align="center"></td></tr><tr><td align="center">+ mkdir -p sandbox/proxy/conf.d</td><td align="center"></td></tr><tr><td align="center">+ mkdir -p sandbox/proxy/conf.stream.d</td><td align="center"></td></tr><tr><td align="center">+ docker pull hortonworks/sandbox-hdp:3.0.1</td><td align="center"></td></tr><tr><td align="center">Trying to pull repository docker.io/hortonworks/sandbox-hdp …</td><td align="center"></td></tr><tr><td align="center">3.0.1: Pulling from docker.io/hortonworks/sandbox-hdp</td><td align="center"></td></tr><tr><td align="center">70799bbf2226: Pull complete</td><td align="center"></td></tr><tr><td align="center">40963917cdad: Pull complete</td><td align="center"></td></tr><tr><td align="center">3fe9adbb8d7e: Pull complete</td><td align="center"></td></tr><tr><td align="center">ee3ec4e8cb3d: Pull complete</td><td align="center"></td></tr><tr><td align="center">7ea5917732c0: Pull complete</td><td align="center"></td></tr><tr><td align="center">2d951411620c: Pull complete</td><td align="center"></td></tr><tr><td align="center">f4c5e354e7fd: Pull complete</td><td align="center"></td></tr><tr><td align="center">22ffa6ef360f: Pull complete</td><td align="center"></td></tr><tr><td align="center">2060aa0f3751: Pull complete</td><td align="center"></td></tr><tr><td align="center">ca01ba34744d: Pull complete</td><td align="center"></td></tr><tr><td align="center">83326dded077: Pull complete</td><td align="center"></td></tr><tr><td align="center">eb3d71b90b73: Pull complete</td><td align="center"></td></tr><tr><td align="center">bdd1cab41c81: Pull complete</td><td align="center"></td></tr><tr><td align="center">500cc770c4bd: Pull complete</td><td align="center"></td></tr><tr><td align="center">0cb1decd5474: Pull complete</td><td align="center"></td></tr><tr><td align="center">b9591f4b6855: Pull complete</td><td align="center"></td></tr><tr><td align="center">f28e56086127: Pull complete</td><td align="center"></td></tr><tr><td align="center">e7de4e7d0bca: Pull complete</td><td align="center"></td></tr><tr><td align="center">ec77967d2166: Pull complete</td><td align="center"></td></tr><tr><td align="center">4fdcae170114: Pull complete</td><td align="center"></td></tr><tr><td align="center">6347f5df8ffc: Pull complete</td><td align="center"></td></tr><tr><td align="center">6a6ecc232709: Pull complete</td><td align="center"></td></tr><tr><td align="center">ea845898ff50: Pull complete</td><td align="center"></td></tr><tr><td align="center">02135573b1bf: Pull complete</td><td align="center"></td></tr><tr><td align="center">cb0176867cd8: Pull complete</td><td align="center"></td></tr><tr><td align="center">3c08321268fd: Pull complete</td><td align="center"></td></tr><tr><td align="center">82e82a97c465: Pull complete</td><td align="center"></td></tr><tr><td align="center">8aaaa48ed101: Pull complete</td><td align="center"></td></tr><tr><td align="center">74b321ac2ac5: Pull complete</td><td align="center"></td></tr><tr><td align="center">569da02c0a66: Pull complete</td><td align="center"></td></tr><tr><td align="center">af40820407ef: Pull complete</td><td align="center"></td></tr><tr><td align="center">Digest: sha256:7b767af7b42030fb1dd0f672b801199241e6bef1258e3ce57361edb779d95921</td><td align="center"></td></tr><tr><td align="center">Status: Downloaded newer image for docker.io/hortonworks/sandbox-hdp:3.0.1</td><td align="center"></td></tr><tr><td align="center">+ docker pull hortonworks/sandbox-proxy:1.0</td><td align="center"></td></tr><tr><td align="center">Trying to pull repository docker.io/hortonworks/sandbox-proxy …</td><td align="center"></td></tr><tr><td align="center">1.0: Pulling from docker.io/hortonworks/sandbox-proxy</td><td align="center"></td></tr><tr><td align="center">951bdea65c93: Pull complete</td><td align="center"></td></tr><tr><td align="center">4b9047c5fbbb: Pull complete</td><td align="center"></td></tr><tr><td align="center">773156407aae: Pull complete</td><td align="center"></td></tr><tr><td align="center">d8524176841d: Pull complete</td><td align="center"></td></tr><tr><td align="center">Digest: sha256:42e4cfbcbb76af07e5d8f47a183a0d4105e65a1e7ef39fe37ab746e8b2523e9e</td><td align="center"></td></tr><tr><td align="center">Status: Downloaded newer image for docker.io/hortonworks/sandbox-proxy:1.0</td><td align="center"></td></tr><tr><td align="center">+ ‘[‘ hdp == hdf ‘]’</td><td align="center"></td></tr><tr><td align="center">+ ‘[‘ hdp == hdp ‘]’</td><td align="center"></td></tr><tr><td align="center">+ hostname=sandbox-hdp.hortonworks.com</td><td align="center"></td></tr><tr><td align="center">++ docker images</td><td align="center"></td></tr><tr><td align="center">++ awk ‘{print $2}’</td><td align="center"></td></tr><tr><td align="center">++ grep hortonworks/sandbox-hdp</td><td align="center"></td></tr><tr><td align="center">+ version=3.0.1</td><td align="center"></td></tr><tr><td align="center">+ docker network create cda</td><td align="center"></td></tr><tr><td align="center">7f641a6c16cf73df1079f241e76a318f3094f4303feaeae1c0a50c1b58c9d1ee</td><td align="center"></td></tr><tr><td align="center">+ docker run –privileged –name sandbox-hdp -h sandbox-hdp.hortonworks.com –network=cda –network-alias=sandbox-hdp.hortonworks.com -d hortonworks/sandbox-hdp:3.0.1</td><td align="center"></td></tr><tr><td align="center">59cb51cd71faa11218a12ee3f8c8ea1e58790025428a4573e476c1ddd118c202</td><td align="center"></td></tr><tr><td align="center">+ echo ‘ Remove existing postgres run files. Please wait’</td><td align="center"></td></tr><tr><td align="center">Remove existing postgres run files. Please wait</td><td align="center"></td></tr><tr><td align="center">+ sleep 2</td><td align="center"></td></tr><tr><td align="center">+ docker exec -t sandbox-hdp sh -c ‘rm -rf /var/run/postgresql/*; systemctl restart postgresql-9.6.service;’</td><td align="center"></td></tr><tr><td align="center">+ sed s/sandbox-hdp-security/sandbox-hdp/g assets/generate-proxy-deploy-script.sh</td><td align="center"></td></tr><tr><td align="center">+ mv -f assets/generate-proxy-deploy-script.sh.new assets/generate-proxy-deploy-script.sh</td><td align="center"></td></tr><tr><td align="center">+ chmod +x assets/generate-proxy-deploy-script.sh</td><td align="center"></td></tr><tr><td align="center">+ assets/generate-proxy-deploy-script.sh</td><td align="center"></td></tr><tr><td align="center">+ grep MINGW</td><td align="center"></td></tr><tr><td align="center">+ uname</td><td align="center"></td></tr><tr><td align="center">+ chmod +x sandbox/proxy/proxy-deploy.sh</td><td align="center"></td></tr><tr><td align="center">+ sandbox/proxy/proxy-deploy.sh</td><td align="center"></td></tr><tr><td align="center">c1f52cfec560982477e4b6c69f4cc95309bd93907196761ed5eff7222744743e</td><td align="center"></td></tr><tr><td align="center">```</td><td align="center"></td></tr></tbody></table><blockquote><p>注意：镜像文件特别大，国内拉取非常慢，可通过代理等方式拉取。</p></blockquote><h4 id="2-使用docker-ps查看生成的容器"><a href="#2-使用docker-ps查看生成的容器" class="headerlink" title="2. 使用docker ps查看生成的容器"></a>2. 使用<code>docker ps</code>查看生成的容器</h4><p><img src="http://image.hming.org/%E5%AE%89%E8%A3%85sandbox-docker/docker-ps-hdp-output.jpg" alt><br>可以看到有两个容器生成正在运行<br><code>sandbox-proxy</code>容器负责将HDP中的各个端口映射到主机上<br><code>sandbox-hdp</code>则是HDP主要环境的容器，所有的hdp组件都是在这个容器里面运行</p><h4 id="3-执行完脚本，相应的目录下会生成一个文件sandbox-flavor和一个文件夹sandbox"><a href="#3-执行完脚本，相应的目录下会生成一个文件sandbox-flavor和一个文件夹sandbox" class="headerlink" title="3. 执行完脚本，相应的目录下会生成一个文件sandbox-flavor和一个文件夹sandbox"></a>3. 执行完脚本，相应的目录下会生成一个文件<code>sandbox-flavor</code>和一个文件夹<code>sandbox</code></h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos4 opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>assets  docker-deploy-hdp30.sh  sandbox  sandbox-flavor</code></pre><h4 id="4-脚本文件只需要执行一次，如果需要停止或重启HDP环境，只需要停止-重启相应的docker容器"><a href="#4-脚本文件只需要执行一次，如果需要停止或重启HDP环境，只需要停止-重启相应的docker容器" class="headerlink" title="4. 脚本文件只需要执行一次，如果需要停止或重启HDP环境，只需要停止/重启相应的docker容器"></a>4. 脚本文件只需要执行<code>一次</code>，如果需要停止或重启HDP环境，只需要停止/重启相应的docker容器</h4><p>停止HDP集群</p><pre class=" language-bash"><code class="language-bash">docker stop sandbox-hdpdocker stop sandbox-proxy</code></pre><p>启动HDP集群</p><pre class=" language-bash"><code class="language-bash">docker start sandbox-hdpdocker start sandbox-proxy</code></pre><p>删除HDP容器</p><pre class=" language-bash"><code class="language-bash">docker stop sandbox-hdpdocker stop sandbox-proxydocker <span class="token function">rm</span> sandbox-hdpdocker <span class="token function">rm</span> sandbox-proxy</code></pre><p>移除sandbox镜像</p><pre class=" language-bash"><code class="language-bash">docker rmi hortonworks/sandbox-hdp:<span class="token punctuation">{</span>release<span class="token punctuation">}</span></code></pre><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>上图中的1080端口为sandbox端口，可以通过浏览器访问该端口，得到以下界面：<br><img src="http://image.hming.org/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/sandbox%E9%A1%B5%E9%9D%A2.png" alt="sandbox页面"><br>左侧launch dashboard直接进入ambari管理界面，右侧则是一些链接，包括ambari管理地址、Ranger地址、DAS地址等<br>4200端口则提供了一个浏览器访问命令行的接口：<br><img src="http://image.hming.org/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AEhdp%E5%AE%B9%E5%99%A8.png" alt="浏览器访问hdp容器"><br>使用<code>root</code>登录，默认密码为<code>hadoop</code>，第一次登录会提示修改root密码，对密码强度会有要求</p><p>本文到此为止，更详细的使用教程，请参照<a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/" target="_blank" rel="noopener">SandBox-HDP使用详解</a></p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos4 opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker logs sandbox-proxy</span>2019/04/04 05:53:28 <span class="token punctuation">[</span>emerg<span class="token punctuation">]</span> 1<span class="token comment" spellcheck="true">#1: host not found in upstream "sandbox-hdp" in /etc/nginx/conf.d/http-hdp.conf:9</span>nginx: <span class="token punctuation">[</span>emerg<span class="token punctuation">]</span> host not found <span class="token keyword">in</span> upstream <span class="token string">"sandbox-hdp"</span> <span class="token keyword">in</span> /etc/nginx/conf.d/http-hdp.conf:9</code></pre><p>这种情况是因为docker网络没有配置好，导致proxy容器无法使用nginx代理hdp容器<br>检查docker网络配置</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SandBox HDP版本3.0.1，安装环境为CentOS7&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Docker" scheme="http://cyanide.top/tags/Docker/"/>
    
      <category term="HDP" scheme="http://cyanide.top/tags/HDP/"/>
    
      <category term="SandBox" scheme="http://cyanide.top/tags/SandBox/"/>
    
  </entry>
  
  <entry>
    <title>Linux制作离线yum源</title>
    <link href="http://cyanide.top/2019/03/29/Linux%E5%88%B6%E4%BD%9C%E7%A6%BB%E7%BA%BFyum%E6%BA%90/"/>
    <id>http://cyanide.top/2019/03/29/Linux制作离线yum源/</id>
    <published>2019-03-29T06:40:35.000Z</published>
    <updated>2019-03-29T06:40:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>制作离线yum源的方法</p><a id="more"></a><p><a href="https://blog.csdn.net/huangjin0507/article/details/51351807" target="_blank" rel="noopener">参考</a></p><h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><ol><li>制作或挂载一个本地yum源目录</li><li>修改或增加repo配置文件指向<h3 id="离线yum包制作"><a href="#离线yum包制作" class="headerlink" title="离线yum包制作"></a>离线yum包制作</h3><h4 id="利用官方包"><a href="#利用官方包" class="headerlink" title="利用官方包"></a>利用官方包</h4><h5 id="下载ISO文件"><a href="#下载ISO文件" class="headerlink" title="下载ISO文件"></a>下载ISO文件</h5>到官网<a href="http://isoredirect.centos.org/" target="_blank" rel="noopener">http://isoredirect.centos.org/</a>下载镜像包，尽量下载<code>Everything ISO</code>版本，这里面的包最全，另外一个“DVD ISO”是通用版，里面的包并不全，还有一个“Minimal ISO”是Centos最小安装版（相当于是windows的纯净系统）。<br>下载文件名如：CentOS-7-x86_64-Everything-1810.iso<h5 id="挂载ISO到目录"><a href="#挂载ISO到目录" class="headerlink" title="挂载ISO到目录"></a>挂载ISO到目录</h5></li></ol><h4 id="自己制作包"><a href="#自己制作包" class="headerlink" title="自己制作包"></a>自己制作包</h4><h5 id="查看rpm包依赖与下载依赖包"><a href="#查看rpm包依赖与下载依赖包" class="headerlink" title="查看rpm包依赖与下载依赖包"></a>查看rpm包依赖与下载依赖包</h5><ol><li><p>查看.rpm 包依赖：<br><code>rpm -qpR [package]</code></p></li><li><p>通过<code>yum install --downloadonly --downloaddir=[download_dir] [package]</code> 来只下载所有依赖包不安装包<strong><code>(前提是当前环境没有安装该包)</code></strong></p><blockquote><p>在CentOS/RHEL 6或更早期的版本中，你需要安装一个单独yum插件(名称为<code>yum-plugin-downloadonly</code>)才能使用<code>--downloadonly</code>命令选项：</p><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> -y yum-plugin-downloadonly</code></pre></blockquote><p>#如果没有该插件，你会在使用yum时得到以下错误：<br>Command line error: no such option: –downloadonly<br>```</p></li><li><p>运行<code>yum list [package] --showduplicates</code> 来查看包的多个版本</p><h5 id="利用rpm包制作yum包"><a href="#利用rpm包制作yum包" class="headerlink" title="利用rpm包制作yum包"></a>利用rpm包制作yum包</h5></li><li><p>安装<code>createrepo</code>工具<br><code>createrepo</code>命令用来制作yum包，没有安装该软件可以通过下载<code>createrepo</code>的rpm包，通过rpm命令进行安装。</p></li><li><p>将所有的rpm包放到一个目录下</p></li><li><p>到rpm包的目录执行<code>createrepo .</code>命令</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop001 yum-repo<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># createrepo .</span></code></pre></li><li><p>之后会生成一个<code>repodata</code>的目录,该目录就成了一个yum源</p><h3 id="离线yum源配置"><a href="#离线yum源配置" class="headerlink" title="离线yum源配置"></a>离线yum源配置</h3></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;制作离线yum源的方法&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://cyanide.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://cyanide.top/tags/Linux/"/>
    
      <category term="yum" scheme="http://cyanide.top/tags/yum/"/>
    
      <category term="离线" scheme="http://cyanide.top/tags/%E7%A6%BB%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>Linux修改命令终端提示符</title>
    <link href="http://cyanide.top/2019/03/29/Linux%E4%BF%AE%E6%94%B9%E5%91%BD%E4%BB%A4%E7%BB%88%E7%AB%AF%E6%8F%90%E7%A4%BA%E7%AC%A6/"/>
    <id>http://cyanide.top/2019/03/29/Linux修改命令终端提示符/</id>
    <published>2019-03-29T03:47:18.000Z</published>
    <updated>2019-03-29T03:47:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux命令行是操作Linux的重要手段，命令行提示符千篇一律的格式有时会让命令和输出难以辨认，本文将介绍如何修改命令行提示符的格式。</p><a id="more"></a><h3 id="命令行提示符代表含义"><a href="#命令行提示符代表含义" class="headerlink" title="命令行提示符代表含义"></a>命令行提示符代表含义</h3><p>命令行提示符一般格式含义：<br><code>[root@sandbox ~]#</code></p><blockquote><p>其中@前<code>root</code>表示当前用户，@后<code>sandbox</code>表示当前主机名，<code>~</code>表示当前目录为家目录</p></blockquote><p>Linux命令行结尾的提示符有<code>#</code>和<code>$</code>两种不同的符号，如下所示：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#    #&lt;==这是超级管理员root用户对应的命令行。</span><span class="token punctuation">[</span>liming@sandbox ~<span class="token punctuation">]</span>$  <span class="token comment" spellcheck="true">#&lt;==这是普通用户liming对应的命令行。</span></code></pre><h3 id="修改命令行提示符格式"><a href="#修改命令行提示符格式" class="headerlink" title="修改命令行提示符格式"></a>修改命令行提示符格式</h3><p>Linux命令提示符由PS1环境变量控制，可以通过全局配置文件<code>/etc/bashrc</code>或<code>/etc/profile</code>中进行按需配置和调整。<br>查看当前PS1设置：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># set|grep PS1</span>PS1<span class="token operator">=</span><span class="token string">'[\u@\h \W]\$ '</span></code></pre><h4 id="PS1变量"><a href="#PS1变量" class="headerlink" title="PS1变量"></a>PS1变量</h4><p>最终使用：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">export</span> PS1<span class="token operator">=</span><span class="token string">'[\[\e[32;1m\]\u@\h \W\[\e[0m\]]\$ '</span></code></pre><p>参考：<a href="https://blog.51cto.com/oldboy/1926142" target="_blank" rel="noopener">1</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux命令行是操作Linux的重要手段，命令行提示符千篇一律的格式有时会让命令和输出难以辨认，本文将介绍如何修改命令行提示符的格式。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://cyanide.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://cyanide.top/tags/Linux/"/>
    
      <category term="命令行提示符" scheme="http://cyanide.top/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8F%90%E7%A4%BA%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Docker Alpine容器介绍</title>
    <link href="http://cyanide.top/2019/03/06/Docker-Alpine%E5%AE%B9%E5%99%A8%E4%BB%8B%E7%BB%8D/"/>
    <id>http://cyanide.top/2019/03/06/Docker-Alpine容器介绍/</id>
    <published>2019-03-06T12:44:02.000Z</published>
    <updated>2019-03-06T12:44:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>最小化容器Alpine介绍</p><a id="more"></a><p><a href="http://www.voidcn.com/article/p-ulbbnkky-brh.html" target="_blank" rel="noopener">http://www.voidcn.com/article/p-ulbbnkky-brh.html</a><br><a href="https://blog.phpgao.com/docker_alpine.html" target="_blank" rel="noopener">https://blog.phpgao.com/docker_alpine.html</a><br><a href="https://marshal.ohtly.com/2016/12/21/docker-container-and-alpine-bash-not-found/" target="_blank" rel="noopener">https://marshal.ohtly.com/2016/12/21/docker-container-and-alpine-bash-not-found/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最小化容器Alpine介绍&lt;/p&gt;
    
    </summary>
    
      <category term="容器" scheme="http://cyanide.top/categories/%E5%AE%B9%E5%99%A8/"/>
    
    
      <category term="容器" scheme="http://cyanide.top/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="Docker" scheme="http://cyanide.top/tags/Docker/"/>
    
      <category term="Alpine" scheme="http://cyanide.top/tags/Alpine/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7离线安装HDF</title>
    <link href="http://cyanide.top/2019/02/14/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDF/"/>
    <id>http://cyanide.top/2019/02/14/CentOS7离线安装HDF/</id>
    <published>2019-02-14T00:48:27.000Z</published>
    <updated>2019-02-14T00:48:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS7离线安装HDF，Ambari版本：2.7.3.0，HDF版本：3.3.1.0</p><a id="more"></a><h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><p>已存在Ambari和HDP环境，Ambari搭建参照<a href="https://blog.hming.org/2019/01/09/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/" target="_blank" rel="noopener">CentOS7离线安装HDP</a></p><h3 id="下载离线包"><a href="#下载离线包" class="headerlink" title="下载离线包"></a>下载离线包</h3><p><a href="https://docs.hortonworks.com/HDPDocuments/HDF3/HDF-3.3.1/release-notes/content/hdf_repository_locations.html" target="_blank" rel="noopener">HDF仓库地址</a><br>找到对应操作系统的包，下载HDF Management Pack与HDF RPM tarball两个包即可。（本文为CentOS7的包）</p><blockquote><p>注意：HDF RPM tarball包大小<code>3.6G</code>左右，HDF Management Pack包<code>96M</code>左右，请确保保存路径有足够空间</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll -h</span>total 3.7Gdrwxr-xr-x 3 root      root  4.0K Jan 16 15:00 ambari-rw-r--r-- 1 root      root  3.6G Dec 15 02:36 HDF-3.3.1.0-centos7-rpm.tar.gz-rw-r--r-- 1 root      root   96M Dec 15 02:13 hdf-ambari-mpack-3.3.1.0-10.tar.gzdrwxr-xr-x 3 ambari-qa <span class="token function">users</span> 4.0K Dec 11 11:49 HDPdrwxr-xr-x 3 ambari-qa <span class="token function">users</span> 4.0K Aug 13  2018 HDP-UTILS</code></pre><p>其中ambari、HDP、HDP-UTILS为<a href="https://blog.hming.org/2019/01/09/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/" target="_blank" rel="noopener">CentOS7离线安装HDP</a>中制作的yum本地源地址</p></blockquote><h3 id="制作HDF-yum镜像源"><a href="#制作HDF-yum镜像源" class="headerlink" title="制作HDF yum镜像源"></a>制作HDF yum镜像源</h3><p>参考<a href="https://blog.hming.org/2019/01/09/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/#%E5%88%B6%E4%BD%9C%E6%9C%AC%E5%9C%B0%E6%BA%90" target="_blank" rel="noopener">制作本地源</a>，将<code>HDF-3.3.1.0-centos7-rpm.tar.gz</code>包解压，制作yum本地源。</p><ol><li>解压到<code>httpd</code>服务路径(本文httpd服务路径为<code>/cloud/ambari</code>)<br>```bash<br>[root@master ambari]# pwd<br>/cloud/ambari<br>[root@master ambari]# tar -zxvf HDF-3.3.1.0-centos7-rpm.tar.gz<br>[root@node1 ambari]# ll -h<br>total 3.7G<br>drwxr-xr-x 3 root      root  4.0K Jan 16 15:00 ambari<br>drwxr-xr-x 3 ambari-qa users 4.0K Dec 15 02:19 HDF</li></ol><p>-rw-r–r– 1 root      root  3.6G Dec 15 02:36 HDF-3.3.1.0-centos7-rpm.tar.gz<br>-rw-r–r– 1 root      root   96M Dec 15 02:13 hdf-ambari-mpack-3.3.1.0-10.tar.gz<br>drwxr-xr-x 3 ambari-qa users 4.0K Dec 11 11:49 HDP<br>drwxr-xr-x 3 ambari-qa users 4.0K Aug 13  2018 HDP-UTILS</p><pre><code>2. 修改`./HDF/centos7/3.3.1.0-10/hdf.repo`文件为以下内容```bash#VERSION_NUMBER=3.3.1.0-10[HDF-3.3.1.0]name=HDF Version - HDF-3.3.1.0baseurl=http://192.168.0.151:88/ambari/HDF/centos7/3.3.1.0-10gpgcheck=1gpgkey=http://192.168.0.151:88/ambari/HDF/centos7/3.3.1.0-10/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1[HDP-UTILS-1.1.0.22]name=HDP-UTILS Version - HDP-UTILS-1.1.0.22baseurl=http://192.168.0.151:88/ambari/HDP-UTILS/centos7/1.1.0.22gpgcheck=1gpgkey=http://192.168.0.151:88/ambari/HDP-UTILS/centos7/1.1.0.22/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1</code></pre><blockquote><p>1)其中192.168.0.151:88为httpd的路径和端口，需根据实际情况修改。<br>2)HDP-UTILS如果在HDP中已经配置过，则这里可以删除。</p></blockquote><ol start="3"><li><p>拷贝<code>hdf.repo</code>文件到<code>/etc/yum.repos.d/</code>目录下，进行yum更新</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp hdf.repo /etc/yum.repos.d/</span><span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum clean all</span><span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum makecache</span><span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum repolist</span></code></pre><blockquote><p>如果yum报错，则可能是hdf源没有配置成功，或者<code>hdf.repo</code>文件有误，更正后重试即可。</p></blockquote></li><li><p>将<code>hdf.repo</code>拷贝到其他节点，然后每个节点进行yum更新</p></li></ol><h3 id="安装HDF-Management-Pack"><a href="#安装HDF-Management-Pack" class="headerlink" title="安装HDF Management Pack"></a>安装HDF Management Pack</h3><p>此处参考<a href="https://docs.hortonworks.com/HDPDocuments/HDF3/HDF-3.3.1/installing-hdf-on-hdp/content/installing_the_hdf_management_pack.html" target="_blank" rel="noopener">官方文档</a></p><ol><li>使用<code>ambari-server install-mpack</code>命令安装Management Pack<pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-server install-mpack --mpack=./hdf-ambari-mpack-3.3.1.0-10.tar.gz --verbose</span>Using python  /usr/bin/pythonInstalling management packINFO: Loading properties from /etc/ambari-server/conf/ambari.propertiesINFO: Installing management pack ./hdf-ambari-mpack-3.3.1.0-10.tar.gzINFO: Loading properties from /etc/ambari-server/conf/ambari.propertiesINFO: Download management pack to temp location /var/lib/ambari-server/data/tmp/hdf-ambari-mpack-3.3.1.0-10.tar.gzINFO: Loading properties from /etc/ambari-server/conf/ambari.properties<span class="token punctuation">..</span>.INFO: Loading properties from /etc/ambari-server/conf/ambari.propertiesINFO: Successfully switched addon services using config <span class="token function">file</span> /var/lib/ambari-server/resources/mpacks/hdf-ambari-mpack-3.3.1.0-10/hooks/HDF-3.3.json</code></pre></li></ol><p>INFO: Loading properties from /etc/ambari-server/conf/ambari.properties<br>Ambari Server ‘install-mpack’ completed successfully.</p><pre><code>2. 使用`ambari-server restart`命令重启ambari服务```bash[root@master ambari]# ambari-server restartUsing python  /usr/bin/pythonRestarting ambari-serverWaiting for server stop...Ambari Server stoppedAmbari Server running with administrator privileges.Organizing resource files at /var/lib/ambari-server/resources...Ambari database consistency check started...Server PID at: /var/run/ambari-server/ambari-server.pidServer out at: /var/log/ambari-server/ambari-server.outServer log at: /var/log/ambari-server/ambari-server.logWaiting for server start.......................Server started listening on 8080DB configs consistency check: no errors and warnings were found.</code></pre><h3 id="更新ambari服务中HDF源地址"><a href="#更新ambari服务中HDF源地址" class="headerlink" title="更新ambari服务中HDF源地址"></a>更新ambari服务中HDF源地址</h3><p>参考<a href="https://docs.hortonworks.com/HDPDocuments/HDF3/HDF-3.3.1/installing-hdf-on-hdp/content/update_the_hdf_base_url.html" target="_blank" rel="noopener">官方文档</a></p><ol><li>浏览器进入Ambari服务地址（默认端口为8080）</li><li>在右上角admin下拉框中选择Manage Ambari</li><li>选择左边栏的Versions，点击HDP版本链接</li><li>此时会发现Repositories中多出HDF-3.3一栏，填入之前制作的本地源地址即可<br>本文地址为：<a href="http://192.168.0.151:88/ambari/HDF/centos7/3.3.1.0-10" target="_blank" rel="noopener">http://192.168.0.151:88/ambari/HDF/centos7/3.3.1.0-10</a></li><li>点击save保存</li><li>返回主界面，添加service时就会发现多了NiFi等HDF支持的组件</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CentOS7离线安装HDF，Ambari版本：2.7.3.0，HDF版本：3.3.1.0&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="离线安装" scheme="http://cyanide.top/tags/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/"/>
    
      <category term="HDF" scheme="http://cyanide.top/tags/HDF/"/>
    
  </entry>
  
  <entry>
    <title>Maven使用Hortonworks依赖包</title>
    <link href="http://cyanide.top/2019/01/12/Maven%E4%BD%BF%E7%94%A8Hortonworks%E4%BE%9D%E8%B5%96%E5%8C%85/"/>
    <id>http://cyanide.top/2019/01/12/Maven使用Hortonworks依赖包/</id>
    <published>2019-01-12T03:32:16.000Z</published>
    <updated>2019-01-17T00:53:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>在项目中连接HDP时，会出现HortonWorks的Maven依赖包下载不了的情况，本文提供解决方案。</p><a id="more"></a><p>参考链接：<a href="https://community.hortonworks.com/questions/74655/where-can-i-find-hdp-maven-repos.html" target="_blank" rel="noopener">where can i find HDP maven Repos</a><br>在项目中连接HDP时，会出现HortonWorks的Maven依赖包下载不了的情况，只需要在pom.xml中添加如下代码：</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>hortonworks.extrepo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Hortonworks HDP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://repo.hortonworks.com/content/repositories/releases<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>hortonworks.other<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Hortonworks Other Dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://repo.hortonworks.com/content/groups/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span></code></pre><p>另外，在<a href="https://mvnrepository.com" target="_blank" rel="noopener">mvnrepository官网</a>最新版可能没有更新，可以去<a href="http://repo.hortonworks.com/content/repositories/releases" target="_blank" rel="noopener">HortonWorks依赖包官网</a>查看最新版本</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在项目中连接HDP时，会出现HortonWorks的Maven依赖包下载不了的情况，本文提供解决方案。&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Maven" scheme="http://cyanide.top/tags/Maven/"/>
    
      <category term="HDP" scheme="http://cyanide.top/tags/HDP/"/>
    
      <category term="Hortonworks" scheme="http://cyanide.top/tags/Hortonworks/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7离线安装HDP</title>
    <link href="http://cyanide.top/2019/01/09/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/"/>
    <id>http://cyanide.top/2019/01/09/CentOS7离线安装HDP/</id>
    <published>2019-01-09T12:07:15.000Z</published>
    <updated>2019-04-09T01:52:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS7离线安装HDP，Ambari版本：2.7.3.0，HDP版本：3.1.0.0</p><a id="more"></a><h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><table><thead><tr><th align="center">节点</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hdp001</td><td align="center">192.168.171.10</td></tr><tr><td align="center">hdp002</td><td align="center">192.168.171.11</td></tr><tr><td align="center">hdp003</td><td align="center">192.168.171.12</td></tr><tr><td align="center">### 环境准备</td><td align="center"></td></tr><tr><td align="center">#### 磁盘准备</td><td align="center"></td></tr><tr><td align="center">离线安装包共计10G左右，解压后共计11G左右，请保证有足够空间。</td><td align="center"></td></tr><tr><td align="center">#### 配置免密登录</td><td align="center"></td></tr><tr><td align="center">配置免密码登录教程请点击<a href="http://blog.hming.org/2018/09/16/Linux%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/" target="_blank" rel="noopener">这里</a></td><td align="center"></td></tr><tr><td align="center">#### 关闭防火墙</td><td align="center"></td></tr><tr><td align="center">查看防火墙状态</td><td align="center"></td></tr><tr><td align="center"><code>firewall-cmd --state</code>或<code>systemctl status firewalld</code></td><td align="center"></td></tr><tr><td align="center">临时关闭防火墙</td><td align="center"></td></tr><tr><td align="center"><code>systemctl stop firewalld</code></td><td align="center"></td></tr><tr><td align="center">禁止开机启动</td><td align="center"></td></tr><tr><td align="center"><code>systemctl disable firewalld</code></td><td align="center"></td></tr></tbody></table><h4 id="设置SELinux模式"><a href="#设置SELinux模式" class="headerlink" title="设置SELinux模式"></a>设置SELinux模式</h4><p>不关闭可能导致Apache http服务无法访问。</p><ol><li>查看SELinux状态：<code>getenforce</code><br>如果是<code>Permissive</code>或者<code>Disabled</code>则可以继续安装，如果显示<code>enforcing</code>，则需要进行以下步骤修改模式</li><li>编辑<code>/etc/selinux/config</code>文件</li><li>修改<code>SELINUX=enforcing</code>行内容为<code>SELINUX=permissive</code>或者<code>SELINUX=disabled</code></li><li>重启系统或者运行<code>setenforce 0</code>命令禁用SELinux</li></ol><h4 id="安装jdk、Python（所有节点）、MySQL（安装一个即可）"><a href="#安装jdk、Python（所有节点）、MySQL（安装一个即可）" class="headerlink" title="安装jdk、Python（所有节点）、MySQL（安装一个即可）"></a>安装jdk、Python（所有节点）、MySQL（安装一个即可）</h4><ol><li>配置java环境教程点击<a href="http://blog.hming.org/2018/09/14/Linux%E4%B8%8B%E5%AE%89%E8%A3%85Java/" target="_blank" rel="noopener">这里</a></li><li>安装/更新Python <code>yum -y install python</code></li><li>离线安装MySQL教程点击<a href="http://blog.hming.org/2018/12/08/CentOS7%E4%B8%8B%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85MySQL/" target="_blank" rel="noopener">这里</a><br>新建数据库hive、ambari（为后续安装做准备）。<pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> create database hive<span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span></code></pre></li></ol><p>mysql&gt; create database ambari;<br>Query OK, 1 row affected (0.00 sec)</p><pre><code>#### 下载离线包（包含HDP、ambari、HDP-UTILS、HDP-GPL（非必须））[Ambari-2.7.3.0下载地址](https://docs.hortonworks.com/HDPDocuments/Ambari-2.7.3.0/bk_ambari-installation/content/ambari_repositories.html)[HDP-3.1.0.0相关包下载地址](https://docs.hortonworks.com/HDPDocuments/Ambari-2.7.3.0/bk_ambari-installation/content/hdp_31_repositories.html)&gt; 注意：ambari包大小`1.81G`左右，HDP包`8.44G`左右，HDP-UTILS包`86.4M`左右，请确保保存路径有足够空间#### 安装httpd服务（Apache服务，ambari-server节点安装即可）&gt; 注意：selinux未关闭可能导致Apache服务地址403。```bash[root@hdp001 ~]# yum -y install httpd[root@hdp001 ~]# service httpd restartRedirecting to /bin/systemctl restart httpd.service</code></pre><p>访问服务器80端口，查看httpd服务是否开启。</p><blockquote><p>注意：配置信息如端口、映射路径可以通过编辑<code>/etc/httpd/conf/httpd.conf</code>文件进行修改</p></blockquote><h4 id="将压缩包解压到-var-www-html-下"><a href="#将压缩包解压到-var-www-html-下" class="headerlink" title="将压缩包解压到/var/www/html/下"></a>将压缩包解压到/var/www/html/下</h4><blockquote><p>注意：<br>1.如果httpd映射路径修改过，则以修改后的为准。<br>2.解压后一共约11G左右大小，请确保有足够空间。</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>/var/www/html/ambari<span class="token punctuation">[</span>root@hdp001 html<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># du -h -d 1</span>11G    ./ambari11G    <span class="token keyword">.</span><span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>ambari-2.7.3.0-centos7.tar.gz  HDP-3.1.0.0-centos7-rpm.tar.gz  HDP-UTILS-1.1.0.22-centos7.tar.gz<span class="token comment" spellcheck="true"># 解压...</span><span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>ambari ambari-2.7.3.0-centos7.tar.gz  HDP HDP-3.1.0.0-centos7-rpm.tar.gz  HDP-UTILS HDP-UTILS-1.1.0.22-centos7.tar.gz</code></pre><p>访问服务器80端口相应/ambari/地址，可以访问到文件和文件夹即可<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/httpd%E8%AE%BF%E9%97%AEambari%E5%9C%B0%E5%9D%80.png" alt></p><h3 id="制作本地源"><a href="#制作本地源" class="headerlink" title="制作本地源"></a>制作本地源</h3><ol><li><p>修改repo源文件</p><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim ambari/centos7/2.7.3.0-139/ambari.repo</span></code></pre><p> 修改<code>baseurl</code>与<code>gpgkey</code>值为Apache httpd服务能访问到的地址，如下：</p><pre class=" language-bash"><code class="language-bash"> <span class="token comment" spellcheck="true">#VERSION_NUMBER=2.7.3.0-139</span> <span class="token punctuation">[</span>ambari-2.7.3.0<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json</span> name<span class="token operator">=</span>ambari Version - ambari-2.7.3.0 baseurl<span class="token operator">=</span>http://hdp001:80/ambari/ambari/centos7/2.7.3.0-139 gpgcheck<span class="token operator">=</span>1 gpgkey<span class="token operator">=</span>http://hdp001:80/ambari/ambari/centos7/2.7.3.0-139/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins priority<span class="token operator">=</span>1</code></pre><p> HDP源修改方式同上</p><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim HDP/centos7/3.1.0.0-78/hdp.repo</span></code></pre><pre class=" language-bash"><code class="language-bash"> <span class="token comment" spellcheck="true">#VERSION_NUMBER=3.1.0.0-78</span> <span class="token punctuation">[</span>HDP-3.1.0.0<span class="token punctuation">]</span> name<span class="token operator">=</span>HDP Version - HDP-3.1.0.0 baseurl<span class="token operator">=</span>http://hdp001:80/ambari/HDP/centos7/3.1.0.0-78 gpgcheck<span class="token operator">=</span>1 gpgkey<span class="token operator">=</span>http://hdp001:80/ambari/HDP/centos7/3.1.0.0-78/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins enabled<span class="token operator">=</span>1 priority<span class="token operator">=</span>1 <span class="token punctuation">[</span>HDP-UTILS-1.1.0.22<span class="token punctuation">]</span> name<span class="token operator">=</span>HDP-UTILS Version - HDP-UTILS-1.1.0.22 baseurl<span class="token operator">=</span>http://hdp001:80/ambari/HDP-UTILS/centos7/1.1.0.22 gpgcheck<span class="token operator">=</span>1 gpgkey<span class="token operator">=</span>http://hdp001:80/ambari/HDP-UTILS/centos7/1.1.0.22/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins enabled<span class="token operator">=</span>1 priority<span class="token operator">=</span>1</code></pre><p> 将repo文件拷贝到<code>/etc/yum.repos.d/</code>目录</p><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp ambari/centos7/2.7.3.0-139/ambari.repo /etc/yum.repos.d/</span> <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp HDP/centos7/3.1.0.0-78/hdp.repo /etc/yum.repos.d/</span></code></pre></li><li><p>将repo文件拷贝到子节点</p><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /etc/yum.repos.d/</span> <span class="token punctuation">[</span>root@hdp001 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span> /etc/yum.repos.d <span class="token punctuation">[</span>root@hdp001 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp ambari.repo hdp002:/etc/yum.repos.d/</span> ambari.repo                                                                 100%  329   467.5KB/s   00:00     <span class="token punctuation">[</span>root@hdp001 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp ambari.repo hdp003:/etc/yum.repos.d/</span> ambari.repo                                                                 100%  329   510.4KB/s   00:00     <span class="token punctuation">[</span>root@hdp001 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp hdp.repo hdp002:/etc/yum.repos.d/</span> hdp.repo                                                                    100%  483   570.3KB/s   00:00     <span class="token punctuation">[</span>root@hdp001 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp hdp.repo hdp003:/etc/yum.repos.d/</span> hdp.repo                                                                    100%  483   352.4KB/s   00:00 </code></pre></li><li><p>每个节点清除yum缓存，重新建立缓存<br> 该环节遇到报错说明yum源配置不正确，检查一下所有repo文件</p><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum clean all</span> <span class="token punctuation">..</span>. <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum makecache</span> <span class="token punctuation">..</span>. <span class="token punctuation">[</span>root@hdp001 ambari<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum repolist</span> <span class="token punctuation">..</span>.</code></pre><h3 id="安装Ambari-server"><a href="#安装Ambari-server" class="headerlink" title="安装Ambari-server"></a>安装Ambari-server</h3><p>本次安装使用第三方数据库MySQL模式，默认为PostgreSQL模式（生产环境不推荐）。<br>需提前准备好MySQL数据库连接jar包，<a href="http://blog.hming.org/2018/12/09/MySQL%E8%BF%9E%E6%8E%A5%E9%A9%B1%E5%8A%A8%E5%8C%85%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">MySQL连接驱动包下载方法</a></p><h4 id="Ambari-server节点（主节点）安装Ambari-server"><a href="#Ambari-server节点（主节点）安装Ambari-server" class="headerlink" title="Ambari-server节点（主节点）安装Ambari-server"></a>Ambari-server节点（主节点）安装Ambari-server</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install ambari-server</span><span class="token punctuation">..</span>.</code></pre><h4 id="初始化设置"><a href="#初始化设置" class="headerlink" title="初始化设置"></a>初始化设置</h4><p>使用<code>ambari-server setup</code>命令进行初始化操作。</p></li></ol><blockquote><p>以下代码段中<code>#(1)</code>类似标识为注解。</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-server setup</span>Using python  /usr/bin/pythonSetup ambari-serverChecking SELinux<span class="token punctuation">..</span>.SELinux status is <span class="token string">'disabled'</span>Customize user account <span class="token keyword">for</span> ambari-server daemon <span class="token punctuation">[</span>y/n<span class="token punctuation">]</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span>? y  <span class="token comment" spellcheck="true">#(1)选择自定义配置</span>Enter user account <span class="token keyword">for</span> ambari-server daemon <span class="token punctuation">(</span>root<span class="token punctuation">)</span>:  <span class="token comment" spellcheck="true">#(2)选择用户</span>Adjusting ambari-server permissions and ownership<span class="token punctuation">..</span>.Checking firewall status<span class="token punctuation">..</span>.Checking JDK<span class="token punctuation">..</span>.<span class="token punctuation">[</span>1<span class="token punctuation">]</span> Oracle JDK 1.8 + Java Cryptography Extension <span class="token punctuation">(</span>JCE<span class="token punctuation">)</span> Policy Files 8<span class="token punctuation">[</span>2<span class="token punctuation">]</span> Custom JDK<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>Enter choice <span class="token punctuation">(</span>1<span class="token punctuation">)</span>: 2  <span class="token comment" spellcheck="true">#(3)选择2，自定义jdk</span>WARNING: JDK must be installed on all hosts and JAVA_HOME must be valid on all hosts.WARNING: JCE Policy files are required <span class="token keyword">for</span> configuring Kerberos security. If you plan to use Kerberos,please <span class="token function">make</span> sure JCE Unlimited Strength Jurisdiction Policy Files are valid on all hosts.Path to JAVA_HOME: /home/jdk  <span class="token comment" spellcheck="true">#(4)输入自己安装的jdk路径</span>Validating JDK on Ambari Server<span class="token punctuation">..</span>.done.Check JDK version <span class="token keyword">for</span> Ambari Server<span class="token punctuation">..</span>.JDK version found: 8Minimum JDK version is 8 <span class="token keyword">for</span> Ambari. Skipping to setup different JDK <span class="token keyword">for</span> Ambari Server.Checking GPL software agreement<span class="token punctuation">..</span>.GPL License <span class="token keyword">for</span> LZO: https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.htmlEnable Ambari Server to download and <span class="token function">install</span> GPL Licensed LZO packages <span class="token punctuation">[</span>y/n<span class="token punctuation">]</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span>?   <span class="token comment" spellcheck="true">#(5)是否安装GPL，这里默认选择否</span>Completing setup<span class="token punctuation">..</span>.Configuring database<span class="token punctuation">..</span>.Enter advanced database configuration <span class="token punctuation">[</span>y/n<span class="token punctuation">]</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span>? y  <span class="token comment" spellcheck="true">#(6)高级数据库配置，选是</span>Configuring database<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>Choose one of the following options:<span class="token punctuation">[</span>1<span class="token punctuation">]</span> - PostgreSQL <span class="token punctuation">(</span>Embedded<span class="token punctuation">)</span><span class="token punctuation">[</span>2<span class="token punctuation">]</span> - Oracle<span class="token punctuation">[</span>3<span class="token punctuation">]</span> - MySQL / MariaDB<span class="token punctuation">[</span>4<span class="token punctuation">]</span> - PostgreSQL<span class="token punctuation">[</span>5<span class="token punctuation">]</span> - Microsoft SQL Server <span class="token punctuation">(</span>Tech Preview<span class="token punctuation">)</span><span class="token punctuation">[</span>6<span class="token punctuation">]</span> - SQL Anywhere<span class="token punctuation">[</span>7<span class="token punctuation">]</span> - BDB<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>Enter choice <span class="token punctuation">(</span>1<span class="token punctuation">)</span>: 3  <span class="token comment" spellcheck="true">#(7)选择MySQL</span>Hostname <span class="token punctuation">(</span>localhost<span class="token punctuation">)</span>: hdp002  <span class="token comment" spellcheck="true">#(8)MySQL地址，这里选择hdp002主机上安装的MySQL</span>Port <span class="token punctuation">(</span>3306<span class="token punctuation">)</span>:    <span class="token comment" spellcheck="true">#(9)MySQL端口，默认3306</span>Database name <span class="token punctuation">(</span>ambari<span class="token punctuation">)</span>:     <span class="token comment" spellcheck="true">#(10)MySQL中数据库名称，默认ambari（之前步骤提前建好的）</span>Username <span class="token punctuation">(</span>ambari<span class="token punctuation">)</span>: root     <span class="token comment" spellcheck="true">#(11)MySQL用户名</span>Enter Database Password <span class="token punctuation">(</span>bigdata<span class="token punctuation">)</span>:  <span class="token comment" spellcheck="true">#(12)MySQL密码</span>Re-enter password:      <span class="token comment" spellcheck="true">#(13)再次输入密码</span>Configuring ambari database<span class="token punctuation">..</span>.Enter full path to custom jdbc driver: /home/mysql-connector-java-5.1.47.jar    <span class="token comment" spellcheck="true">#(14)这里输入提前准备好的MySQL连接包地址</span>Copying /home/mysql-connector-java-5.1.47.jar to /usr/share/javaConfiguring remote database connection properties<span class="token punctuation">..</span>.WARNING: Before starting Ambari Server, you must run the following DDL directly from the database shell to create the schema:/var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql     <span class="token comment" spellcheck="true">#(15)这里会提示开启ambari服务之前需要执行DDl建表语句</span>Proceed with configuring remote database connection properties <span class="token punctuation">[</span>y/n<span class="token punctuation">]</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span>?    <span class="token comment" spellcheck="true">#(16)继续配置远程数据库连接属性</span>Extracting system views<span class="token punctuation">..</span>.ambari-admin-2.7.3.0.139.jar<span class="token punctuation">..</span><span class="token punctuation">..</span>Ambari repo <span class="token function">file</span> contains latest json url http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json, updating stacks repoinfos with it<span class="token punctuation">..</span>.Adjusting ambari-server permissions and ownership<span class="token punctuation">..</span>.Ambari Server <span class="token string">'setup'</span> completed successfully.</code></pre><p>根据上文提示执行DDL语句。<br>将<code>/var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql</code>文件拷贝到MySQL安装节点，并在ambari数据库中执行该脚本。</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql hdp002:/home</span>Ambari-DDL-MySQL-CREATE.sql                                        100%   82KB  39.1MB/s   00:00</code></pre><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp002 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>/home<span class="token punctuation">[</span>root@hdp002 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>Ambari-DDL-MySQL-CREATE.sql  jdk<span class="token punctuation">[</span>root@hdp002 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p</span>Enter password: Welcome to the MySQL monitor.  Commands end with <span class="token punctuation">;</span> or \g.Your MySQL connection <span class="token function">id</span> is 4Server version: 5.7.24 MySQL Community Server <span class="token punctuation">(</span>GPL<span class="token punctuation">)</span>Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2018, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.mysql<span class="token operator">></span> use ambari<span class="token punctuation">;</span>Database changedmysql<span class="token operator">></span> <span class="token function">source</span> /home/Ambari-DDL-MySQL-CREATE.sql<span class="token punctuation">;</span><span class="token punctuation">..</span>.<span class="token punctuation">..</span>.</code></pre><h4 id="启动ambari-server"><a href="#启动ambari-server" class="headerlink" title="启动ambari-server"></a>启动ambari-server</h4><p>执行<code>ambari-server start</code>命令启动服务</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-server start</span>Using python  /usr/bin/pythonStarting ambari-serverAmbari Server running with administrator privileges.ERROR: Exiting with <span class="token keyword">exit</span> code -1. REASON: Before starting Ambari Server, you must copy the MySQL JDBC driver JAR <span class="token function">file</span> to/usr/share/java and <span class="token keyword">set</span> property <span class="token string">"server.jdbc.driver.path=[path/to/custom_jdbc_driver]"</span> <span class="token keyword">in</span> ambari.properties.</code></pre><p>报错。根据提示信息，将MySQL连接包拷贝到<code>/usr/share/java/</code>目录下，并设置参数路径（也可在之后安装hive相关组件时设置该参数）。<br>可能会遇到<code>/usr/share/java</code>不是一个目录的情况，此时删掉该文件，新建一个java目录即可。</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp /home/mysql-connector-java-5.1.47.jar /usr/share/java/</span></code></pre><p>再次启动ambari-server即可启动成功</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdp001 home<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-server start</span>Using python  /usr/bin/pythonStarting ambari-serverAmbari Server running with administrator privileges.Organizing resource files at /var/lib/ambari-server/resources<span class="token punctuation">..</span>.Ambari database consistency check started<span class="token punctuation">..</span>.Server PID at: /var/run/ambari-server/ambari-server.pidServer out at: /var/log/ambari-server/ambari-server.outServer log at: /var/log/ambari-server/ambari-server.logWaiting <span class="token keyword">for</span> server start<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Server started listening on 8080DB configs consistency check: no errors and warnings were found.Ambari Server <span class="token string">'start'</span> completed successfully.</code></pre><h4 id="访问服务器8080端口"><a href="#访问服务器8080端口" class="headerlink" title="访问服务器8080端口"></a>访问服务器8080端口</h4><p>默认用户名和密码都为admin<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/ambari%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2.png" alt><br>根据提示安装集群<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E6%A0%B9%E6%8D%AE%E6%8F%90%E7%A4%BA%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4.png" alt><br>设置集群名字，比如my_hadoop<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E4%B8%BA%E9%9B%86%E7%BE%A4%E8%B5%B7%E5%90%8D%E5%AD%97.png" alt><br>选择HDP版本，配置yum源地址<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/HDP%E7%89%88%E6%9C%AC%E9%80%89%E6%8B%A9%E4%B8%8Eyum%E6%BA%90%E5%9C%B0%E5%9D%80%E9%85%8D%E7%BD%AE.png" alt><br>配置host与ssh<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E9%85%8D%E7%BD%AEhost%E4%B8%8Essh.png" alt><br>确认后开始在节点上安装ambari-agent<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/agent%E5%AE%89%E8%A3%85%E9%A1%B5%E9%9D%A2.png" alt></p><blockquote><p>安装agent时可能报错：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">..</span>.Connection to node1 closed.SSH <span class="token function">command</span> execution finishedhost<span class="token operator">=</span>node1, exitcode<span class="token operator">=</span>0Command end <span class="token function">time</span> 2019-01-15 15:52:22Registering with the server<span class="token punctuation">..</span>.Registration with the server failed.</code></pre><p>解决方法：<br>报错的节点编辑文件：<code>/etc/ambari-agent/conf/ambari-agent.ini</code>，将hostname修改为正确值</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">..</span>.<span class="token punctuation">[</span>server<span class="token punctuation">]</span>hostname<span class="token operator">=</span>master1url_port<span class="token operator">=</span>8440secured_url_port<span class="token operator">=</span>8441connect_retry_delay<span class="token operator">=</span>10max_reconnect_retry_delay<span class="token operator">=</span>30<span class="token punctuation">..</span>.</code></pre></blockquote><p>ambari-agent安装成功<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/agent%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt><br>选择hadoop组件进行安装，建议安装少量组件，之后可以再添加<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E9%80%89%E6%8B%A9%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E7%9A%84hadoop%E7%BB%84%E4%BB%B6.png" alt><br>选择主节点安装位置（如NameNode）<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E9%80%89%E6%8B%A9%E4%B8%BB%E8%8A%82%E7%82%B9.png" alt><br>选择从节点安装位置（如DataNode）<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E9%80%89%E6%8B%A9%E4%BB%8E%E8%8A%82%E7%82%B9.png" alt><br>进行其他设置（如密码、数据保存路径、用户/用户组、参数配置等）<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE1.png" alt><br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE2.png" alt><br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE3.png" alt><br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE4.png" alt><br>配置完成后，查看配置项是否无误，确认无误后点击发布开始安装<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/%E9%85%8D%E7%BD%AE%E5%AE%8C%E6%88%90%E7%A1%AE%E8%AE%A4%E5%AE%89%E8%A3%85.png" alt><br>等待安装进度完成即可，如果安装过程中出错，可根据报错信息进行修改直到安装成功<br><img src="http://image.hming.org/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85HDP/hadoop%E7%BB%84%E4%BB%B6%E5%AE%89%E8%A3%85%E8%BF%9B%E5%BA%A6.png" alt></p><h3 id="使用HDP"><a href="#使用HDP" class="headerlink" title="使用HDP"></a>使用HDP</h3><h4 id="HDP安装路径"><a href="#HDP安装路径" class="headerlink" title="HDP安装路径"></a>HDP安装路径</h4><table><thead><tr><th align="center">名称</th><th align="center">安装路径</th></tr></thead><tbody><tr><td align="center">HDP各组件默认安装目录</td><td align="center">/usr/hdp/版本号</td></tr><tr><td align="center">ambari-server安装目录</td><td align="center">/usr/lib/ambari-server</td></tr><tr><td align="center">ambari-agent安装目录</td><td align="center">/usr/lib/ambari-agent</td></tr><tr><td align="center">日志安装目录</td><td align="center">/var/log</td></tr><tr><td align="center">ambari安装的hdp路径是不能更改的，但是可以用软链接将以上路径链接到其他路径。</td><td align="center"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CentOS7离线安装HDP，Ambari版本：2.7.3.0，HDP版本：3.1.0.0&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="离线安装" scheme="http://cyanide.top/tags/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/"/>
    
      <category term="HDP" scheme="http://cyanide.top/tags/HDP/"/>
    
  </entry>
  
  <entry>
    <title>Hive2之LLAP搭建</title>
    <link href="http://cyanide.top/2019/01/03/Hive2%E4%B9%8BLLAP%E6%90%AD%E5%BB%BA/"/>
    <id>http://cyanide.top/2019/01/03/Hive2之LLAP搭建/</id>
    <published>2019-01-03T11:22:48.000Z</published>
    <updated>2019-01-03T11:22:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hive2.0之LLAP搭建</p><a id="more"></a><p><a href="https://cwiki.apache.org/confluence/display/Hive/LLAP" target="_blank" rel="noopener">官方介绍</a><br><a href="https://www.slideshare.net/Hadoop_Summit/llap-longlived-execution-in-hive" target="_blank" rel="noopener">llap-longlived-execution-in-hive</a><br><a href="https://zh.hortonworks.com/blog/announcing-apache-hive-2-1-25x-faster-queries-much/" target="_blank" rel="noopener">Hortonworks介绍</a><br>参考搭建文章：<br><a href="https://blog.csdn.net/zhoudetiankong/article/details/73089225" target="_blank" rel="noopener">tez hive llap安装</a><br><a href="https://blog.csdn.net/qingzhenli/article/details/72723018" target="_blank" rel="noopener">Hive llap服务安装说明及测试</a><br><a href="http://housong.github.io/2017/hive-llap/" target="_blank" rel="noopener">Hive Llap尝试（0）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hive2.0之LLAP搭建&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Hive" scheme="http://cyanide.top/tags/Hive/"/>
    
      <category term="LLAP" scheme="http://cyanide.top/tags/LLAP/"/>
    
      <category term="Tez" scheme="http://cyanide.top/tags/Tez/"/>
    
  </entry>
  
  <entry>
    <title>Tez以及Tez UI安装方法</title>
    <link href="http://cyanide.top/2019/01/03/Tez%E4%BB%A5%E5%8F%8ATez-UI%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/"/>
    <id>http://cyanide.top/2019/01/03/Tez以及Tez-UI安装方法/</id>
    <published>2019-01-03T07:16:17.000Z</published>
    <updated>2019-01-03T07:16:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>Tez是一个基于Hadoop Yarn的新应用程序框架，可以执行一般数据处理任务的复杂有向非循环图。在许多方面，它可以被认为是map-reduce框架的一个更灵活和更强大的继承者。</p><a id="more"></a><p>本文Tez版本：0.9.1</p><h3 id="安装Tez"><a href="#安装Tez" class="headerlink" title="安装Tez"></a>安装Tez</h3><p><a href="https://blog.csdn.net/YonJarLuo/article/details/78223843" target="_blank" rel="noopener">安装Tez 0.9.0</a></p><h3 id="Tez-UI安装"><a href="#Tez-UI安装" class="headerlink" title="Tez UI安装"></a>Tez UI安装</h3><p><a href="http://tez.apache.org/tez-ui.html" target="_blank" rel="noopener">官方文档</a><br><a href="http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/TimelineServer.html" target="_blank" rel="noopener">yarn timeline server</a><br>大致步骤：</p><ol><li>安装tomcat（ui需要运行在tomcat下）</li><li>将<code>tez-ui.war</code>包解压到tomcat中<code>webapp/tez-ui/</code>目录下</li><li>修改<code>../tomcat/webapps/tez-ui/config/configs.env</code>文件指定timeline地址和resourceManager地址</li><li>修改<code>tez-site.xml</code>文件，修改<code>yarn-site.xml</code>文件，使其支持timeline</li><li>启动timeline，<code>yarn-daemon.sh start timelineserver</code>或者<code>yarn timelineserver</code></li><li>启动tomcat，访问<code>http://hadoopmaster:8080/tez-ui</code>地址</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tez是一个基于Hadoop Yarn的新应用程序框架，可以执行一般数据处理任务的复杂有向非循环图。在许多方面，它可以被认为是map-reduce框架的一个更灵活和更强大的继承者。&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Tez" scheme="http://cyanide.top/tags/Tez/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7下搭建HBase集群+HBase基本操作</title>
    <link href="http://cyanide.top/2018/12/15/CentOS7%E4%B8%8B%E6%90%AD%E5%BB%BAHBase%E9%9B%86%E7%BE%A4+HBase%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://cyanide.top/2018/12/15/CentOS7下搭建HBase集群+HBase基本操作/</id>
    <published>2018-12-15T07:47:39.000Z</published>
    <updated>2018-12-18T03:12:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>搭建HBase集群，使用外部Zookeeper集群</p><a id="more"></a><h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><table><thead><tr><th align="center">节点</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoopmaster</td><td align="center">192.168.171.10</td></tr><tr><td align="center">hadoop001</td><td align="center">192.168.171.11</td></tr><tr><td align="center">hadoop002</td><td align="center">192.168.171.12</td></tr><tr><td align="center">### 下载安装包</td><td align="center"></td></tr><tr><td align="center">下载地址：<a href="http://archive.apache.org/dist/hbase/" target="_blank" rel="noopener">http://archive.apache.org/dist/hbase/</a></td><td align="center"></td></tr><tr><td align="center">根据需要选择合适的版本，本文为<code>hbase-1.4.8-bin.tar.gz</code></td><td align="center"></td></tr></tbody></table><h3 id="上传、解压"><a href="#上传、解压" class="headerlink" title="上传、解压"></a>上传、解压</h3><p>使用<a href="http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#rz%E4%B8%8Esz%EF%BC%88%E4%B8%8A%E4%BC%A0%E3%80%81%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%EF%BC%89" target="_blank" rel="noopener">rz 命令</a>上传到服务器并解压</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -zxvf hbase-1.4.8-bin.tar.gz</span></code></pre><h3 id="配置环境变量（每个节点都需要配置）"><a href="#配置环境变量（每个节点都需要配置）" class="headerlink" title="配置环境变量（每个节点都需要配置）"></a>配置环境变量（每个节点都需要配置）</h3><p><code>vim /etc/profile</code></p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># hbase</span><span class="token function">export</span> HBASE_HOME<span class="token operator">=</span>/home/hbase <span class="token comment" spellcheck="true"># hbase解压安装路径</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$HBASE_HOME</span>/bin</code></pre><p>配置后使用<code>source /etc/profile</code>刷新配置文件</p><h3 id="配置java路径，关闭内置zk集群"><a href="#配置java路径，关闭内置zk集群" class="headerlink" title="配置java路径，关闭内置zk集群"></a>配置java路径，关闭内置zk集群</h3><p>修改<code>hbase/conf/hbase-env.sh</code>，修改或增加以下内容</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">..</span>.<span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/home/jdk<span class="token punctuation">..</span>.<span class="token function">export</span> HBASE_MANAGES_ZK<span class="token operator">=</span>fakse</code></pre><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><ol><li>修改<code>hbase/conf/hbase-site.xml</code>配置文件<br> 更多参数配置参考：<a href="http://hbase.apache.org/book.html#hbase_default_configurations" target="_blank" rel="noopener">hbase_default_configurations</a><pre class=" language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.cluster.distributed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.rootdir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hadoopmaster:9000/hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>              <span class="token comment" spellcheck="true">&lt;!-- 配置master节点ip地址/主机名 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.master.hostname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>              <span class="token comment" spellcheck="true">&lt;!-- 配置master节点端口 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.master.port<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>16000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.zookeeper.quorum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hadoopmaster:2181,hadoop001:2181,hadoop002:2181<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>     <span class="token comment" spellcheck="true">&lt;!-- 不需要     &lt;property>             &lt;name>hbase.zookeeper.property.dataDir&lt;/name>             &lt;value>/home/centos/hbase/zk&lt;/value>     &lt;/property>     --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre> <strong>注意：</strong><ul><li>需要指定HDFS中储存路径，hadoop集群搭建参考：<a href="http://blog.hming.org/2018/09/16/CentOS7%E4%B8%8B%E6%90%AD%E5%BB%BAHadoop%E9%9B%86%E7%BE%A4/" target="_blank" rel="noopener">CentOS7下搭建Hadoop集群</a></li><li>需要指定Zookeeper服务，Zookeeper集群搭建参考：<a href="http://blog.hming.org/2018/12/15/%E6%90%AD%E5%BB%BAZookeeper%E9%9B%86%E7%BE%A4/" target="_blank" rel="noopener">搭建Zookeeper集群</a></li></ul></li><li>修改<code>hbase/conf/regionservers</code>文件<pre class=" language-bash"><code class="language-bash"> <span class="token comment" spellcheck="true"># 增加从节点地址（这里由于配置了hosts，直接使用主机名，也可以配ip地址）</span> hadoop001 hadoop002</code></pre><h3 id="将文件夹copy到其他子节点"><a href="#将文件夹copy到其他子节点" class="headerlink" title="将文件夹copy到其他子节点"></a>将文件夹copy到其他子节点</h3>通过<a href="http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#scp%EF%BC%88%E8%B7%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%B7%E8%B4%9D%EF%BC%89" target="_blank" rel="noopener">scp 命令</a>将修改好的文件夹拷贝到各个从节点上<pre class=" language-shell"><code class="language-shell">[root@hadoopmaster ~]# scp -r /opt/hbase-1.4.8/ hadoop001:/opt...[root@hadoopmaster ~]# scp -r /opt/hbase-1.4.8/ hadoop002:/opt</code></pre><h3 id="确保HDFS与Zookeeper启动"><a href="#确保HDFS与Zookeeper启动" class="headerlink" title="确保HDFS与Zookeeper启动"></a>确保HDFS与Zookeeper启动</h3><code>xzk_cluster</code>脚本参考：<a href="http://blog.hming.org/2018/12/15/%E6%90%AD%E5%BB%BAZookeeper%E9%9B%86%E7%BE%A4/#zk%E9%9B%86%E7%BE%A4%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99" target="_blank" rel="noopener">zk集群脚本编写</a><pre class=" language-bash"><code class="language-bash">xzk-cluster.sh startstart-dfs.sh</code></pre><h3 id="启动HBase集群"><a href="#启动HBase集群" class="headerlink" title="启动HBase集群"></a>启动HBase集群</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># start-hbase.sh </span>running master, logging to /home/hbase/logs/hbase-root-master-hadoopmaster.outhadoop001: running regionserver, logging to /home/hbase/bin/<span class="token punctuation">..</span>/logs/hbase-root-regionserver-hadoop001.outhadoop002: running regionserver, logging to /home/hbase/bin/<span class="token punctuation">..</span>/logs/hbase-root-regionserver-hadoop002.out</code></pre></li></ol><p><strong><code>出现警告：Java HotSpot(TM) 64-Bit Server VM warning: ignoring option PermSize=128m; support was removed in 8.0</code></strong><br>解决方法：<br>注释<code>hbase/conf/hbase-env.sh</code>脚本中以下代码，分发到节点</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Configure PermSize. Only needed in JDK7. You can safely remove it for JDK8+</span><span class="token function">export</span> HBASE_MASTER_OPTS<span class="token operator">=</span><span class="token string">"<span class="token variable">$HBASE_MASTER_OPTS</span> -XX:PermSize=128m -XX:MaxPermSize=128m -XX:ReservedCodeCacheSize=256m"</span><span class="token function">export</span> HBASE_REGIONSERVER_OPTS<span class="token operator">=</span><span class="token string">"<span class="token variable">$HBASE_REGIONSERVER_OPTS</span> -XX:PermSize=128m -XX:MaxPermSize=128m -XX:ReservedCodeCacheSize=256m"</span></code></pre><h3 id="验证web界面"><a href="#验证web界面" class="headerlink" title="验证web界面"></a>验证web界面</h3><p>访问：<a href="http://hadoopmaster:16010" target="_blank" rel="noopener">http://hadoopmaster:16010</a></p><h3 id="单例管理HBase的每个进程"><a href="#单例管理HBase的每个进程" class="headerlink" title="单例管理HBase的每个进程"></a>单例管理HBase的每个进程</h3><pre class=" language-bash"><code class="language-bash">$<span class="token operator">></span> start-hbase.sh            //启动所有节点$<span class="token operator">></span> stop-hbase.sh                //停止所有节点$<span class="token operator">></span> hbase-daemon.sh start master        //启动master节点$<span class="token operator">></span> hbase-daemons.sh start regionserver    //启动所有rs节点$<span class="token operator">></span> hbase-daemon.sh start regionserver    //启动单个rs节点</code></pre><h3 id="HBase在HDFS中目录表示含义"><a href="#HBase在HDFS中目录表示含义" class="headerlink" title="HBase在HDFS中目录表示含义"></a>HBase在HDFS中目录表示含义</h3><table><thead><tr><th align="center">路径</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">/hbase/WALs</td><td align="center">写前日志</td></tr><tr><td align="center">/hbase/data</td><td align="center">数据</td></tr><tr><td align="center">/hbase/data/default</td><td align="center">hbase内置默认名字空间</td></tr><tr><td align="center">/hbase/data/hbase</td><td align="center">hbase内置的名字空间（相当于hive中的数据库）</td></tr><tr><td align="center">文件表示完整路径示意：</td><td align="center"></td></tr><tr><td align="center"><code>/hbase/data/${namespace}/${tablename}/${region_name}/${column_family}/${file_name}</code></td><td align="center"></td></tr><tr><td align="center">### HBase常用命令</td><td align="center"></td></tr><tr><td align="center">```bash</td><td align="center"></td></tr><tr><td align="center">$&gt; hbase shell                //进入hbase shell</td><td align="center"></td></tr><tr><td align="center">$hbase&gt; help                //查看帮助</td><td align="center"></td></tr><tr><td align="center">$hbase&gt; list_namespace            //查看名字空间(数据库)</td><td align="center"></td></tr><tr><td align="center">$hbase&gt; list_namespace_tables ‘hbase’    //查看指定空间（hbase空间）下的表</td><td align="center"></td></tr><tr><td align="center">$hbase&gt; scan ‘hbase:meta’        //查看表</td><td align="center"></td></tr><tr><td align="center">$hbase&gt; create_namespace ‘ns1’        //创建名字空间</td><td align="center"></td></tr><tr><td align="center">$hbase&gt; create ‘ns1:t1’ , ‘f1’        //创建表</td><td align="center"></td></tr><tr><td align="center">$hbase&gt; scan ‘ns1:t1’            //扫描表</td><td align="center"></td></tr><tr><td align="center">$hbase&gt; describe ‘t1’ 或者 desc ‘t1’    //查看表结构</td><td align="center"></td></tr><tr><td align="center">$hbase&gt; truncate ‘ns1:t1’        //清空表数据</td><td align="center"></td></tr><tr><td align="center">$hbase&gt; put ‘ns1:t1’,’row1’,’f1:id’,1    //插入数据table,row,f:c,value</td><td align="center"></td></tr><tr><td align="center">$hbase&gt; delete ‘ns1:t1’,’row1’,’f1:id’    //删除</td><td align="center"></td></tr><tr><td align="center">```</td><td align="center"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搭建HBase集群，使用外部Zookeeper集群&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="HBase" scheme="http://cyanide.top/tags/HBase/"/>
    
      <category term="集群" scheme="http://cyanide.top/tags/%E9%9B%86%E7%BE%A4/"/>
    
  </entry>
  
  <entry>
    <title>搭建Zookeeper集群</title>
    <link href="http://cyanide.top/2018/12/15/%E6%90%AD%E5%BB%BAZookeeper%E9%9B%86%E7%BE%A4/"/>
    <id>http://cyanide.top/2018/12/15/搭建Zookeeper集群/</id>
    <published>2018-12-15T03:18:14.000Z</published>
    <updated>2018-12-15T08:29:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>搭建zookeeper完全分布式环境</p><a id="more"></a><h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><table><thead><tr><th align="center">节点</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoopmaster</td><td align="center">192.168.171.10</td></tr><tr><td align="center">hadoop001</td><td align="center">192.168.171.11</td></tr><tr><td align="center">hadoop002</td><td align="center">192.168.171.12</td></tr><tr><td align="center">### 下载安装包</td><td align="center"></td></tr><tr><td align="center">下载地址：<a href="http://mirrors.shu.edu.cn/apache/zookeeper/" target="_blank" rel="noopener">http://mirrors.shu.edu.cn/apache/zookeeper/</a></td><td align="center"></td></tr><tr><td align="center">根据需要选择合适的版本，本文为<code>zookeeper-3.4.12.tar.gz</code></td><td align="center"></td></tr></tbody></table><h3 id="上传、解压"><a href="#上传、解压" class="headerlink" title="上传、解压"></a>上传、解压</h3><p>使用<a href="http://blog.hming.org/2018/08/15/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#rz%E4%B8%8Esz%EF%BC%88%E4%B8%8A%E4%BC%A0%E3%80%81%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%EF%BC%89" target="_blank" rel="noopener">rz 命令</a>上传到服务器并解压</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tar -zxvf zookeeper-3.4.12.tar.gz </span></code></pre><h3 id="配置环境变量（每个节点都需要配置）"><a href="#配置环境变量（每个节点都需要配置）" class="headerlink" title="配置环境变量（每个节点都需要配置）"></a>配置环境变量（每个节点都需要配置）</h3><p><code>vim /etc/profile</code></p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># zookeeper</span><span class="token function">export</span> ZK_HOME<span class="token operator">=</span>/home/zookeeper <span class="token comment" spellcheck="true"># zookeeper解压安装目录</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$ZK_HOME</span>/bin</code></pre><p>配置后使用<code>source /etc/profile</code>刷新配置文件</p><h3 id="配置参数文件"><a href="#配置参数文件" class="headerlink" title="配置参数文件"></a>配置参数文件</h3><ol><li>配置<code>conf/zoo.cfg</code>文件<br> 拷贝配置文件<code>cp zoo_sample.cfg zoo.cfg</code><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span> configuration.xsl  log4j.properties  zoo_sample.cfg <span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cp zoo_sample.cfg zoo.cfg</span> <span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span> configuration.xsl  log4j.properties  zoo.cfg  zoo_sample.cfg</code></pre> 编辑配置文件<code>(每个节点配置一样)</code><pre class=" language-bash"><code class="language-bash"> tickTime<span class="token operator">=</span>2000 initLimit<span class="token operator">=</span>5 syncLimit<span class="token operator">=</span>2 dataDir<span class="token operator">=</span>/home/zookeeper/data clientPort<span class="token operator">=</span>2181 server.1<span class="token operator">=</span>hadoopmaster:2888:3888 server.2<span class="token operator">=</span>hadoop001:2888:3888 server.3<span class="token operator">=</span>hadoop002:2888:3888</code></pre></li><li>配置<code>data/myid</code>文件<br> 新建<code>myid</code>文件，路径为<code>zoo.cfg</code>文件中<code>dataDir</code>指定的路径，本文为<code>/home/zookeeper/data</code><br> hadoopmaster节点：<pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo 1  >> /home/zookeeper/data/myid</span></code></pre> hadoop001节点：<pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoop001 conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo 2  >> /home/zookeeper/data/myid</span></code></pre> hadoop002节点：<pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@hadoop002 conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo 3  >> /home/zookeeper/data/myid</span></code></pre><h3 id="启动服务器集群（每个节点都要启动）"><a href="#启动服务器集群（每个节点都要启动）" class="headerlink" title="启动服务器集群（每个节点都要启动）"></a>启动服务器集群（每个节点都要启动）</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /home/zookeeper/bin/zkServer.sh start</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop001 opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /home/zookeeper/bin/zkServer.sh start</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop002 opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /home/zookeeper/bin/zkServer.sh start</span></code></pre>使用<code>zkServer.sh status</code>命令查看状态<pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /home/zookeeper/bin/zkServer.sh status</span>ZooKeeper JMX enabled by defaultUsing config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfgMode: follower</code></pre><h3 id="zk集群脚本编写"><a href="#zk集群脚本编写" class="headerlink" title="zk集群脚本编写"></a>zk集群脚本编写</h3>将脚本放到<code>/usr/local/bin/</code>目录方便使用<br><code>vim /usr/local/bin/xzk-cluster.sh</code><br><code>chmod 755 /usr/local/bin/xzk-cluster.sh</code>修改权限<br>脚本内容如下<pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>cmd<span class="token operator">=</span><span class="token variable">$1</span>servers<span class="token operator">=</span><span class="token string">"hadoopmaster hadoop001 hadoop002"</span><span class="token keyword">for</span> s <span class="token keyword">in</span> <span class="token variable">$servers</span> <span class="token punctuation">;</span> <span class="token keyword">do</span>tput setaf 3<span class="token keyword">echo</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> <span class="token variable">$s</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>tput setaf 7<span class="token function">ssh</span> <span class="token variable">$s</span> <span class="token string">"source /etc/profile ; zkServer.sh <span class="token variable">$cmd</span>"</span><span class="token keyword">done</span></code></pre>使用脚本范例：<pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># xzk-cluster.sh status</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoopmaster <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>ZooKeeper JMX enabled by defaultUsing config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfgMode: follower<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoop001 <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>ZooKeeper JMX enabled by defaultUsing config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfgMode: leader<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoop002 <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>ZooKeeper JMX enabled by defaultUsing config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfgMode: follower</code></pre><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoopmaster conf<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># xzk-cluster.sh stop</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoopmaster <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>ZooKeeper JMX enabled by defaultUsing config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfgStopping zookeeper <span class="token punctuation">..</span>. STOPPED<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoop001 <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>ZooKeeper JMX enabled by defaultUsing config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfgStopping zookeeper <span class="token punctuation">..</span>. STOPPED<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> hadoop002 <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>ZooKeeper JMX enabled by defaultUsing config: /home/zookeeper/bin/<span class="token punctuation">..</span>/conf/zoo.cfgStopping zookeeper <span class="token punctuation">..</span>. STOPPED</code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搭建zookeeper完全分布式环境&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Zookeeper" scheme="http://cyanide.top/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>Hive使用Spark引擎替代MR（Hive on Spark）</title>
    <link href="http://cyanide.top/2018/12/09/Hive%E4%BD%BF%E7%94%A8Spark%E5%BC%95%E6%93%8E%E6%9B%BF%E4%BB%A3MR%EF%BC%88Hive-on-Spark%EF%BC%89/"/>
    <id>http://cyanide.top/2018/12/09/Hive使用Spark引擎替代MR（Hive-on-Spark）/</id>
    <published>2018-12-09T09:19:50.000Z</published>
    <updated>2018-12-09T09:19:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hive on Spark安装（Hive-2.3.4、Spark-2.0.0） </p><a id="more"></a><p><a href="https://cwiki.apache.org/confluence/display/Hive/Hive+on+Spark%3A+Getting+Started" target="_blank" rel="noopener">官方文档</a><br><a href="https://blog.csdn.net/Dante_003/article/details/72867493" target="_blank" rel="noopener">参考文章</a></p><p>编译成功示例：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">..</span>.<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> --- maven-antrun-plugin:1.8:run <span class="token punctuation">(</span>default<span class="token punctuation">)</span> @ spark-assembly_2.11 ---<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Executing tasksmain:<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Executed tasks<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Reactor Summary:<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Parent POM 2.0.0 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>02:06 min<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Tags <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>01:33 min<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Sketch <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 12.649 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Networking <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 22.077 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Shuffle Streaming Service <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span> 15.268 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Unsafe <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 24.808 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Launcher <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 54.464 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Core <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>07:09 min<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project GraphX <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 31.348 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Streaming <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>01:04 min<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Catalyst <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>02:22 min<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project SQL <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>02:50 min<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project ML Local Library <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 27.201 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project ML Library <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>02:25 min<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Tools <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>  7.599 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Hive <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>01:15 min<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project REPL <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>  9.934 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project YARN Shuffle Service <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 14.017 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project YARN <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 39.637 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Assembly <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span>  3.878 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project External Flume Sink <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span> 24.054 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project External Flume <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 21.908 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project External Flume Assembly <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>  5.095 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Integration <span class="token keyword">for</span> Kafka 0.8 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span> 20.951 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Examples <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 37.750 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project External Kafka Assembly <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>  6.523 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Integration <span class="token keyword">for</span> Kafka 0.10 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 20.073 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Integration <span class="token keyword">for</span> Kafka 0.10 Assembly <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> SUCCESS <span class="token punctuation">[</span>  5.019 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Spark Project Java 8 Tests 2.0.0 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. SUCCESS <span class="token punctuation">[</span> 11.790 s<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> BUILD SUCCESS<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Total time: 27:45 min<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Finished at: 2018-12-09T20:51:07+08:00<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------+ <span class="token function">rm</span> -rf /opt/spark-2.0.0/dist+ <span class="token function">mkdir</span> -p /opt/spark-2.0.0/dist/jars+ <span class="token keyword">echo</span> <span class="token string">'Spark 2.0.0 built for Hadoop 2.7.2'</span>+ <span class="token keyword">echo</span> <span class="token string">'Build flags: -Pyarn,hadoop-provided,hadoop-2.7,parquet-provided'</span><span class="token punctuation">..</span>.</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hive on Spark安装（Hive-2.3.4、Spark-2.0.0） &lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://cyanide.top/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://cyanide.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Hive" scheme="http://cyanide.top/tags/Hive/"/>
    
      <category term="Spark" scheme="http://cyanide.top/tags/Spark/"/>
    
  </entry>
  
  <entry>
    <title>MySQL连接驱动包下载方法</title>
    <link href="http://cyanide.top/2018/12/09/MySQL%E8%BF%9E%E6%8E%A5%E9%A9%B1%E5%8A%A8%E5%8C%85%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95/"/>
    <id>http://cyanide.top/2018/12/09/MySQL连接驱动包下载方法/</id>
    <published>2018-12-09T06:43:33.000Z</published>
    <updated>2018-12-09T06:43:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>mysql连接驱动包mysql-connector-java-x.x.x.jar很多地方都会用到，本文介绍官方下载方式</p><a id="more"></a><h3 id="下载链接地址"><a href="#下载链接地址" class="headerlink" title="下载链接地址"></a>下载链接地址</h3><p>官方下载地址：<a href="https://dev.mysql.com/downloads/connector/j/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/connector/j/</a></p><h3 id="下载步骤"><a href="#下载步骤" class="headerlink" title="下载步骤"></a>下载步骤</h3><h4 id="选择版本"><a href="#选择版本" class="headerlink" title="选择版本"></a>选择版本</h4><p>默认为最新版本，可以按如下所示选择历史版本<br><img src="http://image.hming.org/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%95%8C%E9%9D%A2%E9%80%89%E6%8B%A9%E5%85%B6%E4%BB%96%E7%89%88%E6%9C%AC.png" alt><br><img src="http://image.hming.org/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%95%8C%E9%9D%A2%E9%80%89%E6%8B%A9%E5%85%B6%E4%BB%96%E7%89%88%E6%9C%AC2.png" alt></p><h4 id="选择操作系统"><a href="#选择操作系统" class="headerlink" title="选择操作系统"></a>选择操作系统</h4><p><img src="http://image.hming.org/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%95%8C%E9%9D%A21.png" alt></p><h4 id="确认下载后缀为-tar-gz"><a href="#确认下载后缀为-tar-gz" class="headerlink" title="确认下载后缀为.tar.gz"></a>确认下载后缀为.tar.gz</h4><p><img src="http://image.hming.org/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%95%8C%E9%9D%A22.png" alt></p><h4 id="跳过登录直接下载"><a href="#跳过登录直接下载" class="headerlink" title="跳过登录直接下载"></a>跳过登录直接下载</h4><p><img src="http://image.hming.org/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85%E4%B8%8B%E8%BD%BD%E7%95%8C%E9%9D%A23.png" alt></p><h3 id="压缩包中jar包"><a href="#压缩包中jar包" class="headerlink" title="压缩包中jar包"></a>压缩包中jar包</h3><p><img src="http://image.hming.org/centos7%E4%B8%8B%E5%AE%89%E8%A3%85hive/mysql%E8%BF%9E%E6%8E%A5%E5%8C%85tar%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6%E8%AF%A6%E6%83%85.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql连接驱动包mysql-connector-java-x.x.x.jar很多地方都会用到，本文介绍官方下载方式&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://cyanide.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="http://cyanide.top/tags/MySQL/"/>
    
      <category term="驱动包" scheme="http://cyanide.top/tags/%E9%A9%B1%E5%8A%A8%E5%8C%85/"/>
    
      <category term="连接" scheme="http://cyanide.top/tags/%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
</feed>
