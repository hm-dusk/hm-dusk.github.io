<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>貍铭的博客</title>
  
  <subtitle>越自律，越自由</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.hming.org/"/>
  <updated>2020-02-22T04:55:21.000Z</updated>
  <id>http://blog.hming.org/</id>
  
  <author>
    <name>貍铭</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>理财过程中遇到的名词整理</title>
    <link href="http://blog.hming.org/2020/02/22/%E7%90%86%E8%B4%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%90%8D%E8%AF%8D%E6%95%B4%E7%90%86/"/>
    <id>http://blog.hming.org/2020/02/22/%E7%90%86%E8%B4%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%90%8D%E8%AF%8D%E6%95%B4%E7%90%86/</id>
    <published>2020-02-22T04:55:21.000Z</published>
    <updated>2020-02-22T04:55:21.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="GDP（Gross-Domestic-Product）"><a href="#GDP（Gross-Domestic-Product）" class="headerlink" title="GDP（Gross Domestic Product）"></a>GDP（Gross Domestic Product）</h3><p><strong>百度百科</strong><br>国内生产总值（GDP）是指按国家市场价格计算的一个国家（或地区）所有常住单位在一定时期内生产活动的最终成果，常被公认为是衡量国家经济状况的最佳指标。国内生产总值GDP是核算体系中一个重要的综合性统计指标，也是我国新国民经济核算体系中的核心指标，它反映了一国（或地区）的经济实力和市场规模。</p><p><strong>理解</strong><br>国民生产总值，指一个国家过去一年内新生产的全部财富总和。</p><h3 id="CPI（consumer-price-index）"><a href="#CPI（consumer-price-index）" class="headerlink" title="CPI（consumer price index）"></a>CPI（consumer price index）</h3><p><strong>百度百科</strong><br>消费者物价指数（consumer price index），又名居民消费价格指数，简称CPI。<br>是一个反映居民家庭一般所购买的消费品和服务项目价格水平变动情况的宏观经济指标。它是在特定时段内度量一组代表性消费商品及服务项目的价格水平随时间而变动的相对数，是用来反映居民家庭购买消费商品及服务的价格水平的变动情况，是一个月内商品和服务零售价变动系数。</p><p><strong>理解</strong><br>消费者价格指数，俗称物价指数，反映全社会物价变动水平的宏观经济指标。</p><h3 id="M2"><a href="#M2" class="headerlink" title="M2"></a>M2</h3><p><strong>百度百科</strong><br>广义货币供应量（M2）是指流通于银行体系之外的现金加上企业存款、居民储蓄存款以及其他存款，它包括了一切可能成为现实购买力的货币形式，通常反映的是社会总需求变化和未来通胀的压力状态。近年来，很多国家都把M2作为货币供应量的调控目标。</p><blockquote><p>货币（M0）=流通中的现金，即流通于银行体系之外的现金。<br>狭义货币（M1）=（M0）+单位活期存款。<br>广义货币（M2）=M1+准货币（单位定期存款+居民储蓄存款+其他存款+证券公司客户保证金+住房公积金中心存款+非存款类金融机构在存款类金融机构的存款）。<br>另外还有M3=M2+其他短期流动资产（如国库券、银行承兑汇票、商业票据等）。</p></blockquote><p><strong>理解</strong><br>广义货币供应量，是衡量社会真实货币存量和通货膨胀水平的最关键指标。</p><blockquote><p>M指Money</p></blockquote><h3 id="复利"><a href="#复利" class="headerlink" title="复利"></a>复利</h3><p><strong>百度百科</strong><br>复利（Compound Interest）,是指在计算利息时，某一计息周期的利息是由本金加上先前周期所积累利息总额来计算的计息方式，也即通常所说的”利说利”，”利滚利”。</p><p><strong>理解</strong><br>世界第八大奇迹，也是为什么理财能跑赢通货膨胀的重要因素。</p><h3 id="ETF基金"><a href="#ETF基金" class="headerlink" title="ETF基金"></a>ETF基金</h3><p><strong>百度百科</strong><br>交易型开放式指数基金，通常又被称为交易所交易基金（Exchange Traded Fund，简称ETF），是一种在交易所上市交易的、基金份额可变的一种开放式基金。<br>交易型开放式指数基金属于开放式基金的一种特殊类型，它结合了封闭式基金和开放式基金的运作特点，投资者既可以向基金管理公司申购或赎回基金份额，同时，又可以像封闭式基金一样在二级市场上按市场价格买卖ETF份额，不过，申购赎回必须以一篮子股票换取基金份额或者以基金份额换回一篮子股票。由于同时存在二级市场交易和申购赎回机制，投资者可以在ETF市场价格与基金单位净值之间存在差价时进行套利交易。套利机制的存在，使得ETF避免了封闭式基金普遍存在的折价问题。</p><p><strong>理解</strong><br>ETF基金是所有公募基金中成本最低，交易最方便的一种。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;GDP（Gross-Domestic-Product）&quot;&gt;&lt;a href=&quot;#GDP（Gross-Domestic-Product）&quot; class=&quot;headerlink&quot; title=&quot;GDP（Gross Domestic Product）&quot;&gt;&lt;/a&gt;GDP（G
      
    
    </summary>
    
    
      <category term="理财" scheme="http://blog.hming.org/categories/%E7%90%86%E8%B4%A2/"/>
    
    
      <category term="专业名词" scheme="http://blog.hming.org/tags/%E4%B8%93%E4%B8%9A%E5%90%8D%E8%AF%8D/"/>
    
      <category term="解释" scheme="http://blog.hming.org/tags/%E8%A7%A3%E9%87%8A/"/>
    
  </entry>
  
  <entry>
    <title>基金学习笔记</title>
    <link href="http://blog.hming.org/2020/02/22/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.hming.org/2020/02/22/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-02-22T04:22:44.000Z</published>
    <updated>2020-02-22T04:22:44.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基金的概念"><a href="#基金的概念" class="headerlink" title="基金的概念"></a>基金的概念</h3><p>百度百科：<br>基金，英文是fund，广义是指为了某种目的而设立的具有一定数量的资金。主要包括信托投资基金、公积金、保险基金、退休基金，各种基金会的基金。</p><p>用常人的话讲，基金是一种投资工具（产品），是投资机构筹集投资者手中的钱去投资股票、债券、外汇、货币等<a href="https://baike.baidu.com/item/%E6%A0%87%E7%9A%84/5766049?fr=aladdin" target="_blank" rel="noopener">标的</a>。</p><p>日常生活中所说的狭义上的基金一般特指：<br><code>公募证券投资基金</code>，简称<code>公募基金</code>。</p><blockquote><p>股票和基金是人类历史上集合大量资金用以做特定用途的最重要的两项伟大发明。</p></blockquote><h3 id="基金分类"><a href="#基金分类" class="headerlink" title="基金分类"></a>基金分类</h3><h4 id="按照是否在交易所上市划分"><a href="#按照是否在交易所上市划分" class="headerlink" title="按照是否在交易所上市划分"></a>按照是否在交易所上市划分</h4><p><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9F%BA%E9%87%91%E5%88%86%E7%B1%BB%EF%BC%88%E6%8C%89%E4%BA%A4%E6%98%93%E5%B8%82%E5%9C%BA%EF%BC%89.png" alt=""></p><h5 id="场内市场和场外市场"><a href="#场内市场和场外市场" class="headerlink" title="场内市场和场外市场"></a>场内市场和场外市场</h5><p><code>场外市场 = 一级市场</code></p><p><code>场内市场 = 二级市场</code></p><h5 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h5><p>按能否在一级市场或场外市场申购来划分为场内基金和场外基金</p><table><thead><tr><th>基金分类</th><th align="center">特点</th><th>是否需要开股票账户</th><th>举例</th></tr></thead><tbody><tr><td>场外基金</td><td align="center">● 从一级市场或场外市场买入<br>● 基金规模会随着买入增加而增加<br>● 费率高，一般万15</td><td>不需要</td><td>天天基金、<br>蚂蚁聚宝、<br>基金官网</td></tr><tr><td>场内基金</td><td align="center">● 从二级市场或场内市场买入<br>● 基金规模固定<br>● 无法进行申购和赎回，只能在二级市场通过买卖交易基金份额<br>● 需要下载专门的证券交易软件，而且必须在股市开盘的时间内才能购买<br>● 费率低，一般万1.5</td><td>需要</td><td>华宝智投</td></tr></tbody></table><p>绝大部分场内交易的基金场外都有对应的产品</p><blockquote><p>股市开盘（场内基金交易）时间：</p><p>周一至周五</p><p>9:30-11:30</p><p>13:00-15:00</p></blockquote><h4 id="按照投资标的划分"><a href="#按照投资标的划分" class="headerlink" title="按照投资标的划分"></a>按照投资标的划分</h4><p><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9F%BA%E9%87%91%E5%88%86%E7%B1%BB%EF%BC%88%E6%8C%89%E6%8A%95%E8%B5%84%E6%A0%87%E7%9A%84%EF%BC%89.png" alt=""></p><h5 id="资本市场和货币市场"><a href="#资本市场和货币市场" class="headerlink" title="资本市场和货币市场"></a>资本市场和货币市场</h5><table><thead><tr><th>分类名</th><th>特点</th></tr></thead><tbody><tr><td>资本市场</td><td>股票市场和一年期以上的长期债券市场</td></tr><tr><td>货币市场</td><td>交易一年期以下短期债券和各类票据的市场</td></tr></tbody></table><h5 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h5><table><thead><tr><th>分类名</th><th>特点</th><th>投资市场</th></tr></thead><tbody><tr><td>股票型基金（股基）</td><td>≥80%的资金投资股票</td><td>资本市场</td></tr><tr><td>混合型基金（混基）</td><td>一部分买股票，一部分买债券，<br>但是比例都不超过80%</td><td>资本市场</td></tr><tr><td>债券型基金（债基）</td><td>≥80%的资金投资债券</td><td>资本市场</td></tr><tr><td>货币市场基金（货基）</td><td>投资货币市场</td><td>货币市场</td></tr></tbody></table><h5 id="股票型基金分类"><a href="#股票型基金分类" class="headerlink" title="股票型基金分类"></a>股票型基金分类</h5><p>股票基金分成主动型基金和被动型基金。</p><table><thead><tr><th>分类名</th><th>特点</th><th>举例</th></tr></thead><tbody><tr><td>主动型基金</td><td>基金经理根据自己的经验、模型进行买卖股票，企图获得超越市场的收益</td><td>国泰估值优势混合</td></tr><tr><td>被动型基金<br>（指数基金）</td><td>完全复制某种指数，选取该指数的成分股基金投资</td><td>沪深300指数<br>标普500指数<br>纳斯达克100指数</td></tr></tbody></table><h5 id="混合型基金分类"><a href="#混合型基金分类" class="headerlink" title="混合型基金分类"></a>混合型基金分类</h5><table><thead><tr><th>分类名</th><th>特点</th></tr></thead><tbody><tr><td>偏股型基金</td><td>投资股票份额≥50%</td></tr><tr><td>偏债型基金</td><td>投资债券份额≥50%</td></tr><tr><td>平衡型基金</td><td>投资股票、债券份额都≤50%</td></tr><tr><td>灵活型基金</td><td>投资份额未做上限规定</td></tr></tbody></table><h5 id="投资风险"><a href="#投资风险" class="headerlink" title="投资风险"></a>投资风险</h5><p>股票型基金 &gt; 混合型基金 &gt; 债券型基金 &gt; 货币基金</p><h4 id="其他分类方式"><a href="#其他分类方式" class="headerlink" title="其他分类方式"></a>其他分类方式</h4><p><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9F%BA%E9%87%91%E5%88%86%E7%B1%BB%EF%BC%88%E5%85%B6%E4%BB%96%E5%88%86%E7%B1%BB%EF%BC%89.png" alt=""><br>还有种分类是分成封闭基金和开放基金，不过现在封闭基金基本成为过去时，我们购买的一般都是开放基金。</p><h4 id="完整基金名称的组成部分"><a href="#完整基金名称的组成部分" class="headerlink" title="完整基金名称的组成部分"></a>完整基金名称的组成部分</h4><p>[基金公司名称] + [基金特点] + [基金投资范围]</p><h3 id="货币基金"><a href="#货币基金" class="headerlink" title="货币基金"></a>货币基金</h3><h4 id="余额宝"><a href="#余额宝" class="headerlink" title="余额宝"></a>余额宝</h4><p>余额宝为典型的货币基金，带动了货币基金的发展</p><h5 id="余额宝成功的秘诀"><a href="#余额宝成功的秘诀" class="headerlink" title="余额宝成功的秘诀"></a>余额宝成功的秘诀</h5><ol><li><p><strong>余额宝随取随用，解决货币基金流动性的最后一公里难题。</strong><br> 货基一般需要T+2才能到账，T是交易（trade）的意思，意思是交易指令打上去之后需要2天钱才能到账。一般申购也是同样的道理。</p></li><li><p><strong>余额宝7x24小时全天候为投资者提供赎回服务（但计算收益的方式还是没变）。</strong><br> 基金存在一个问题，如果在工作日下午3点钱申请赎回，则定为当天申请，需要第二天或者第三天才能赎回到账；如果是工作日下午3点后的申请，算作是第二天上班后的申请，需要等到第三天或者第四天才能到账。<br> 同样的，如果在工作日下午3点钱申购，则定为当天申请，第二天才开始计算收益，第三天才能看到收益；如果是工作日下午3点后的申请，算作是第二天上班后的申请，需要等到第三天才计算收益，第四天才能看到收益。</p></li></ol><blockquote><p>因为周末交易所休市，所以周四下午3点是一个关键时间点，周四下午3点前申购，周五就开始计算收益，收益周六就能看到；如果是周四下午3点后申购，则算作周五的申请，下周一才开始计算收益，相当于白白浪费了3天的利息。</p></blockquote><ol start="3"><li><p><strong>余额宝将基金的按月结算方式替换成了按日结算。</strong><br> 日结算不仅可以让投资者能每天看到收益，得到正反馈，而且通过复利的特点还能额外获得收益。</p></li><li><p><strong>余额宝直接打通了投资和消费的任督二脉</strong><br> 直接用余额宝就可以很方便的进行支付。</p></li></ol><h5 id="现在已经不推荐购买余额宝了"><a href="#现在已经不推荐购买余额宝了" class="headerlink" title="现在已经不推荐购买余额宝了"></a>现在已经不推荐购买余额宝了</h5><ul><li>随着基金规模的增大，余额宝的收益已经很低了。</li><li>赎回到账速度也不是最快的，最晚需要2小时左右。</li><li>现在余额宝转出超过一定额度需要手续费。</li></ul><h4 id="如何选购货币基金"><a href="#如何选购货币基金" class="headerlink" title="如何选购货币基金"></a>如何选购货币基金</h4><h5 id="货币基金扮演的角色"><a href="#货币基金扮演的角色" class="headerlink" title="货币基金扮演的角色"></a>货币基金扮演的角色</h5><ul><li>货币基金扮演的应该是守门员的角色，它的主要责任是<code>高安全性</code>和<code>高流动性</code>。</li><li>货币基金的利率一般在一年期的银行定期存款基准利率的一倍到两倍之间。</li></ul><blockquote><p>普通家庭需要准备至少<code>3-6个月</code>的家庭支出金额来作为家庭紧急备用金。</p></blockquote><h5 id="货币基金的指标"><a href="#货币基金的指标" class="headerlink" title="货币基金的指标"></a>货币基金的指标</h5><ol><li>七日年化收益（过去7天的平均年化收益，并不能代表货基的真实收益率）</li><li>每万份收益（只能反映一天的数据）</li></ol><p>应该看过去半年、一年甚至更长时间的累计回报（可以在天天基金里面看）。</p><h5 id="货币基金的分类"><a href="#货币基金的分类" class="headerlink" title="货币基金的分类"></a>货币基金的分类</h5><p>货币基金一般后面跟A、B的后缀，不同的字母区分<code>投资门槛</code>。</p><table><thead><tr><th align="center">货币基金类型</th><th align="center">特点</th><th align="center">适合投资者</th></tr></thead><tbody><tr><td align="center">A类货基</td><td align="center">1000元起卖，有些低至100元甚至1元起卖</td><td align="center">普通散户</td></tr><tr><td align="center">B类货基</td><td align="center">100万起卖，有些甚至1000万起卖</td><td align="center">机构、土豪</td></tr></tbody></table><p>普通投资者一般购买A类，A类的收益率也比B类地上0.2%~0.3%，所以<code>优先挑选不分AB类的基金</code>，避免受到利率歧视。</p><blockquote><p>对于股票型、债券型、混合型基金来说，常见A、B、C后缀，区分<code>收费方式</code>。</p><table><thead><tr><th align="center">分类</th><th align="center">说明</th><th align="center">特点</th><th align="center">适合投资者</th></tr></thead><tbody><tr><td align="center">A类</td><td align="center">通常指前端收费<br>（在购买基金时收取费用，但赎回没有费用）</td><td align="center">申购金额越高<br>费率越低</td><td align="center">一次性购入较多金额<br>的土豪投资者</td></tr><tr><td align="center">B类</td><td align="center">通常指后端收费<br>（在基金赎回时才收费）</td><td align="center">持有基金时间越长<br>费率越低</td><td align="center">有耐心的长情投资者</td></tr><tr><td align="center">C类</td><td align="center">通常指销售服务费<br>（不收申购费，也不收赎回费）</td><td align="center">按日收费</td><td align="center">短期持有，对流动性<br>要求较高的投资者</td></tr></tbody></table></blockquote><h5 id="货币基金的收费"><a href="#货币基金的收费" class="headerlink" title="货币基金的收费"></a>货币基金的收费</h5><p>货币基金买卖不收取申购赎回费。<br>传统货基费用收取情况表：</p><table><thead><tr><th align="center">类别</th><th align="center">费用</th><th align="center">收取方</th></tr></thead><tbody><tr><td align="center">基金管理费</td><td align="center">0.33%</td><td align="center">基金公司</td></tr><tr><td align="center">基金托管费</td><td align="center">0.1%</td><td align="center">资金托管银行</td></tr><tr><td align="center">销售服务费</td><td align="center">0.25%</td><td align="center">销售渠道<br>（银行、券商、天天基金网等第三方销售平台）</td></tr></tbody></table><p>余额宝费用收取情况表：</p><table><thead><tr><th align="center">类别</th><th align="center">费用</th><th align="center">收取方</th></tr></thead><tbody><tr><td align="center">基金管理费</td><td align="center">0.3%</td><td align="center">基金公司</td></tr><tr><td align="center">基金托管费</td><td align="center">0.08%</td><td align="center">资金托管银行</td></tr><tr><td align="center">销售服务费</td><td align="center">0</td><td align="center">销售渠道 <br>（支付宝做销售渠道，免收销售服务费）</td></tr></tbody></table><h5 id="货币基金的购买时间"><a href="#货币基金的购买时间" class="headerlink" title="货币基金的购买时间"></a>货币基金的购买时间</h5><ul><li>如果遇到春节、国庆等假期，需要提前购买，享受假期间的利息。</li><li>基金计算收益受交易所开放时间影响，平时最好在周四下午3点前购买（参考上文中的交易所开放时间）。</li></ul><h5 id="场内货币基金（货币ETF）"><a href="#场内货币基金（货币ETF）" class="headerlink" title="场内货币基金（货币ETF）"></a>场内货币基金（货币ETF）</h5><p>ETF基金（Exchange Traded Funds）：交易型开放式指数基金。<br>ETF基金是所有公募基金中成本最低，交易最方便的一种。<br>需要挑选规模比较大的货币ETF。<br>门槛较高，华宝添益10万起买，存在复杂的套利机制，不推荐新手购买。</p><h3 id="Shibor指标"><a href="#Shibor指标" class="headerlink" title="Shibor指标"></a>Shibor指标</h3><h4 id="Shibor是什么"><a href="#Shibor是什么" class="headerlink" title="Shibor是什么"></a>Shibor是什么</h4><p><code>上海银行间同业拆借利率</code>（Shanghai Interbank Offered Rate）：<br>指中国大陆内各家银行之间借钱的利率。</p><p>银行是金融的核心，金融是经济的命脉，所以银行资金的流动性是绝对不能出半点差池的。<br>为了预防危机，各国金融监管机构都会对银行做各种各样的关于资金安全的刚性约定。</p><blockquote><p>最重要的一个指标：<code>资本充足率</code>必须高于8%<br><code>资本充足率</code>：简称<code>CAR</code> 公式=资本/加权风险资产<br>政府通过规定CAR下限，保证银行能化解一定金融风险，保证银行的正常运营和发展。</p></blockquote><blockquote><p>一般每个季度都会对银行考察一次，每到季末的时候之前放贷过于激进，导致现钱不够的银行不等不想办法借钱来应对考察，但是银行对资金需求规模太大了，向老百姓借钱远远不够，所以必须在银行之间建立一个<code>资金融通的市场</code>，方便银行之间互相借钱。<br>这个市场中的资金利率不是央行规定的，完全市场化定价，需求大的时候利率就高，这个资金利率就叫做<code>银行间同业拆借利率</code>。<br>各个地方的命名有所不同：伦敦（Libor）、纽约（Nibor）、新加坡（Sibor）、香港（Hibor）、上海（Shibor）</p></blockquote><h4 id="Shibor分类"><a href="#Shibor分类" class="headerlink" title="Shibor分类"></a>Shibor分类</h4><p>根据借款时间长短不同，利率可以分为隔夜、1周、2周、1个月、3个月、6个月、9个月和1年这几个品种。<br>其中，<code>隔夜拆借利率</code>最能体现市场短期资金面是否紧张的关键指标。</p><p>Shibor指标会影响到中国境内所有资产的价格。</p><h4 id="查看Shibor的方式"><a href="#查看Shibor的方式" class="headerlink" title="查看Shibor的方式"></a>查看Shibor的方式</h4><p>可以通过官网：<a href="http://www.shibor.org" target="_blank" rel="noopener">www.shibor.org</a>查看最新数据<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Shibor%E5%AE%98%E7%BD%91.png" alt=""></p><blockquote><p>其中O/N（Over Night）就是指的隔夜拆借利率</p></blockquote><h4 id="历史Shibor指标"><a href="#历史Shibor指标" class="headerlink" title="历史Shibor指标"></a>历史Shibor指标</h4><p>2013年6月20日<br>隔夜拆借利率达到了史无前例的：13.444%，在这段时间里余额宝的收益率也达到了7%</p><h3 id="国债逆回购"><a href="#国债逆回购" class="headerlink" title="国债逆回购"></a>国债逆回购</h3><p>国债逆回购利率也深受Shibor指标影响</p><h4 id="什么是国债逆回购"><a href="#什么是国债逆回购" class="headerlink" title="什么是国债逆回购"></a>什么是国债逆回购</h4><p>国债正回购：持有未到期国债的机构投资者以国债为抵押物借钱，到期后再把国债拿回来。<br>国债逆回购：个人投资者把钱借给交易对手，并暂时持有对方的国债，到期收钱归还国债。</p><h4 id="国债逆回购分类"><a href="#国债逆回购分类" class="headerlink" title="国债逆回购分类"></a>国债逆回购分类</h4><p>根据借款期限可分为1天、2天、3天、4天、7天、14天、28天、91天和182天这么多品种。<br>其中交易最活跃的是7天以内的，尤其是1天期限的品种</p><blockquote><p>超过7天的品种普通投资者就不需要去考虑了</p></blockquote><h4 id="国债逆回购版本"><a href="#国债逆回购版本" class="headerlink" title="国债逆回购版本"></a>国债逆回购版本</h4><p>由于中国有沪深两个证券交易所，所以国债逆回购存在上交所和深交所两个版本<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9B%BD%E5%80%BA%E9%80%86%E5%9B%9E%E8%B4%AD%E7%89%88%E6%9C%AC.png" alt=""><br>另外，两个版本的交易门槛和回报率都不一样，深市利率往往比沪市低（利率歧视无处不在）：</p><table><thead><tr><th align="center">类别</th><th align="center">沪市（上海交易所）</th><th align="center">深市（深圳交易所）</th></tr></thead><tbody><tr><td align="center">单份国债逆回购价格</td><td align="center">1000元</td><td align="center">100元</td></tr><tr><td align="center">国债逆回购起卖份数</td><td align="center">100份</td><td align="center">10份</td></tr><tr><td align="center">国债逆回购交易门槛</td><td align="center">10万元</td><td align="center">1000元</td></tr></tbody></table><h4 id="国债逆回购的费用"><a href="#国债逆回购的费用" class="headerlink" title="国债逆回购的费用"></a>国债逆回购的费用</h4><p>和货基不同，投资国债逆回购有手续费，期限越长，相对费用越低，例如：</p><table><thead><tr><th align="center">类别</th><th align="center">费用</th></tr></thead><tbody><tr><td align="center">GC001</td><td align="center">1元</td></tr><tr><td align="center">GC002</td><td align="center">2元</td></tr><tr><td align="center">GC007</td><td align="center">5元</td></tr><tr><td align="center">GC014</td><td align="center">10元</td></tr></tbody></table><h4 id="国债逆回购的买卖"><a href="#国债逆回购的买卖" class="headerlink" title="国债逆回购的买卖"></a>国债逆回购的买卖</h4><p>国债逆回购的价格 × 100% = 年化利率</p><blockquote><p><strong>注意：</strong><br>国债逆回购的买卖和其他买卖正好相反：<br><code>买</code>国债逆回购时要点击<strong><code>卖出</code></strong><br><code>卖</code>国债逆回购时要点击<strong><code>买入</code></strong></p></blockquote><p>收益计算方式：</p><pre class=" language-java"><code class="language-java">一天的收益 <span class="token operator">=</span> 买入金额 × 年化利率 ÷ 一年的天数（沪市<span class="token number">360</span>天、深市<span class="token number">365</span>天）</code></pre><h4 id="国债逆回购历史利率"><a href="#国债逆回购历史利率" class="headerlink" title="国债逆回购历史利率"></a>国债逆回购历史利率</h4><p><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9B%BD%E5%80%BA%E9%80%86%E5%9B%9E%E8%B4%AD%E6%B2%AA%E5%B8%82%E5%8E%86%E5%8F%B2%E5%88%A9%E7%8E%87.png" alt=""></p><h4 id="国债逆回购计息规则"><a href="#国债逆回购计息规则" class="headerlink" title="国债逆回购计息规则"></a>国债逆回购计息规则</h4><p>2017年5月22日起<br>国债逆回购计息规则已改变<br>计息天数由名义投资天数修改为资金实际占款天数</p><h4 id="国债逆回购的缺点"><a href="#国债逆回购的缺点" class="headerlink" title="国债逆回购的缺点"></a>国债逆回购的缺点</h4><p>国债逆回购没有办法做日内回转交易，也就是说一旦买入国债逆回购，当天是没有办法撤销的，必须持有到期才能使用资金。<br>这就有可能会错过股市最佳买入时机。</p><p>因为人人都想在股市下午快要收盘时去购买国债逆回购，所以国债逆回购在每天下午往往走势一路向下，一般下手越晚收益越低。</p><h4 id="国债逆回购信息查看方式"><a href="#国债逆回购信息查看方式" class="headerlink" title="国债逆回购信息查看方式"></a>国债逆回购信息查看方式</h4><p>去集思录官网的现金管理板块查看:<br><a href="https://www.jisilu.cn/data/repo/" target="_blank" rel="noopener">https://www.jisilu.cn/data/repo/</a><br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%9B%86%E6%80%9D%E5%BD%95%E7%8E%B0%E9%87%91%E7%AE%A1%E7%90%86%E6%9D%BF%E5%9D%97.png" alt=""></p><h3 id="场外货基-场内货基-国债逆回购的对比"><a href="#场外货基-场内货基-国债逆回购的对比" class="headerlink" title="场外货基/场内货基/国债逆回购的对比"></a>场外货基/场内货基/国债逆回购的对比</h3><p><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9C%BA%E5%86%85-%E5%9C%BA%E5%A4%96-%E5%9B%BD%E5%80%BA%E9%80%86%E5%9B%9E%E8%B4%AD%E5%AF%B9%E6%AF%94.png" alt=""></p><h3 id="债券基金"><a href="#债券基金" class="headerlink" title="债券基金"></a>债券基金</h3><h4 id="永恒不变的投资三大支柱"><a href="#永恒不变的投资三大支柱" class="headerlink" title="永恒不变的投资三大支柱"></a>永恒不变的投资三大支柱</h4><p>股票、债券、房产</p><h4 id="金融市场中的两种融通方式"><a href="#金融市场中的两种融通方式" class="headerlink" title="金融市场中的两种融通方式"></a>金融市场中的两种融通方式</h4><ol><li>债券形式<br> 我把钱借你，我是你的债主，你的生意做得好不好和我无关，就算生意失败，这钱也得还。</li><li>股票形式<br> 直接买下公司股权成为股东，生意失败，钱打水漂，生意成功，分到更丰厚的分红。</li></ol><blockquote><p>在理财道路上债券和股票都要有才行。</p></blockquote><h4 id="债券基金分类"><a href="#债券基金分类" class="headerlink" title="债券基金分类"></a>债券基金分类</h4><h5 id="按照投资期限分类"><a href="#按照投资期限分类" class="headerlink" title="按照投资期限分类"></a>按照投资期限分类</h5><p>短债基金、中短债基金、长期债券型基金</p><h5 id="按能否投资股票分类"><a href="#按能否投资股票分类" class="headerlink" title="按能否投资股票分类"></a>按能否投资股票分类</h5><p>二级债基：最多可以拿不超过20%资金投资二级市场股票的债基。<br>一级债基：不能在二级市场买股票，但是可以在一级市场打新股的债基，风险比二级债基低得多。<br>纯债基金：绝对不可以碰任何股票的债基（推荐）。<br>转债基金：专门投资可转债市场的转债基金，风险远高于纯债基金和一级债基，和二级债基风险不好比较。</p><blockquote><p>注意：名字里面没有纯债的也可能是纯债基金，名字里面有纯债的也可能还投资了高风险的可转债。</p></blockquote><h4 id="纯债基金的选购"><a href="#纯债基金的选购" class="headerlink" title="纯债基金的选购"></a>纯债基金的选购</h4><p>发行时间较久，长期回报比较稳健的优秀的纯债基金。</p><ol><li><p>天天基金网首页选择基金排行，选债券型-长期纯债-近3天倒序排序<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D.png" alt=""></p></li><li><p>取排名前30名做候选基金池</p></li><li><p>每一个点进去查看债券持仓，去除掉投资可转债的基金（存在问题：如何查看债券是否是可转债？），去除掉其中公司名气小的基金<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E6%9F%A5%E7%9C%8B%E6%8C%81%E4%BB%93.png" alt=""></p></li><li><p>剔除掉基金规模超过20亿的基金<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E6%9F%A5%E7%9C%8B%E8%A7%84%E6%A8%A1.png" alt=""></p></li><li><p>点击基金公司，往下滑，查看该基金公司的基金排名，剔除掉第二名及其以下的所有，只留下该公司<code>王牌纯债基金</code><br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E7%82%B9%E5%87%BB%E5%9F%BA%E9%87%91%E5%85%AC%E5%8F%B8.png" alt=""><br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E6%9F%A5%E7%9C%8B%E8%AF%A5%E5%85%AC%E5%8F%B8%E5%9F%BA%E9%87%91%E6%8E%92%E5%90%8D.png" alt=""></p></li><li><p>最后可以筛选到10只左右基金，点击费率详情，挑出综合费率最低的5只<br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E7%82%B9%E5%87%BB%E8%B4%B9%E7%8E%87%E8%AF%A6%E6%83%85.png" alt=""><br><img src="http://47.106.179.244/%E5%9F%BA%E9%87%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%AF%E5%80%BA%E5%9F%BA%E9%87%91%E6%8C%91%E9%80%89%E5%AE%9E%E6%93%8D-%E5%9F%BA%E9%87%91%E8%B4%B9%E7%8E%87%E9%A1%B5%E9%9D%A2.png" alt=""></p></li><li><p>再在最后5只中选择基金成立时间相对较长的，基金经理任职相对较长时间的3只纯债基金，作为长期投资的基金</p></li></ol><h4 id="ABC类型区分"><a href="#ABC类型区分" class="headerlink" title="ABC类型区分"></a>ABC类型区分</h4><p>对于债券型基金来说，常见A、B、C后缀，区分<code>收费方式</code>。</p><table><thead><tr><th align="center">分类</th><th align="center">说明</th><th align="center">特点</th><th align="center">适合投资者</th></tr></thead><tbody><tr><td align="center">A类</td><td align="center">通常指前端收费<br>（在购买基金时收取费用，但赎回没有费用）</td><td align="center">申购金额越高<br>费率越低</td><td align="center">一次性购入较多金额<br>的土豪投资者</td></tr><tr><td align="center">B类</td><td align="center">通常指后端收费<br>（在基金赎回时才收费）</td><td align="center">持有基金时间越长<br>费率越低</td><td align="center">有耐心的长情投资者</td></tr><tr><td align="center">C类</td><td align="center">通常指销售服务费<br>（不收申购费，也不收赎回费）</td><td align="center">按日收费</td><td align="center">短期持有，对流动性<br>要求较高的投资者</td></tr></tbody></table><h4 id="定期开放债基"><a href="#定期开放债基" class="headerlink" title="定期开放债基"></a>定期开放债基</h4><p>选购注意3点：</p><ol><li>选择定开债的纯债基金</li><li>别选杠杆率太高的债基（超过160%不推荐）</li><li>建议选择封闭期为1年的定开债</li></ol><h4 id="债券"><a href="#债券" class="headerlink" title="债券"></a>债券</h4><p>不建议直接投资债券。<br>直接投资债券劣势：</p><ol><li>品种较少，投资门槛较高</li><li>流动性较差</li><li>投资性价比低</li><li>投资过于复杂</li></ol><h5 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h5><ol><li>交易所债券市场<br> 缺点：和二级市场一样，债券品种少，流动性差</li><li>银行间债券市场<br> 缺点：投资起点非常高，具备银行间债券交易资格才可以进行投资</li></ol><h5 id="国债"><a href="#国债" class="headerlink" title="国债"></a>国债</h5><p>尤其是凭证式国债，是定期储蓄的最佳替代品<br>适合中老年人和保守型投资者</p><blockquote><p>纯债基金是国债的最好替代品</p></blockquote><h3 id="基金指标"><a href="#基金指标" class="headerlink" title="基金指标"></a>基金指标</h3><h4 id="基金分红"><a href="#基金分红" class="headerlink" title="基金分红"></a>基金分红</h4><p>基金分红和不分红本质上没什么区别，总资产不变。</p><p>分红方式：</p><ol><li>现金分红（相当于把收益提现）</li><li>红利再投资（收益再投资）</li></ol><h4 id="累计净值"><a href="#累计净值" class="headerlink" title="累计净值"></a>累计净值</h4><p>基金最关键指标。</p><p>单位净值：分红后的净值。<br>累计净值：算上所有分红收益的累计净值。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;基金的概念&quot;&gt;&lt;a href=&quot;#基金的概念&quot; class=&quot;headerlink&quot; title=&quot;基金的概念&quot;&gt;&lt;/a&gt;基金的概念&lt;/h3&gt;&lt;p&gt;百度百科：&lt;br&gt;基金，英文是fund，广义是指为了某种目的而设立的具有一定数量的资金。主要包括信托投资基金、公积金
      
    
    </summary>
    
    
      <category term="理财" scheme="http://blog.hming.org/categories/%E7%90%86%E8%B4%A2/"/>
    
    
      <category term="基金" scheme="http://blog.hming.org/tags/%E5%9F%BA%E9%87%91/"/>
    
      <category term="笔记" scheme="http://blog.hming.org/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>使用Zookeeper实现HiveServer2的HA</title>
    <link href="http://blog.hming.org/2020/01/16/%E4%BD%BF%E7%94%A8Zookeeper%E5%AE%9E%E7%8E%B0HiveServer2%E7%9A%84HA/"/>
    <id>http://blog.hming.org/2020/01/16/%E4%BD%BF%E7%94%A8Zookeeper%E5%AE%9E%E7%8E%B0HiveServer2%E7%9A%84HA/</id>
    <published>2020-01-16T09:10:18.000Z</published>
    <updated>2020-01-16T09:10:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要讲述如何使用Zookeeper实现HiveServer2的HA</p><h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><h4 id="修改hive配置"><a href="#修改hive配置" class="headerlink" title="修改hive配置"></a>修改hive配置</h4><p>登录Cloduera Manager，进入Hive服务，在配置中搜索<code>hive-site.xml</code>，找到<code>hive-site.xml 的 HiveServer2 高级配置代码段（安全阀）</code>，增加如下配置（Zookeeper地址修改为当前的地址）</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.server2.support.dynamic.service.discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.server2.zookeeper.namespace<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hiveserver2_zk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.zookeeper.quorum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>master1:2181,master2:2181,master3:2181<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.zookeeper.client.port<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>2181<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span></code></pre><p>修改后点击保存</p><h4 id="重启hive服务"><a href="#重启hive服务" class="headerlink" title="重启hive服务"></a>重启hive服务</h4><p>根据提示重启hive服务</p><h3 id="测试是否配置成功"><a href="#测试是否配置成功" class="headerlink" title="测试是否配置成功"></a>测试是否配置成功</h3><h4 id="查看Zookeeper注册情况"><a href="#查看Zookeeper注册情况" class="headerlink" title="查看Zookeeper注册情况"></a>查看Zookeeper注册情况</h4><p>用zookeeper-client命令进入zookeeper查看hiveserver2_zk节点下所有HiveServer2节点是否注册成功</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> 1<span class="token punctuation">]</span> <span class="token function">ls</span> /hiveserver2_zk<span class="token punctuation">[</span>serverUri<span class="token operator">=</span>master3.segma.tech:10000<span class="token punctuation">;</span>version<span class="token operator">=</span>2.1.1-cdh6.3.0<span class="token punctuation">;</span>sequence<span class="token operator">=</span>0000000001, serverUri<span class="token operator">=</span>master2.segma.tech:10000<span class="token punctuation">;</span>version<span class="token operator">=</span>2.1.1-cdh6.3.0<span class="token punctuation">;</span>sequence<span class="token operator">=</span>0000000000<span class="token punctuation">]</span></code></pre><h4 id="使用连接地址测试连接"><a href="#使用连接地址测试连接" class="headerlink" title="使用连接地址测试连接"></a>使用连接地址测试连接</h4><p>连接地址格式为：</p><pre class=" language-bash"><code class="language-bash">jdbc:hive2://<span class="token operator">&lt;</span>zookeeper quorum<span class="token operator">></span>/<span class="token operator">&lt;</span>dbName<span class="token operator">></span><span class="token punctuation">;</span>ServiceDiscoveryMode<span class="token operator">=</span>zookeeper<span class="token punctuation">;</span>zooKeeperNameSpace<span class="token operator">=</span>hiveserver2_zk</code></pre><blockquote><p>数据库名可以为空</p></blockquote><p>用beeline测试连接情况：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># beeline </span>WARNING: Use <span class="token string">"yarn jar"</span> to launch YARN applications.SLF4J: Class path contains multiple SLF4J bindings.SLF4J: Found binding <span class="token keyword">in</span> <span class="token punctuation">[</span>jar:file:/mnt/disk/opt/cloudera/parcels/CDH-6.3.0-1.cdh6.3.0.p0.1279813/jars/log4j-slf4j-impl-2.8.2.jar<span class="token operator">!</span>/org/slf4j/impl/StaticLoggerBinder.class<span class="token punctuation">]</span>SLF4J: Found binding <span class="token keyword">in</span> <span class="token punctuation">[</span>jar:file:/mnt/disk/opt/cloudera/parcels/CDH-6.3.0-1.cdh6.3.0.p0.1279813/jars/slf4j-log4j12-1.7.25.jar<span class="token operator">!</span>/org/slf4j/impl/StaticLoggerBinder.class<span class="token punctuation">]</span>SLF4J: See http://www.slf4j.org/codes.html<span class="token comment" spellcheck="true">#multiple_bindings for an explanation.</span>SLF4J: Actual binding is of <span class="token function">type</span> <span class="token punctuation">[</span>org.apache.logging.slf4j.Log4jLoggerFactory<span class="token punctuation">]</span>Beeline version 2.1.1-cdh6.3.0 by Apache Hivebeeline<span class="token operator">></span> <span class="token operator">!</span>connect jdbc:hive2://master1:2181,master2:2181,master3:2181/default<span class="token punctuation">;</span>serviceDiscoveryMode<span class="token operator">=</span>zooKeeper<span class="token punctuation">;</span>zooKeeperNamespace<span class="token operator">=</span>hiveserver2_zkConnecting to jdbc:hive2://master1:2181,master2:2181,master3:2181/default<span class="token punctuation">;</span>serviceDiscoveryMode<span class="token operator">=</span>zooKeeper<span class="token punctuation">;</span>zooKeeperNamespace<span class="token operator">=</span>hiveserver2_zkEnter username <span class="token keyword">for</span> jdbc:hive2://master1:2181,master2:2181,master3:2181/default: hvieEnter password <span class="token keyword">for</span> jdbc:hive2://master1:2181,master2:2181,master3:2181/default: 20/01/16 16:02:33 <span class="token punctuation">[</span>main<span class="token punctuation">]</span>: INFO jdbc.HiveConnection: Connected to master2.segma.tech:10000Connected to: Apache Hive <span class="token punctuation">(</span>version 2.1.1-cdh6.3.0<span class="token punctuation">)</span>Driver: Hive JDBC <span class="token punctuation">(</span>version 2.1.1-cdh6.3.0<span class="token punctuation">)</span>Transaction isolation: TRANSACTION_REPEATABLE_READ0: jdbc:hive2://master1:2181,master2:2181<span class="token operator">></span> show databases<span class="token punctuation">;</span>INFO  <span class="token keyword">:</span> Compiling command<span class="token punctuation">(</span>queryId<span class="token operator">=</span>hive_20200116160255_735faaf6-18dd-4de0-8a11-6e12aae92dff<span class="token punctuation">)</span>: show databasesINFO  <span class="token keyword">:</span> Semantic Analysis CompletedINFO  <span class="token keyword">:</span> Returning Hive schema: Schema<span class="token punctuation">(</span>fieldSchemas:<span class="token punctuation">[</span>FieldSchema<span class="token punctuation">(</span>name:database_name, type:string, comment:from deserializer<span class="token punctuation">)</span><span class="token punctuation">]</span>, properties:null<span class="token punctuation">)</span>INFO  <span class="token keyword">:</span> Completed compiling command<span class="token punctuation">(</span>queryId<span class="token operator">=</span>hive_20200116160255_735faaf6-18dd-4de0-8a11-6e12aae92dff<span class="token punctuation">)</span><span class="token punctuation">;</span> Time taken: 1.007 secondsINFO  <span class="token keyword">:</span> Executing command<span class="token punctuation">(</span>queryId<span class="token operator">=</span>hive_20200116160255_735faaf6-18dd-4de0-8a11-6e12aae92dff<span class="token punctuation">)</span>: show databasesINFO  <span class="token keyword">:</span> Starting task <span class="token punctuation">[</span>Stage-0:DDL<span class="token punctuation">]</span> <span class="token keyword">in</span> serial modeINFO  <span class="token keyword">:</span> Completed executing command<span class="token punctuation">(</span>queryId<span class="token operator">=</span>hive_20200116160255_735faaf6-18dd-4de0-8a11-6e12aae92dff<span class="token punctuation">)</span><span class="token punctuation">;</span> Time taken: 0.025 secondsINFO  <span class="token keyword">:</span> OK+----------------+<span class="token operator">|</span> database_name  <span class="token operator">|</span>+----------------+<span class="token operator">|</span> default        <span class="token operator">|</span>+----------------+1 row selected <span class="token punctuation">(</span>1.403 seconds<span class="token punctuation">)</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文主要讲述如何使用Zookeeper实现HiveServer2的HA&lt;/p&gt;
&lt;h3 id=&quot;配置过程&quot;&gt;&lt;a href=&quot;#配置过程&quot; class=&quot;headerlink&quot; title=&quot;配置过程&quot;&gt;&lt;/a&gt;配置过程&lt;/h3&gt;&lt;h4 id=&quot;修改hive配置&quot;&gt;&lt;a h
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="CDH" scheme="http://blog.hming.org/tags/CDH/"/>
    
      <category term="Hive" scheme="http://blog.hming.org/tags/Hive/"/>
    
      <category term="Zookeeper" scheme="http://blog.hming.org/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>hive注释中文乱码问题</title>
    <link href="http://blog.hming.org/2019/09/26/hive%E6%B3%A8%E9%87%8A%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.hming.org/2019/09/26/hive%E6%B3%A8%E9%87%8A%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</id>
    <published>2019-09-26T09:24:40.000Z</published>
    <updated>2019-09-26T09:24:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>在安装CDH中Hive时，虽然设置了Hive元数据库编码为UTF-8，但是创建Hive表注释依然会有乱码问题，本文介绍乱码原因以及解决方法。</p><h3 id="乱码原因"><a href="#乱码原因" class="headerlink" title="乱码原因"></a>乱码原因</h3><p>查看Hive元数据库（本文为MySQL中metastore），发现虽然数据库编码为UTF-8，但是库下面的表编码却还是latin1，这是因为虽然创建metastore库时指定了编码UTF-8，但是CDH在安装Hive时却还是以latin1编码去创建表的，所以导致Hive表存在中文乱码问题。</p><h3 id="解决方法步骤"><a href="#解决方法步骤" class="headerlink" title="解决方法步骤"></a>解决方法步骤</h3><h4 id="登录MySQL，进入Hive元数据库"><a href="#登录MySQL，进入Hive元数据库" class="headerlink" title="登录MySQL，进入Hive元数据库"></a>登录MySQL，进入Hive元数据库</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">use</span> metastore<span class="token punctuation">;</span></code></pre><h4 id="修改字段注释字符集"><a href="#修改字段注释字符集" class="headerlink" title="修改字段注释字符集"></a>修改字段注释字符集</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> COLUMNS_V2 <span class="token keyword">modify</span> <span class="token keyword">column</span> <span class="token keyword">COMMENT</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span></code></pre><h4 id="修改表注释字符集"><a href="#修改表注释字符集" class="headerlink" title="修改表注释字符集"></a>修改表注释字符集</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> TABLE_PARAMS <span class="token keyword">modify</span> <span class="token keyword">column</span> PARAM_VALUE <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span>     <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span></code></pre><h4 id="修改分区参数，支持分区建用中文表示"><a href="#修改分区参数，支持分区建用中文表示" class="headerlink" title="修改分区参数，支持分区建用中文表示"></a>修改分区参数，支持分区建用中文表示</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> PARTITION_PARAMS <span class="token keyword">modify</span> <span class="token keyword">column</span> PARAM_VALUE <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span> <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> PARTITION_KEYS <span class="token keyword">modify</span> <span class="token keyword">column</span> PKEY_COMMENT <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span> <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span></code></pre><h4 id="修改表名注释，支持中文表示"><a href="#修改表名注释，支持中文表示" class="headerlink" title="修改表名注释，支持中文表示"></a>修改表名注释，支持中文表示</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> INDEX_PARAMS <span class="token keyword">modify</span> <span class="token keyword">column</span> PARAM_VALUE <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span> <span class="token keyword">character set</span> utf8<span class="token punctuation">;</span></code></pre><h4 id="修改视图，支持视图中文"><a href="#修改视图，支持视图中文" class="headerlink" title="修改视图，支持视图中文"></a>修改视图，支持视图中文</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> TBLS <span class="token keyword">modify</span> <span class="token keyword">COLUMN</span> VIEW_EXPANDED_TEXT <span class="token keyword">mediumtext</span> <span class="token keyword">CHARACTER SET</span> utf8<span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> TBLS <span class="token keyword">modify</span> <span class="token keyword">COLUMN</span> VIEW_ORIGINAL_TEXT <span class="token keyword">mediumtext</span> <span class="token keyword">CHARACTER SET</span> utf8<span class="token punctuation">;</span></code></pre><h4 id="修改数据库注释，支持中文表示"><a href="#修改数据库注释，支持中文表示" class="headerlink" title="修改数据库注释，支持中文表示"></a>修改数据库注释，支持中文表示</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> DBS <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span><span class="token keyword">DESC</span><span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER SET</span> utf8<span class="token punctuation">;</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在安装CDH中Hive时，虽然设置了Hive元数据库编码为UTF-8，但是创建Hive表注释依然会有乱码问题，本文介绍乱码原因以及解决方法。&lt;/p&gt;
&lt;h3 id=&quot;乱码原因&quot;&gt;&lt;a href=&quot;#乱码原因&quot; class=&quot;headerlink&quot; title=&quot;乱码原因&quot;&gt;
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="CDH" scheme="http://blog.hming.org/tags/CDH/"/>
    
      <category term="Hive" scheme="http://blog.hming.org/tags/Hive/"/>
    
      <category term="乱码" scheme="http://blog.hming.org/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Impala配置优化</title>
    <link href="http://blog.hming.org/2019/09/18/Impala%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96/"/>
    <id>http://blog.hming.org/2019/09/18/Impala%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96/</id>
    <published>2019-09-18T02:43:34.000Z</published>
    <updated>2020-01-16T11:36:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考官网文档：<br>Impala安装后的推荐配置<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_config_performance.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_config_performance.html</a></p><h3 id="HDFS快速读取"><a href="#HDFS快速读取" class="headerlink" title="HDFS快速读取"></a>HDFS快速读取</h3><p>启用快速读取允许Impala直接从文件系统读取本地数据。不再需要通过DataNode进行通信，从而提高了性能。<br>cloudera manager进入impala配置页面，搜索<code>dfs.client.read.shortcircuit</code>，勾选后重启。</p><h3 id="设置内存限制"><a href="#设置内存限制" class="headerlink" title="设置内存限制"></a>设置内存限制</h3><p>进入impala配置页面，搜索<code>mem_limit</code></p><h3 id="设置连接超时时间"><a href="#设置连接超时时间" class="headerlink" title="设置连接超时时间"></a>设置连接超时时间</h3><p>进入impala配置页面，搜索<code>idle_session_timeout</code></p><blockquote><p>注意：超时时间设置过短可能导致服务端连接关闭而客户端未关闭，可能造成客户端无法使用impala的问题</p></blockquote><h3 id="设置连接数"><a href="#设置连接数" class="headerlink" title="设置连接数"></a>设置连接数</h3><p>进入impala配置页面，搜索<code>fe_service_threads</code></p><h3 id="使用HDFS缓存"><a href="#使用HDFS缓存" class="headerlink" title="使用HDFS缓存"></a>使用HDFS缓存</h3><p>参考官网文档：<br>使用Impala时设置HDFS缓存<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_perf_hdfs_caching.html#hdfs_caching" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_perf_hdfs_caching.html#hdfs_caching</a></p><h3 id="配置Impala负载均衡"><a href="#配置Impala负载均衡" class="headerlink" title="配置Impala负载均衡"></a>配置Impala负载均衡</h3><p>参考官网文档：<br><a href="https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/impala_proxy.html" target="_blank" rel="noopener">Using Impala through a Proxy for High Availability</a><br>参考微信公众hadoop实操文章：<br><a href="https://mp.weixin.qq.com/s/LX4PTr4XcZEOwjZRytroCQ" target="_blank" rel="noopener">如何使用HAProxy实现Impala的负载均衡</a></p><h3 id="Impala-timestamp类型时区问题"><a href="#Impala-timestamp类型时区问题" class="headerlink" title="Impala timestamp类型时区问题"></a>Impala timestamp类型时区问题</h3><p>参考微信公众hadoop实操文章：<br><a href="https://cloud.tencent.com/developer/article/1078478" target="_blank" rel="noopener">Hive中的Timestamp类型日期与Impala中显示不一致分析（补充）</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考官网文档：&lt;br&gt;Impala安装后的推荐配置&lt;a href=&quot;https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_config_performance.html&quot; target=&quot;
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="CDH" scheme="http://blog.hming.org/tags/CDH/"/>
    
      <category term="Impala" scheme="http://blog.hming.org/tags/Impala/"/>
    
      <category term="优化" scheme="http://blog.hming.org/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>CDH官网链接整理</title>
    <link href="http://blog.hming.org/2019/09/17/CDH%E5%AE%98%E7%BD%91%E9%93%BE%E6%8E%A5%E6%95%B4%E7%90%86/"/>
    <id>http://blog.hming.org/2019/09/17/CDH%E5%AE%98%E7%BD%91%E9%93%BE%E6%8E%A5%E6%95%B4%E7%90%86/</id>
    <published>2019-09-17T11:09:34.000Z</published>
    <updated>2019-09-17T11:09:34.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装部署类"><a href="#安装部署类" class="headerlink" title="安装部署类"></a>安装部署类</h3><h4 id="CDH安装教程"><a href="#CDH安装教程" class="headerlink" title="CDH安装教程"></a>CDH安装教程</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/installation.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/installation.html</a>  </p><h4 id="CDH、CM安装包下载地址"><a href="#CDH、CM安装包下载地址" class="headerlink" title="CDH、CM安装包下载地址"></a>CDH、CM安装包下载地址</h4><p><a href="https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_version_packaging_download.html" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_version_packaging_download.html</a></p><h4 id="集群所使用端口"><a href="#集群所使用端口" class="headerlink" title="集群所使用端口"></a>集群所使用端口</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_ports.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_ports.html</a>  </p><h4 id="集群组件服务主机分配建议"><a href="#集群组件服务主机分配建议" class="headerlink" title="集群组件服务主机分配建议"></a>集群组件服务主机分配建议</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_host_allocations.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_host_allocations.html</a>  </p><h4 id="定制化安装（离线安装）"><a href="#定制化安装（离线安装）" class="headerlink" title="定制化安装（离线安装）"></a>定制化安装（离线安装）</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_custom_installation.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_custom_installation.html</a>  </p><h4 id="基于裸金属部署参考文档"><a href="#基于裸金属部署参考文档" class="headerlink" title="基于裸金属部署参考文档"></a>基于裸金属部署参考文档</h4><p><a href="https://www.cloudera.com/documentation/other/reference-architecture/topics/ra_bare_metal_deployment.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/other/reference-architecture/topics/ra_bare_metal_deployment.html</a>  </p><h4 id="CHD各组件服务依赖项"><a href="#CHD各组件服务依赖项" class="headerlink" title="CHD各组件服务依赖项"></a>CHD各组件服务依赖项</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_service_dependencies.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_service_dependencies.html</a></p><h3 id="Cloudera-Manager相关"><a href="#Cloudera-Manager相关" class="headerlink" title="Cloudera Manager相关"></a>Cloudera Manager相关</h3><h4 id="Cloudera-Manager-API"><a href="#Cloudera-Manager-API" class="headerlink" title="Cloudera Manager API"></a>Cloudera Manager API</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_intro_api.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_intro_api.html</a>  </p><h4 id="Cloudera-Manager常见问题（FAQ）"><a href="#Cloudera-Manager常见问题（FAQ）" class="headerlink" title="Cloudera Manager常见问题（FAQ）"></a>Cloudera Manager常见问题（FAQ）</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_faqs.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_faqs.html</a>  </p><h3 id="Impala相关"><a href="#Impala相关" class="headerlink" title="Impala相关"></a>Impala相关</h3><h4 id="Impala内存和查询数据量的关系"><a href="#Impala内存和查询数据量的关系" class="headerlink" title="Impala内存和查询数据量的关系"></a>Impala内存和查询数据量的关系</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_faq.html#faq_internals__faq_memory_exceeded" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_faq.html#faq_internals__faq_memory_exceeded？</a></p><h4 id="Impala常见问题及解答"><a href="#Impala常见问题及解答" class="headerlink" title="Impala常见问题及解答"></a>Impala常见问题及解答</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_faq.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_faq.html</a></p><h4 id="使用Impala时设置HDFS缓存"><a href="#使用Impala时设置HDFS缓存" class="headerlink" title="使用Impala时设置HDFS缓存"></a>使用Impala时设置HDFS缓存</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_perf_hdfs_caching.html#hdfs_caching" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_perf_hdfs_caching.html#hdfs_caching</a></p><h4 id="Impala安装后的推荐配置"><a href="#Impala安装后的推荐配置" class="headerlink" title="Impala安装后的推荐配置"></a>Impala安装后的推荐配置</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_config_performance.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_config_performance.html</a></p><h4 id="Impala安装要求"><a href="#Impala安装要求" class="headerlink" title="Impala安装要求"></a>Impala安装要求</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_prereqs.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_prereqs.html</a>  </p><h4 id="Impala元数据管理-自动同步Hive元数据"><a href="#Impala元数据管理-自动同步Hive元数据" class="headerlink" title="Impala元数据管理(自动同步Hive元数据)"></a>Impala元数据管理(自动同步Hive元数据)</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_metadata.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_metadata.html</a></p><h4 id="Impala中SQL和HQL的区别"><a href="#Impala中SQL和HQL的区别" class="headerlink" title="Impala中SQL和HQL的区别"></a>Impala中SQL和HQL的区别</h4><p><a href="https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_langref_unsupported.html" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_langref_unsupported.html</a></p><h4 id="Impala聚合函数"><a href="#Impala聚合函数" class="headerlink" title="Impala聚合函数"></a>Impala聚合函数</h4><p><a href="https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_aggregate_functions.html#aggregate_functions" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_aggregate_functions.html#aggregate_functions</a></p><h4 id="Impala分析函数"><a href="#Impala分析函数" class="headerlink" title="Impala分析函数"></a>Impala分析函数</h4><p><a href="https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_analytic_functions.html#analytic_functions" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_analytic_functions.html#analytic_functions</a></p><h4 id="从其他数据库迁移Sql到Impala注意事项"><a href="#从其他数据库迁移Sql到Impala注意事项" class="headerlink" title="从其他数据库迁移Sql到Impala注意事项"></a>从其他数据库迁移Sql到Impala注意事项</h4><p><a href="https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_porting.html#porting" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/latest/topics/impala_porting.html#porting</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装部署类&quot;&gt;&lt;a href=&quot;#安装部署类&quot; class=&quot;headerlink&quot; title=&quot;安装部署类&quot;&gt;&lt;/a&gt;安装部署类&lt;/h3&gt;&lt;h4 id=&quot;CDH安装教程&quot;&gt;&lt;a href=&quot;#CDH安装教程&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="CDH" scheme="http://blog.hming.org/tags/CDH/"/>
    
      <category term="官网链接" scheme="http://blog.hming.org/tags/%E5%AE%98%E7%BD%91%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>Impala配置自动同步Hive元数据</title>
    <link href="http://blog.hming.org/2019/09/10/Impala%E9%85%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E5%90%8C%E6%AD%A5Hive%E5%85%83%E6%95%B0%E6%8D%AE/"/>
    <id>http://blog.hming.org/2019/09/10/Impala%E9%85%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E5%90%8C%E6%AD%A5Hive%E5%85%83%E6%95%B0%E6%8D%AE/</id>
    <published>2019-09-10T07:12:15.000Z</published>
    <updated>2020-01-16T11:36:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考官方文档：<a href="https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/impala_metadata.html#auto_poll_hms_notification" target="_blank" rel="noopener">Automatic Invalidation/Refresh of Metadata</a></p><h3 id="原理解释"><a href="#原理解释" class="headerlink" title="原理解释"></a>原理解释</h3><p>Impala使用Catalog服务进行元数据的管理，Catalog使用StateStore进行元数据同步分发到各个Impalad服务。<br>Impala使用两个元数据：</p><ul><li>来自Hive Metastore的目录信息</li><li>来自NameNode的文件元数据。</li></ul><p>在通过非Impala操作修改数据时（如：Hive操作、Spark操作Hive、HDFS直接操作表文件等），Impala是无感知的，此时需要在Impala端进行手动刷新元数据，手动刷新有两种方式:</p><ul><li><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_refresh.html#refresh" target="_blank" rel="noopener">REFRESH</a></li><li><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/impala_invalidate_metadata.html" target="_blank" rel="noopener">INVALIDATE METADATA</a></li></ul><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>由于全局刷新<code>invalidate metadata</code>语句会丢弃所有的元数据，导致没有更新的表再次查询也会去拉取元数据（造成延迟），所以不能采用这种方式（官网不推荐）。<br>所以只能使用<code>invalidate metadata [表名]</code>或者<code>refresh [表名]</code>的方式。但是这样会有一个问题，需要知道表名，</p><h3 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h3><h4 id="impala配置修改"><a href="#impala配置修改" class="headerlink" title="impala配置修改"></a>impala配置修改</h4><ol><li><p>查看<code>impala catalog server web UI</code><br><code>/metrics</code><br><code>events</code><br>发现只有一个<code>events-processor.status</code>为<code>DISABLED</code></p></li><li><p>在impala配置中找 <code>Catalog Server 命令行参数高级配置代码段（安全阀）</code><br>加入一下代码 （短横线中间不能有空格）：</p><pre class=" language-ini"><code class="language-ini"><span class="token constant"> --hms_event_polling_interval_s</span><span class="token attr-value"><span class="token punctuation">=</span>1</span></code></pre><blockquote><p>此时直接重启impala会报错，先修改hive配置</p></blockquote></li></ol><h4 id="hive配置修改"><a href="#hive配置修改" class="headerlink" title="hive配置修改"></a>hive配置修改</h4><p>进入hive配置页面</p><ol><li><p>勾选 <code>启用数据库中的存储通知</code></p></li><li><p>在搜索框输入<code>hive-site.xml</code><br>在 <code>hive-site.xml 的 Hive Metastore Server 高级配置代码段（安全阀）</code> 中添加两个值</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.notifications.add.thrift.objects<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>set auto invalidate metadata on hive events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.alter.notifications.basic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>set auto invalidate metadata on hive events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span></code></pre></li><li><p>在 <code>hive-site.xml 的 Hive 服务高级配置代码段（安全阀）</code> 中添加</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.dml.events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>set auto invalidate metadata on hive events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span></code></pre></li><li><p>在 <code>hive-site.xml 的 Hive 客户端高级配置代码段（安全阀）</code> 中添加</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.dml.events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>set auto invalidate metadata on hive events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span></code></pre></li></ol><h3 id="剩余的坑"><a href="#剩余的坑" class="headerlink" title="剩余的坑"></a>剩余的坑</h3><p><a href="https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/impala_metadata.html#auto_poll_hms_notification" target="_blank" rel="noopener">官方文档</a>里面说<code>insert</code>操作触发的是<code>refresh</code>，但是据实际测试情况来看，触发的是<code>invalidate metadata [table]</code>，两者的区别在于<code>refresh</code>几乎没有延迟，而<code>invalidate metadata [table]</code>下次进行查询时impala会去拉取元数据信息，会有延迟。</p><p>经过官方人员确认，表示insert确实是invalidate的效果，回复原话如下：</p><blockquote><p>这个功能现在还比较粗暴，这块确实还是invalidate的效果……因为insert非partition表的时候hive发出来的是一个alter事件后接一个insert事件，接到alter事件后就执行invalidate了；insert partition的时候hive发出来的是一个insert事件后接一个alter事件，于是最终又会执行一次invalidate……</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考官方文档：&lt;a href=&quot;https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/impala_metadata.html#auto_poll_hms_notification&quot; target=&quot;
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="CDH" scheme="http://blog.hming.org/tags/CDH/"/>
    
      <category term="Impala" scheme="http://blog.hming.org/tags/Impala/"/>
    
      <category term="元数据" scheme="http://blog.hming.org/tags/%E5%85%83%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>CDH集群Yarn内存调优</title>
    <link href="http://blog.hming.org/2019/08/30/CDH%E9%9B%86%E7%BE%A4Yarn%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/"/>
    <id>http://blog.hming.org/2019/08/30/CDH%E9%9B%86%E7%BE%A4Yarn%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/</id>
    <published>2019-08-30T01:13:32.000Z</published>
    <updated>2019-08-30T01:13:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>HDP的内存调优建议：<a href="http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.1.1/bk_installing_manually_book/content/rpm-chap1-11.html" target="_blank" rel="noopener">http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.1.1/bk_installing_manually_book/content/rpm-chap1-11.html </a></p><h3 id="DRF"><a href="#DRF" class="headerlink" title="DRF"></a>DRF</h3><p>DRF: <code>Dominant Resource Fairness</code>，根据CPU和内存公平调度资源。CDH动态资源池默认采用的DRF计划策略。简单的理解就是内存不够的时候，多余的CPU就不会分配任务了，就让他空着；CPU不够的时候，多出来的内存也不会再启动任务了。</p><h3 id="相关参数"><a href="#相关参数" class="headerlink" title="相关参数"></a>相关参数</h3><h4 id="RM的内存资源配置-配置的是资源调度相关"><a href="#RM的内存资源配置-配置的是资源调度相关" class="headerlink" title="RM的内存资源配置, 配置的是资源调度相关"></a>RM的内存资源配置, 配置的是资源调度相关</h4><ul><li><code>RM1</code>：<strong>yarn.app.mapreduce.am.resource.mb</strong>， ApplicationMaster自身的物理内存要求</li><li><code>RM2</code>：<strong>yarn.scheduler.minimum-allocation-mb</strong>，分配给AM单个容器可申请的最小内存，如果申请的容器内存小于该值，则系统将调整至该值</li><li><code>RM3</code>：<strong>yarn.scheduler.maximum-allocation-mb</strong>，分配给AM单个容器可申请的最大内存<blockquote><p>上面三个值均不能超过<code>NM1</code>值<br>由于AM也是容器，所以<code>RM1</code>的值需要在<code>RM2</code>、<code>RM3</code>范围内。</p></blockquote></li></ul><h4 id="NM的内存资源配置，配置的是硬件资源相关"><a href="#NM的内存资源配置，配置的是硬件资源相关" class="headerlink" title="NM的内存资源配置，配置的是硬件资源相关"></a>NM的内存资源配置，配置的是硬件资源相关</h4><ul><li><code>NM1</code>：<strong>yarn.nodemanager.resource.memory-mb</strong> ，NodeManager节点分配给容器的内存，cdh默认8G</li><li><code>NM2</code>：<strong>yarn.nodemanager.resource.cpu-vcores</strong> ，NodeManager节点分配给容器虚拟CPU核数，cdh默认8，但CM会自动检测内核数并修改<blockquote><p><code>NM1</code>可以计算节点最大最大Container数量，max(Container)=<code>NM1</code>/<code>RM2</code></p></blockquote></li></ul><h4 id="AM内存配置相关参数，配置的是任务相关"><a href="#AM内存配置相关参数，配置的是任务相关" class="headerlink" title="AM内存配置相关参数，配置的是任务相关"></a>AM内存配置相关参数，配置的是任务相关</h4><ul><li><code>AM1</code>：<strong>mapreduce.map.memory.mb</strong> ，map任务内存，cdh默认1G（不能超过容器最大内存限制）</li><li><code>AM2</code>：<strong>mapreduce.map.cpu.vcores</strong> ，map任务虚拟CPU核数，cdh默认1</li><li><code>AM3</code>：<strong>mapreduce.reduce.memory.mb</strong> ，reduce任务内存，cdh默认1G（不能超过容器最大内存限制）</li><li><code>AM4</code>：<strong>mapreduce.reduce.cpu.vcores</strong> ，reduce任务虚拟CPU核数，cdh默认1<blockquote><p><code>AM1</code>、<code>AM3</code>这两个值应该在<code>RM2</code>和<code>RM3</code>这两个值之间<br><code>AM3</code>的值最好为<code>AM1</code>的两倍</p></blockquote></li></ul><h3 id="测试情况"><a href="#测试情况" class="headerlink" title="测试情况"></a>测试情况</h3><p>Yarn资源分配情况，虚拟CPU共分配了24核，内存则是他的两倍48G<br><img src="http://47.106.179.244/CDH%E9%9B%86%E7%BE%A4Yarn%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/yarn%E8%B5%84%E6%BA%90%E9%85%8D%E7%BD%AE.png" alt=""></p><p>执行任务，队列调度策略为DRF，查看内存和CPU使用情况<br><img src="http://47.106.179.244/CDH%E9%9B%86%E7%BE%A4Yarn%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/%E5%86%85%E5%AD%98CPU%E4%BD%BF%E7%94%A8%E5%AF%B9%E6%AF%94.png" alt=""><br><img src="http://47.106.179.244/CDH%E9%9B%86%E7%BE%A4Yarn%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5.png" alt=""><br><img src="http://47.106.179.244/CDH%E9%9B%86%E7%BE%A4Yarn%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/CPU%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5.png" alt=""><br>可以发现，内存使用受限于cpu，与DRF策略吻合</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><strong>Yarn队列如果采用的是DRF调度策略，则vcpu和内存最好按照1:1比例进行分配，因为多余的资源根本不会用到。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;HDP的内存调优建议：&lt;a href=&quot;http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.1.1/bk_installing_manually_book/content/rpm-chap1-11.html&quot; target
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="CDH" scheme="http://blog.hming.org/tags/CDH/"/>
    
      <category term="Yarn" scheme="http://blog.hming.org/tags/Yarn/"/>
    
      <category term="参数调优" scheme="http://blog.hming.org/tags/%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98/"/>
    
  </entry>
  
  <entry>
    <title>如何给CDH集群分配角色</title>
    <link href="http://blog.hming.org/2019/08/27/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/"/>
    <id>http://blog.hming.org/2019/08/27/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/</id>
    <published>2019-08-27T05:57:27.000Z</published>
    <updated>2019-08-27T05:57:27.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文转载自微信公众号Hadoop实操：《如何给Hadoop集群划分角色》</p></blockquote><p>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/latest/topics/cm_ig_host_allocations.html" target="_blank" rel="noopener">Recommended Cluster Hosts and Role Distribution</a></p><h3 id="1-文档编写目的"><a href="#1-文档编写目的" class="headerlink" title="1.文档编写目的"></a>1.文档编写目的</h3><p>Fayson在之前的文章中介绍过《CDH网络要求(Lenovo参考架构)》，《如何为Hadoop集群选择正确的硬件》和《CDH安装前置准备》，而我们在搭建Hadoop集群时，还一件很重要的事就是如何给集群分配角色。</p><p>本文主要介绍由Cloudera Manager管理的CDH集群的角色划分。实际部署你可能还需要考虑工作负载的类型和数量，真实要部署的哪些服务，硬件资源，配置，以及其他因素。当你使用Cloudera Manager的安装向导来安装CDH时，CM会根据主机的可用资源，自动的分配角色到各台主机，边缘节点除外。你可以在向导中使用”自定义角色分配 - Customize Role Assignments”来更改这些默认划分，当然你也可以以后再使用Cloudera Manager来增加或修改角色分配。</p><p>在介绍角色划分时，我们首先来看看有哪几种主要的角色：</p><p>1.<strong>管理节点（Master Hosts）</strong>：主要用于运行Hadoop的管理进程，比如HDFS的NameNode，YARN的ResourceManager。</p><p>2.<strong>工具节点（Utility Hosts）</strong>:主要用于运行非管理进程的其他进程，比如Cloudera Manager和Hive Metastore。</p><p>3.<strong>边缘节点（Edge Hosts）</strong>：用于集群中启动作业的客户端机器，边缘节点的数量取决于工作负载的类型和数量。</p><p>4.<strong>工作节点（Worker Hosts）</strong>：主要用于运行DataNode以及其他分布式进程，比如ImpalaD。</p><p>本文会从测试/开发集群（小于10台），小规模集群（10-20台），中小规模集群（20-50台），中等规模集群（50-100台），大型集群（100-200台），超大规模集群（200-500台），巨型规模集群（500台以上）来分别讲述角色划分。以下角色划分场景都不包括Kafka，Kafka角色我们一般都会采用单独的机器部署。</p><h3 id="2-集群角色划分"><a href="#2-集群角色划分" class="headerlink" title="2.集群角色划分"></a>2.集群角色划分</h3><h4 id="2-1-小于10台"><a href="#2-1-小于10台" class="headerlink" title="2.1.小于10台"></a>2.1.小于10台</h4><p>一般用于测试/开发集群，我们建议至少5台机器，没有高可用。一个管理节点主要用于安装NameNode和ResourceManager，工具节点和边缘节点复用一个，主要用于安装Cloudera Manager等，剩余3-7台工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/%E5%B0%8F%E4%BA%8E10%E5%8F%B0.jpeg" alt=""></p><h4 id="2-2-10-20台"><a href="#2-2-10-20台" class="headerlink" title="2.2.10-20台"></a>2.2.10-20台</h4><p>这是最小规模的生产系统，必须启用高可用。我们会用2个管理节点用于安装2个NameNode，一个工具节点用于安装Cloudera Manager等，如果机器充足或者Hue/HiveServer2/Flume的负载特别高，可以考虑独立出边缘节点用于部署这些角色，否则也可以跟Cloudera Manager复用。最后还剩下7-17个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/10-20%E5%8F%B0.jpeg" alt=""></p><p>注：根据实际情况选择是否需要单独的边缘节点。</p><p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p><p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p><p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p><h4 id="2-3-20-50台"><a href="#2-3-20-50台" class="headerlink" title="2.3.20-50台"></a>2.3.20-50台</h4><p>这是中小规模的生产集群，必须启用高可用，与小规模集群角色划分差别不大。我们会用3个管理节点用于安装NameNode和Zookeeper等，一个工具节点用于安装ClouderaManager等，如果机器充足或者Hue/HiveServer2/Flume的负载特别高，可以考虑独立出边缘节点用于部署这些角色，否则也可以跟Cloudera Manager复用。最后还剩下16-46个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/20-50%E5%8F%B0.jpeg" alt=""></p><p>注：根据实际情况选择是否需要单独的边缘节点。</p><p>Zookeeper和JournalNode需配置专有的数据盘</p><p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p><p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p><p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p><p>HiveServer2和Impala Daemon的负载均衡参考《如何使用HAProxy实现Impala的负载均衡》，《如何使用HAProxy实现HiveServer2负载均衡》，《如何使用HAProxy实现Kerberos环境下的Impala负载均衡》，《如何使用Nginx实现Impala负载均衡》和《如何使用Zookeeper实现HiveServer2的HA》</p><h4 id="2-4-50-100台"><a href="#2-4-50-100台" class="headerlink" title="2.4.50-100台"></a>2.4.50-100台</h4><p>这是中等规模的生产集群，必须启用高可用。我们会用3个管理节点用于安装NameNode和Zookeeper等，一个工具节点用于安装Cloudera Manager，一个工具节点用于安装ClouderaManagement Service和Navigator等。使用三个节点安装Hue/HiveServer2/Flume，作为边缘节点，使用两个节点安装负载均衡软件比如F5或者HAProxy并配置为KeepAlive的主主模式，该负载均衡可同时用于HiveServer2和Impala Daemon。最后还剩下42-92个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/50-100%E5%8F%B0.jpeg" alt=""></p><p>注：Zookeeper和JournalNode需配置专有的数据盘</p><p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p><p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p><p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p><p>HiveServer2和Impala Daemon的负载均衡参考《如何使用HAProxy实现Impala的负载均衡》，《如何使用HAProxy实现HiveServer2负载均衡》，《如何使用HAProxy实现Kerberos环境下的Impala负载均衡》，《如何使用Nginx实现Impala负载均衡》和《如何使用Zookeeper实现HiveServer2的HA》</p><h4 id="2-5-100-200台"><a href="#2-5-100-200台" class="headerlink" title="2.5.100-200台"></a>2.5.100-200台</h4><p>属于大规模的生产集群，必须启用高可用。我们会用5个管理节点用于安装NameNode和Zookeeper等，1个工具节点用于安装Cloudera Manager，再使用4个工具节点分别安装HMS，Activity Monitor，Navigator等。使用3个以上节点安装Hue/HiveServer2/Flume，作为边缘节点，使用2个节点安装负载均衡软件比如F5或者HAProxy并配置为KeepAlive的主主模式，该负载均衡可同时用于HiveServer2和Impala Daemon。最后还剩下85-185个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/100-200%E5%8F%B0.jpeg" alt=""></p><p>注：Zookeeper和JournalNode需配置专有的数据盘</p><p>Kudu Master不超过3个</p><p>Kudu Tablet Server不超过100个</p><p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p><p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p><p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p><p>HiveServer2和Impala Daemon的负载均衡参考《如何使用HAProxy实现Impala的负载均衡》，《如何使用HAProxy实现HiveServer2负载均衡》，《如何使用HAProxy实现Kerberos环境下的Impala负载均衡》，《如何使用Nginx实现Impala负载均衡》和《如何使用Zookeeper实现HiveServer2的HA》</p><h4 id="2-6-200-500台"><a href="#2-6-200-500台" class="headerlink" title="2.6.200-500台"></a>2.6.200-500台</h4><p>属于超大规模的生产集群，必须启用高可用。我们会用7个管理节点用于安装NameNode和Zookeeper等，1个工具节点用于安装Cloudera Manager，再使用7个工具节点分别安装HMS，Activity Monitor，Navigator等。使用3个以上节点安装Hue/HiveServer2/Flume，作为边缘节点，使用2个节点安装负载均衡软件比如F5或者HAProxy并配置为KeepAlive的主主模式，该负载均衡可同时用于HiveServer2和Impala Daemon。最后还剩下180-480个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/200-500%E5%8F%B0.jpeg" alt=""></p><p>注：Zookeeper和JournalNode需配置专有的数据盘</p><p>Kudu Master不超过3个</p><p>Kudu Tablet Server不超过100个</p><p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p><p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p><p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p><p>HiveServer2和Impala Daemon的负载均衡参考《如何使用HAProxy实现Impala的负载均衡》，《如何使用HAProxy实现HiveServer2负载均衡》，《如何使用HAProxy实现Kerberos环境下的Impala负载均衡》，《如何使用Nginx实现Impala负载均衡》和《如何使用Zookeeper实现HiveServer2的HA》</p><h4 id="2-7-500台以上"><a href="#2-7-500台以上" class="headerlink" title="2.7.500台以上"></a>2.7.500台以上</h4><p>属于巨型规模的生产集群，必须启用高可用。我们会用20个管理节点用于安装NameNode和Zookeeper等，1个工具节点用于安装Cloudera Manager，再使用7个工具节点分别安装HMS，Activity Monitor，Navigator等。使用3个以上节点安装Hue/HiveServer2/Flume，作为边缘节点，使用2个节点安装负载均衡软件比如F5或者HAProxy并配置为KeepAlive的主主模式，该负载均衡可同时用于HiveServer2和Impala Daemon。最后还剩下至少467个工作节点。<br><img src="http://47.106.179.244/%E5%A6%82%E4%BD%95%E7%BB%99CDH%E9%9B%86%E7%BE%A4%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2/500%E5%8F%B0%E4%BB%A5%E4%B8%8A.jpeg" alt=""></p><p>注：这个规模的规划仅供参考，这种巨型规模的生产集群的角色划分依赖因素非常多，比如是否考虑NN和RM的联邦等</p><p>Zookeeper和JournalNode需配置专有的数据盘</p><p>Kudu Master不超过3个</p><p>Kudu Tablet Server不超过100个</p><p>MySQL主备参考《如何实现CDH元数据库MySQL的主备》，《如何实现CDH元数据库MySQL的主主互备》和《如何实现CDH元数据库MySQL的高可用》</p><p>OpenLDAP主备参考《3.如何实现OpenLDAP的主主同步》</p><p>Kerberos主备参考《如何配置Kerberos服务的高可用》</p><p>HiveServer2和Impala Daemon的负载均衡参考《如何使用HAProxy实现Impala的负载均衡》，《如何使用HAProxy实现HiveServer2负载均衡》，《如何使用HAProxy实现Kerberos环境下的Impala负载均衡》，《如何使用Nginx实现Impala负载均衡》和《如何使用Zookeeper实现HiveServer2的HA》</p><p>如果你玩的Hadoop集群节点数不在本文范围内，那你肯定不是在玩大数据，或者超过了Fayson的能力范围。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文转载自微信公众号Hadoop实操：《如何给Hadoop集群划分角色》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考官网：&lt;a href=&quot;https://www.cloudera.com/documentation/enterprise/la
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="CDH" scheme="http://blog.hming.org/tags/CDH/"/>
    
      <category term="角色分配" scheme="http://blog.hming.org/tags/%E8%A7%92%E8%89%B2%E5%88%86%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7离线安装CDH</title>
    <link href="http://blog.hming.org/2019/08/16/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/"/>
    <id>http://blog.hming.org/2019/08/16/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/</id>
    <published>2019-08-16T07:03:41.000Z</published>
    <updated>2019-09-03T11:31:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>环境准备部分参考文章：<a href="https://mp.weixin.qq.com/s?__biz=MzI4OTY3MTUyNg==&mid=2247485512&idx=1&sn=9e953a7eb8b3b2a64a011550ab7da184&chksm=ec2ad841db5d51573f5913d14c33135180bca023de1c349fc431f561c055d1d085527107b66e&scene=21#wechat_redirect" target="_blank" rel="noopener">Hadoop实操：CDH安装前置准备</a></p><h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><table><thead><tr><th align="center">节点</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">master1.hming.org</td><td align="center">172.16.0.2</td></tr><tr><td align="center">master2.hming.org</td><td align="center">172.16.0.5</td></tr><tr><td align="center">master3.hming.org</td><td align="center">172.16.0.6</td></tr><tr><td align="center">node1.hming.org</td><td align="center">172.16.0.12</td></tr><tr><td align="center">node2.hming.org</td><td align="center">172.16.0.13</td></tr><tr><td align="center">node3.hming.org</td><td align="center">172.16.0.15</td></tr></tbody></table><p><strong>服务器配置：</strong><br>CPU：16核<br>内存：64G<br>磁盘：管理节点外挂一块2T HDD到/mnt/data01目录，工作节点挂载三块2T HDD到/mnt/data01-03目录</p><p><strong>组件角色分配规划表：</strong><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E8%A7%92%E8%89%B2%E5%88%86%E9%85%8D%E8%A1%A8.png" alt=""><br>附：<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_host_allocations.html" target="_blank" rel="noopener">官方服务角色分配方案</a></p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="节点数量"><a href="#节点数量" class="headerlink" title="节点数量"></a>节点数量</h4><ol><li>最小规模，建议最小<code>4</code>台服务器，1个管理节点安装Cloudera Manager和NameNode等服务，其他3个作为工作节点，因为没有任何的高可用，所以该规模只能用于开发测试。</li><li>建议规模，生产环境中建议最小<code>6</code>台服务器，3台管理节点+3台工作节点，1个管理节点安装Cloudera Manager，另外2个安装NameNode高可用，常见的较小规模生产系统一般为<code>10-20</code>台服务器。</li></ol><h4 id="硬件要求"><a href="#硬件要求" class="headerlink" title="硬件要求"></a>硬件要求</h4><p>以下Cloudera Manager，NameNode和DataNode相同：</p><p>CPU：最少4 cores，推荐2路8核，2路10核，2路12核<br>内存：最小16GB，推荐128GB-256GB<br>网络：最小千兆，推荐两张万兆绑定<br>磁盘：系统盘参考下面<code>系统盘/目录分配要求</code>章节，数据盘，工作节点推荐12块1TB-4TB的SATA/SAS盘，管理节点推荐1-2块1TB-4TB的SATA/SAS盘（具体配置可根据实际情况而定）</p><p>附：<a href="https://www.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_hardware_requirements.html#concept_vvv_cxt_gbb" target="_blank" rel="noopener">官方硬件要求说明</a></p><h4 id="系统盘-目录分配要求"><a href="#系统盘-目录分配要求" class="headerlink" title="系统盘/目录分配要求"></a>系统盘/目录分配要求</h4><p><strong>目录分配方案一：</strong><br>如果只有一个根目录<code>/</code>建议工作节点最少<code>100G</code>，管理节点因为会存放MySQL数据以及一些监控数据，可以选择<code>200G</code>以上</p><p><strong>目录分配方案二：</strong></p><table><thead><tr><th align="center">目录</th><th align="center">分配空间</th></tr></thead><tbody><tr><td align="center">/</td><td align="center">可以默认比如10GB</td></tr><tr><td align="center">/opt</td><td align="center">大于50GB</td></tr><tr><td align="center">/usr</td><td align="center">大于50GB</td></tr><tr><td align="center">/var</td><td align="center">大于20GB</td></tr><tr><td align="center">/var/log</td><td align="center">大于50GB</td></tr><tr><td align="center">/var/lib</td><td align="center">大于50GB</td></tr><tr><td align="center">/tmp</td><td align="center">大于20GB</td></tr></tbody></table><p><strong>目录分配方案三：</strong></p><table><thead><tr><th align="center">目录</th><th align="center">分配空间</th></tr></thead><tbody><tr><td align="center">/</td><td align="center">可以默认比如10GB</td></tr><tr><td align="center">/opt</td><td align="center">大于50GB</td></tr><tr><td align="center">/usr</td><td align="center">大于50GB</td></tr><tr><td align="center">/var</td><td align="center">大于50GB</td></tr><tr><td align="center">/tmp</td><td align="center">大于20GB</td></tr></tbody></table><h4 id="磁盘要求"><a href="#磁盘要求" class="headerlink" title="磁盘要求"></a>磁盘要求</h4><ol><li><p><a href="https://baike.baidu.com/item/%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/1149823?fromtitle=RAID&fromid=33858" target="_blank" rel="noopener">磁盘阵列</a>要求：<br>工作节点（DataNode/NodeManager），系统盘可以使用<a href="https://baike.baidu.com/item/RAID%201" target="_blank" rel="noopener">RAID1</a>或者<a href="https://baike.baidu.com/item/RAID%2010" target="_blank" rel="noopener">RAID10</a>，数据盘不要使用<a href="https://baike.baidu.com/item/%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/1149823?fromtitle=RAID&fromid=33858" target="_blank" rel="noopener">RAID</a>，应该为<a href="https://baike.baidu.com/item/JBOD" target="_blank" rel="noopener">JBOD</a>。<br>管理节点（NameNode，Zookeeper，JournalNode），可以使用<a href="https://baike.baidu.com/item/%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/1149823?fromtitle=RAID&fromid=33858" target="_blank" rel="noopener">RAID</a>或者<a href="https://baike.baidu.com/item/JBOD" target="_blank" rel="noopener">JBOD</a>，因为管理节点对<code>I/O</code>延迟比较敏感，建议将NN，ZK，JN存放数据的目录配置为不同的目录，并且对应到不同的磁盘。</p></li><li><p>DataNode数据盘格式建议选择<code>ext4</code>或<code>xfs</code>，并配置<code>noatime</code>，比如：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /etc/fstab</span>/dev/sda1  /data/1    xfs   defaults,noatime      1 2/dev/sdb1  /data/2    xfs   defaults,noatime      1 2/dev/sdc1  /data/3    xfs   defaults,noatime      1 2/dev/sdd1  /data/4    xfs   defaults,noatime      1 2/dev/sde1  /data/5    xfs   defaults,noatime      1 2/dev/sdf1  /data/6    xfs   defaults,noatime      1 2<span class="token punctuation">..</span>./dev/sdx1  /data/x    xfs    defaults,noatime      1 2<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># fdisk -l</span></code></pre><p>注意: <code>noatime</code>已经包含了<code>nodiratime</code>。不需要同时指定。</p><blockquote><p>参考：<br><a href="https://wiki.archlinux.org/index.php/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#atime_%E5%8F%82%E6%95%B0" target="_blank" rel="noopener">fstab atime 参数</a><br><a href="https://www.linuxquestions.org/questions/linux-software-2/what-is-noatime-how-can-i-mount-a-partition-with-noatime-393617/" target="_blank" rel="noopener">what is noatime</a><br>默认的方式下linux会把文件访问的时间atime做记录，文件系统在文件被访问、创建、修改等的时候记录下了文件的一些时间戳，比如：文件创建时间、最近一次修改时间和最近一次访问时间；这在绝大部分的场合都是没有必要的。<br>因为系统运行的时候要访问大量文件，如果能减少一些动作（比如减少时间戳的记录次数等）将会显著提高磁盘 IO 的效率、提升文件系统的性能。 </p></blockquote></li><li><p>DataNode数据盘确保没有配置分区卷LogicalVolume Manager (LVM)</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># df –h</span><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># lsblk</span><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># lvdisplay</span>Additionally, <span class="token function">look</span> for/dev/mapper or /dev/XX <span class="token punctuation">(</span>where XX isnot sd<span class="token punctuation">)</span>.</code></pre></li><li><p>确保BIOS配置正确，比如你如果使用的是SATA，请确保没有开启<code>IDE emulation</code>。</p></li><li><p>确保<code>controller firmware</code>是最新的，校验磁盘是否有一些潜在的问题。</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># dmesg | egrep -i 'sense error'</span><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># dmesg | egrep -i 'ata bus error'</span></code></pre></li><li><p>目前常见的SATA读写速度大概在<code>150MB/S-180MB/S</code>，SAS或者SSD会更快，如果磁盘读写速度<code>小于70MB/S</code>，肯定是有问题的，需要检查硬件。<br>以下为测试读写的命令，这里我们将<code>/mnt/data01</code>挂载到<code>/dev/sdb1</code>：</p><ul><li><p><code>hdparm</code>仅用于Linux系统。现在主要用来测试SSD固态硬盘读取速度。</p><pre class=" language-bash"><code class="language-bash">  <span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hdparm -t --direct /dev/sdb1</span>  /dev/sdb1:   Timing O_DIRECT disk reads: 456 MB <span class="token keyword">in</span>  3.01 seconds <span class="token operator">=</span> 151.67 MB/sec</code></pre></li><li><p><code>dd</code>命令不是专业测试磁盘工具，它没考虑到缓存和物理读的区分，测试的结果仅作参考，不算权威。但是它通用于所有的Linux系统中。<br>  两个特殊设备：（不产生IO，就能单独测试写速度和读速度）<br>  <code>/dev/null</code> 伪设备,回收站.写该文件不会产生IO<br>  <code>/dev/zero</code> 伪设备,会产生空字符流,对它不会产生IO<br>  测试写入速度</p><pre class=" language-bash"><code class="language-bash">  <span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># dd bs=1M count=1024 if=/dev/zero of=/mnt/data01/test.dbf oflag=direct conv=fdatasync</span>  1024+0 records <span class="token keyword">in</span>  1024+0 records out  1073741824 bytes <span class="token punctuation">(</span>1.1 GB<span class="token punctuation">)</span> copied, 7.05097 s, 152 MB/s</code></pre><p>  测试读取速度</p><pre class=" language-bash"><code class="language-bash">  <span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># dd bs=1M count=1024 of=/dev/null if=/mnt/data01/test.dbf iflag=direct conv=fdatasync</span>  dd: fsync failed <span class="token keyword">for</span> ‘/dev/null’: Invalid argument  1024+0 records <span class="token keyword">in</span>  1024+0 records out  1073741824 bytes <span class="token punctuation">(</span>1.1 GB<span class="token punctuation">)</span> copied, 6.77791 s, 158 MB/s</code></pre><p>  测试读写速度</p><pre class=" language-bash"><code class="language-bash">  <span class="token punctuation">[</span>root@node10 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># dd if=/mnt/data01/test.dbf of=/mnt/data01/test_w.dbf bs=8k count=300000</span>  131072+0 records <span class="token keyword">in</span>  131072+0 records out  1073741824 bytes <span class="token punctuation">(</span>1.1 GB<span class="token punctuation">)</span> copied, 7.39375 s, 145 MB/s</code></pre></li></ul></li><li><p>确保磁盘没有坏的扇区：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># badblocks -v /dev/sda1</span><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># badblocks -v /dev/sdb1</span><span class="token punctuation">..</span>.<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># badblocks -v /dev/sdx1</span></code></pre></li></ol><h4 id="安装用户"><a href="#安装用户" class="headerlink" title="安装用户"></a>安装用户</h4><p>可以使用<code>root</code>用户安装，或者具有<code>sudo</code>权限的其他用户</p><h4 id="网络要求"><a href="#网络要求" class="headerlink" title="网络要求"></a>网络要求</h4><h5 id="IPV4设置"><a href="#IPV4设置" class="headerlink" title="IPV4设置"></a>IPV4设置</h5><p>CDH支持IPV4，不支持IPV6，确保没有开启IPV6</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># lsmod | grep ipv6 </span><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><p>修改<code>/etc/sysctl.conf</code>文件添加一下内容禁用IPV6</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#disable ipv6</span>net.ipv6.conf.all.disable_ipv6<span class="token operator">=</span> 1net.ipv6.conf.default.disable_ipv6<span class="token operator">=</span> 1net.ipv6.conf.lo.disable_ipv6<span class="token operator">=</span> 1</code></pre><p>如果是RHEL/CentOS，可以把以下内容补充到<code>/etc/sysconfig/network</code></p><pre class=" language-bash"><code class="language-bash">NETWORKING_IPV6<span class="token operator">=</span>noIPV6INIT<span class="token operator">=</span>no</code></pre><h5 id="网络带宽测试"><a href="#网络带宽测试" class="headerlink" title="网络带宽测试"></a>网络带宽测试</h5><p>使用<code>iperf3</code>进行网络带宽测试，两台服务器进行网络测试，一台当做服务端（master2）另一台做客户端（master1）。</p><ol><li><p>服务端和客户端均安装iperf3</p><pre class=" language-bash"><code class="language-bash">yum -y <span class="token function">install</span> iperf3</code></pre></li><li><p>服务端master2启动iperf3服务</p><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@master2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># iperf3 -s</span> ----------------------------------------------------------- Server listening on 5201 -----------------------------------------------------------</code></pre></li><li><p>客户端master1进行请求，连接服务端</p><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># iperf3 -c master2</span> Connecting to host master2, port 5201 <span class="token punctuation">[</span>  4<span class="token punctuation">]</span> local 172.16.0.2 port 50472 connected to 172.16.0.5 port 5201 <span class="token punctuation">[</span> ID<span class="token punctuation">]</span> Interval           Transfer     Bandwidth       Retr  Cwnd <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   0.00-1.00   sec   123 MBytes  1.03 Gbits/sec    0   1.40 MBytes        <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   1.00-2.00   sec   120 MBytes  1.01 Gbits/sec    0   2.63 MBytes        <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   2.00-3.00   sec   119 MBytes   996 Mbits/sec    0   2.96 MBytes        <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   3.00-4.00   sec   120 MBytes  1.01 Gbits/sec    0   3.00 MBytes        <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   4.00-5.00   sec   119 MBytes   996 Mbits/sec    0   3.00 MBytes        <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   5.00-6.00   sec   120 MBytes  1.01 Gbits/sec    0   3.00 MBytes        <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   6.00-7.00   sec   120 MBytes  1.01 Gbits/sec    0   3.00 MBytes        <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   7.00-8.00   sec   119 MBytes   996 Mbits/sec    0   3.00 MBytes        <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   8.00-9.00   sec   120 MBytes  1.01 Gbits/sec    0   3.00 MBytes        <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   9.00-10.00  sec   119 MBytes   996 Mbits/sec    1   3.00 MBytes        - - - - - - - - - - - - - - - - - - - - - - - - - <span class="token punctuation">[</span> ID<span class="token punctuation">]</span> Interval           Transfer     Bandwidth       Retr <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   0.00-10.00  sec  1.17 GBytes  1.00 Gbits/sec    1             sender <span class="token punctuation">[</span>  4<span class="token punctuation">]</span>   0.00-10.00  sec  1.17 GBytes  1.00 Gbits/sec                  receiver iperf Done.</code></pre></li></ol><p>可以看出千兆网卡网络带宽在<code>1.00 Gbits/sec</code>左右</p><h4 id="主机名配置"><a href="#主机名配置" class="headerlink" title="主机名配置"></a>主机名配置</h4><ol><li>将主机名设置为全限定域名格式<a href="https://baike.baidu.com/item/FQDN" target="_blank" rel="noopener">FQDN</a>（Fully Qualified Domain Name）<br><code>sudo hostnamectl set-hostname master1.hming.org</code></li><li>配置/etc/hosts文件，添加集群中所有全限定域名，也可以在后面继续添加非限定名</li></ol><pre class=" language-bash"><code class="language-bash">172.16.0.2 master1.hming.org master1172.16.0.5 master2.hming.org master2172.16.0.6 master3.hming.org master3172.16.0.12 node1.hming.org node1172.16.0.13 node2.hming.org node2172.16.0.15 node3.hming.org node3</code></pre><h4 id="配置免密登录（可选）"><a href="#配置免密登录（可选）" class="headerlink" title="配置免密登录（可选）"></a>配置免密登录（可选）</h4><p>如果所有主机节点root用户密码相同，则可以不用配置<br>配置免密码登录教程请点击<a href="http://blog.hming.org/2018/09/16/Linux%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/">这里</a></p><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><p>查看防火墙状态<br><code>firewall-cmd --state</code>或<code>systemctl status firewalld</code><br>临时关闭防火墙<br><code>systemctl stop firewalld</code><br>禁止开机启动<br><code>systemctl disable firewalld</code></p><h4 id="设置SELinux模式"><a href="#设置SELinux模式" class="headerlink" title="设置SELinux模式"></a>设置SELinux模式</h4><p>不关闭可能导致Apache http服务无法访问。</p><ol><li>查看SELinux状态：<code>getenforce</code><br>如果是<code>Permissive</code>或者<code>Disabled</code>则可以继续安装，如果显示<code>enforcing</code>，则需要进行以下步骤修改模式</li><li>编辑<code>/etc/selinux/config</code>文件</li><li>修改<code>SELINUX=enforcing</code>行内容为<code>SELINUX=permissive</code>或者<code>SELINUX=disabled</code></li><li>重启系统或者运行<code>setenforce 0</code>命令禁用SELinux</li></ol><h4 id="设置SWAP"><a href="#设置SWAP" class="headerlink" title="设置SWAP"></a>设置SWAP</h4><p>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/latest/topics/cdh_admin_performance.html#cdh_performance__section_xpq_sdf_jq" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/latest/topics/cdh_admin_performance.html#cdh_performance__section_xpq_sdf_jq</a><br>运行命令<code>sysctl -w vm.swappiness=1</code>临时生效<br>或者修改<code>/etc/sysctl.conf</code>配置文件，增加如下配置，永久生效</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 配置为1时表示当内存使用超过99时，才使用交换空间，这里可以配置为1-10</span>vm.swappiness <span class="token operator">=</span> 1</code></pre><p>检查是否生效</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/sys/vm/swappiness</span>1</code></pre><h4 id="关闭透明大页面"><a href="#关闭透明大页面" class="headerlink" title="关闭透明大页面"></a>关闭透明大页面</h4><p>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/latest/topics/cdh_admin_performance.html#cdh_performance__section_hw3_sdf_jq" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/latest/topics/cdh_admin_performance.html#cdh_performance__section_hw3_sdf_jq</a><br>查看透明大页面配置，发现目前为开启状态<code>always</code></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /sys/kernel/mm/transparent_hugepage/defrag </span><span class="token punctuation">[</span>always<span class="token punctuation">]</span> madvise never<span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /sys/kernel/mm/transparent_hugepage/enabled </span><span class="token punctuation">[</span>always<span class="token punctuation">]</span> madvise never</code></pre><p>执行命令关闭透明大页面，使其立即生效</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo never > /sys/kernel/mm/transparent_hugepage/enabled </span><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># echo never > /sys/kernel/mm/transparent_hugepage/defrag </span></code></pre><p>再次查看，确认已经修改为<code>never</code></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /sys/kernel/mm/transparent_hugepage/enabled </span>always madvise <span class="token punctuation">[</span>never<span class="token punctuation">]</span><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /sys/kernel/mm/transparent_hugepage/defrag </span>always madvise <span class="token punctuation">[</span>never<span class="token punctuation">]</span></code></pre><p>在<code>/etc/rc.d/rc.local</code>脚本文件中添加以下代码，使其永久生效</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token function">test</span> -f /sys/kernel/mm/transparent_hugepage/enabled<span class="token punctuation">;</span> <span class="token keyword">then</span>   <span class="token keyword">echo</span> never <span class="token operator">></span> /sys/kernel/mm/transparent_hugepage/enabled<span class="token keyword">fi</span><span class="token keyword">if</span> <span class="token function">test</span> -f /sys/kernel/mm/transparent_hugepage/defrag<span class="token punctuation">;</span> <span class="token keyword">then</span>   <span class="token keyword">echo</span> never <span class="token operator">></span> /sys/kernel/mm/transparent_hugepage/defrag<span class="token keyword">fi</span></code></pre><p>赋予<code>rc.local</code>脚本可执行权限</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chmod +x /etc/rc.d/rc.local</span></code></pre><h4 id="配置NTP服务（时钟同步）"><a href="#配置NTP服务（时钟同步）" class="headerlink" title="配置NTP服务（时钟同步）"></a>配置NTP服务（时钟同步）</h4><p>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/install_cdh_enable_ntp.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/install_cdh_enable_ntp.html</a><br>参考其他文章：<a href="https://blog.csdn.net/u010003835/article/details/84962098" target="_blank" rel="noopener">https://blog.csdn.net/u010003835/article/details/84962098</a><br>集群中所有主机必须保持时间同步，如果时间相差较大会引起各种问题，如果企业有自己的NTP Server则可以集群中所有节点可配置企业NTP Server，如果没有自己的NTP服务器则在集群中选用一台服务器作为NTP Server，其它服务器与其保持同步</p><blockquote><p>本文在<code>master1</code>上安装NTP服务，其他节点和<code>master1</code>节点同步</p></blockquote><h5 id="1-所有节点安装ntp服务"><a href="#1-所有节点安装ntp服务" class="headerlink" title="1.所有节点安装ntp服务"></a>1.所有节点安装ntp服务</h5><pre class=" language-bash"><code class="language-bash">yum -y <span class="token function">install</span> ntp</code></pre><h5 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2.修改配置文件"></a>2.修改配置文件</h5><pre class=" language-bash"><code class="language-bash">vim /etc/ntp.conf</code></pre><ol><li>所有主机在restrict附近增加下面两行</li></ol><pre class=" language-bash"><code class="language-bash">restrict 172.16.0.3 nomodify notrap nopeer noquery  <span class="token comment" spellcheck="true"># ip地址为本机主机ip</span>restrict 172.16.0.1 mask 255.255.255.0 nomodify notrap  <span class="token comment" spellcheck="true"># 网关地址和子网掩码</span>restrict 127.0.0.1  <span class="token comment" spellcheck="true"># 原本文件中的两行不要删</span>restrict ::1</code></pre><ol start="2"><li>作为NTP服务的节点（master1节点）注释所有server行，增加下面两行</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#server 0.centos.pool.ntp.org iburst</span><span class="token comment" spellcheck="true">#server 1.centos.pool.ntp.org iburst</span><span class="token comment" spellcheck="true">#server 2.centos.pool.ntp.org iburst</span><span class="token comment" spellcheck="true">#server 3.centos.pool.ntp.org iburst</span>server 127.127.1.0      <span class="token comment" spellcheck="true"># 这里如果有已经存在的NTP服务，则可以填写相应地址</span>Fudge 127.127.1.0 stratum 10</code></pre><ol start="3"><li>其他节点注释所有server行，增加下面两行</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#server 0.centos.pool.ntp.org iburst</span><span class="token comment" spellcheck="true">#server 1.centos.pool.ntp.org iburst</span><span class="token comment" spellcheck="true">#server 2.centos.pool.ntp.org iburst</span><span class="token comment" spellcheck="true">#server 3.centos.pool.ntp.org iburst</span>server 172.16.0.2      <span class="token comment" spellcheck="true"># 将时钟同步服务器地址指向master1的地址</span>Fudge 172.16.0.2 stratum 10</code></pre><h5 id="3-所有节点启动ntp服务"><a href="#3-所有节点启动ntp服务" class="headerlink" title="3.所有节点启动ntp服务"></a>3.所有节点启动ntp服务</h5><pre class=" language-bash"><code class="language-bash">systemctl start ntpdsystemctl <span class="token function">enable</span> ntpd</code></pre><h5 id="4-查看服务状态"><a href="#4-查看服务状态" class="headerlink" title="4.查看服务状态"></a>4.查看服务状态</h5><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl status ntpd</span>● ntpd.service - Network Time Service   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/ntpd.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: disabled<span class="token punctuation">)</span>   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Tue 2019-09-03 06:58:01 EDT<span class="token punctuation">;</span> 29s ago  Process: 33823 ExecStart<span class="token operator">=</span>/usr/sbin/ntpd -u ntp:ntp <span class="token variable">$OPTIONS</span> <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, status<span class="token operator">=</span>0/SUCCESS<span class="token punctuation">)</span> Main PID: 33824 <span class="token punctuation">(</span>ntpd<span class="token punctuation">)</span>   CGroup: /system.slice/ntpd.service           └─33824 /usr/sbin/ntpd -u ntp:ntp -gSep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listen and drop on<span class="token punctuation">..</span>.Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listen normally on<span class="token punctuation">..</span>.Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listen normally on<span class="token punctuation">..</span>.Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listen normally on<span class="token punctuation">..</span>.Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listen normally on<span class="token punctuation">..</span>.Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: Listening on routi<span class="token punctuation">..</span>.Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: 0.0.0.0 c016 06 re<span class="token punctuation">..</span>.Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: 0.0.0.0 c012 02 fr<span class="token punctuation">..</span>.Sep 03 06:58:01 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: 0.0.0.0 c011 01 fr<span class="token punctuation">..</span>.Sep 03 06:58:02 master1.hming.org ntpd<span class="token punctuation">[</span>33824<span class="token punctuation">]</span>: 0.0.0.0 c514 04 fr<span class="token punctuation">..</span>.Hint: Some lines were ellipsized, use -l to show <span class="token keyword">in</span> full.</code></pre><h5 id="5-查看服务状态"><a href="#5-查看服务状态" class="headerlink" title="5.查看服务状态"></a>5.查看服务状态</h5><p>master1节点</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ntpstat</span>synchronised to local net at stratum 6    <span class="token function">time</span> correct to within 11 ms   polling server every 64 s</code></pre><p>其他节点</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ntpstat</span>synchronised to NTP server <span class="token punctuation">(</span>172.16.0.2<span class="token punctuation">)</span> at stratum 7    <span class="token function">time</span> correct to within 17 ms   polling server every 64 s</code></pre><blockquote><p>查看状态时有可能遇到以下情况：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node8 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ntpstat</span>unsynchronised  <span class="token function">time</span> server re-starting   polling server every 8 s</code></pre><p>这种情况属于正常情况，ntp服务器配置完毕后，需要等待5-10分钟才能与/etc/ntp.conf中配置的标准时间进行同步。<br>等一段时间之后，再次使用<code>ntpstat</code>命令查看状态，就会变成正常结果</p></blockquote><p>master1节点</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ntpq -p</span>     remote           refid      st t when poll reach   delay   offset  jitter<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>*LOCAL<span class="token punctuation">(</span>0<span class="token punctuation">)</span>        .LOCL.           5 l    9   64  377    0.000    0.000   0.000</code></pre><p>其他节点</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ntpq -p</span>     remote           refid      st t when poll reach   delay   offset  jitter<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>*master1.hming.org LOCAL<span class="token punctuation">(</span>0<span class="token punctuation">)</span>         6 u   31   64  377    0.160   -3.417   1.363</code></pre><h5 id="6-注意事项"><a href="#6-注意事项" class="headerlink" title="6.注意事项"></a>6.注意事项</h5><p>安装集群完成后可能会报错：</p><blockquote><p><strong>不良 : 无法找到主机的 NTP 服务，或该服务未响应时钟偏差请求。</strong></p></blockquote><p>因为Centos7.2之后默认使用<code>chrony</code>来进行时钟同步，所以如果系统中安装有<code>chrony</code>或者正在运行，要么把<code>ntp</code>换成<code>chrony</code>，要么彻底删除<code>chrony</code></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@master1 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y remove chrony </span></code></pre><h4 id="下载离线包"><a href="#下载离线包" class="headerlink" title="下载离线包"></a>下载离线包</h4><p>官网下载地址合集（当其他地址失效时尝试通过该链接找到最新下载地址）：<br><a href="https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_version_packaging_download.html" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_version_packaging_download.html</a></p><h5 id="Cloudera-Manager安装包"><a href="#Cloudera-Manager安装包" class="headerlink" title="Cloudera Manager安装包"></a>Cloudera Manager安装包</h5><p>到官网下载rpm包：<a href="https://archive.cloudera.com/cm6/6.3.0/redhat7/yum/RPMS/x86_64/" target="_blank" rel="noopener">https://archive.cloudera.com/cm6/6.3.0/redhat7/yum/RPMS/x86_64/</a><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/cm%E5%8C%85%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80.png" alt=""><br>下载allkeys文件：<a href="https://archive.cloudera.com/cm6/6.3.0/" target="_blank" rel="noopener">https://archive.cloudera.com/cm6/6.3.0/</a><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/allkeys%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80.png" alt=""></p><h5 id="CDH安装包"><a href="#CDH安装包" class="headerlink" title="CDH安装包"></a>CDH安装包</h5><p>官方有两种离线包可供选择：</p><ol><li><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_create_local_parcel_repo.html" target="_blank" rel="noopener">Parcel模式（推荐）</a>（本文使用模式）</li><li><a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_create_local_package_repo.html" target="_blank" rel="noopener">Package模式</a><br><del>到官网下载parcel包：<a href="https://archive.cloudera.com/cdh6/6.3.0/parcels/" target="_blank" rel="noopener">https://archive.cloudera.com/cdh6/6.3.0/parcels/</a></del><br>下载图中框选的三个文件<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/cdh%E5%8C%85%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80.png" alt=""></li></ol><blockquote><p>此条消息2020-3-11更新<br>6.3.0parcel包已经被官网下架了，可以去<a href="https://docs.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_version_packaging_download.html" target="_blank" rel="noopener">官网下载地址合集</a>找其他版本parcel下载</p></blockquote><h5 id="其他parcel包（可选）"><a href="#其他parcel包（可选）" class="headerlink" title="其他parcel包（可选）"></a>其他parcel包（可选）</h5><p>YCSB：<a href="http://archive.cloudera.com/cloudera-labs/ycsb/parcels/latest/" target="_blank" rel="noopener">http://archive.cloudera.com/cloudera-labs/ycsb/parcels/latest/</a><br>Phoenix：<a href="http://archive.cloudera.com/cloudera-labs/phoenix/parcels/latest/" target="_blank" rel="noopener">http://archive.cloudera.com/cloudera-labs/phoenix/parcels/latest/</a><br>kafka: <a href="http://archive.cloudera.com/cloudera-labs/kafka/parcels/latest/" target="_blank" rel="noopener">http://archive.cloudera.com/cloudera-labs/kafka/parcels/latest/</a><br>csds: <a href="http://archive.cloudera.com/cloudera-labs/csds/" target="_blank" rel="noopener">http://archive.cloudera.com/cloudera-labs/csds/</a><br>ktrace: <a href="http://archive.cloudera.com/cloudera-labs/htrace/parcels/latest/" target="_blank" rel="noopener">http://archive.cloudera.com/cloudera-labs/htrace/parcels/latest/</a></p><h4 id="安装httpd服务（Apache服务，任意一个管理节点安装即可）"><a href="#安装httpd服务（Apache服务，任意一个管理节点安装即可）" class="headerlink" title="安装httpd服务（Apache服务，任意一个管理节点安装即可）"></a>安装httpd服务（Apache服务，任意一个管理节点安装即可）</h4><blockquote><p>注意：selinux未关闭可能导致Apache服务地址403。</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install httpd</span></code></pre><p>修改<code>/etc/httpd/conf/httpd.conf</code>配置文件，找到如下行，增加<code>.parcel</code>使其支持parcel格式文件</p><pre class=" language-config"><code class="language-config">...AddType application/x-compress .ZAddType application/x-gzip .gz .tgz .parcel...</code></pre><p>启动服务</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service httpd restart</span>Redirecting to /bin/systemctl restart httpd.service</code></pre><p>浏览器访问服务器80端口，查看httpd服务是否开启。</p><blockquote><p>注意：配置信息如端口、映射路径可以通过编辑<code>/etc/httpd/conf/httpd.conf</code>文件进行修改</p></blockquote><h4 id="配置本地yum源"><a href="#配置本地yum源" class="headerlink" title="配置本地yum源"></a>配置本地yum源</h4><p>httpd默认路径为：<code>/var/www/html/</code></p><blockquote><p>如果httpd映射路径修改过，则以修改后的为准。</p></blockquote><h5 id="Cloudera-Manager"><a href="#Cloudera-Manager" class="headerlink" title="Cloudera Manager"></a>Cloudera Manager</h5><p>将下载的所有cm rpm包和allkeys文件一起<a href="http://blog.hming.org/2019/03/29/Linux%E5%88%B6%E4%BD%9C%E7%A6%BB%E7%BA%BFyum%E6%BA%90/#toc-heading-6">制作离线yum源</a><br>将离线yum源放到httpd服务路径中，方便其他节点访问</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node10 cm6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>/var/www/html/cloudera-repos/cm6.3.0<span class="token punctuation">[</span>root@node10 cm6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -l</span>total 1378004-rw-r--r-- 1 root root      14041 Aug  1 00:08 allkeys.asc-rw-r--r-- 1 root root   10479136 Aug 16 16:26 cloudera-manager-agent-6.3.0-1281944.el7.x86_64.rpm-rw-r--r-- 1 root root 1201341068 Aug 16 16:26 cloudera-manager-daemons-6.3.0-1281944.el7.x86_64.rpm-rw-r--r-- 1 root root      11464 Aug 16 16:26 cloudera-manager-server-6.3.0-1281944.el7.x86_64.rpm-rw-r--r-- 1 root root      10996 Aug 16 16:26 cloudera-manager-server-db-2-6.3.0-1281944.el7.x86_64.rpm-rw-r--r-- 1 root root   14209884 Aug 16 16:26 enterprise-debuginfo-6.3.0-1281944.el7.x86_64.rpm-rw-r--r-- 1 root root  184988341 Aug 16 16:26 oracle-j2sdk1.8-1.8.0+update181-1.x86_64.rpmdrwxr-xr-x 2 root root       4096 Aug 20 14:48 repodata<span class="token punctuation">[</span>root@node10 cm6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><h5 id="CDH其他parcel包"><a href="#CDH其他parcel包" class="headerlink" title="CDH其他parcel包"></a>CDH其他parcel包</h5><p>将parcel包移到httpd服务路径</p><p>创建<code>/var/www/html//cloudera-repos/cdh6.3.0/</code>目录，将parcel包放到该目录中</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh cdh6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>/var/www/html/cloudera-repos/cdh6.3.0<span class="token punctuation">[</span>root@cdh cdh6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -l</span>total 2036848-rw-r--r-- 1 root root 2085690155 Aug 16 16:25 CDH-6.3.0-1.cdh6.3.0.p0.1279813-el7.parcel-rw-r--r-- 1 root root         40 Aug 16 16:25 CDH-6.3.0-1.cdh6.3.0.p0.1279813-el7.parcel.sha1-rw-r--r-- 1 root root      33887 Aug 16 16:25 manifest.json<span class="token punctuation">[</span>root@cdh cdh6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><h4 id="安装并配置元数据库"><a href="#安装并配置元数据库" class="headerlink" title="安装并配置元数据库"></a>安装并配置元数据库</h4><p>可以选择MySQL或者Mariadb</p><h5 id="安装Mariadb"><a href="#安装Mariadb" class="headerlink" title="安装Mariadb"></a>安装Mariadb</h5><p>参考<a href="https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/install_cm_mariadb.html" target="_blank" rel="noopener">官网</a></p><ol><li>安装server</li></ol><pre class=" language-bash"><code class="language-bash">yum -y <span class="token function">install</span> mariadb-server</code></pre><ol start="2"><li>修改配置文件<code>/etc/my.cnf</code>为以下内容</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>datadir<span class="token operator">=</span>/var/lib/mysqlsocket<span class="token operator">=</span>/var/lib/mysql/mysql.socktransaction-isolation <span class="token operator">=</span> READ-COMMITTED<span class="token comment" spellcheck="true"># Disabling symbolic-links is recommended to prevent assorted security risks;</span><span class="token comment" spellcheck="true"># to do so, uncomment this line:</span>symbolic-links <span class="token operator">=</span> 0<span class="token comment" spellcheck="true"># Settings user and group are ignored when systemd is used.</span><span class="token comment" spellcheck="true"># If you need to run mysqld under a different user or group,</span><span class="token comment" spellcheck="true"># customize your systemd unit file for mariadb according to the</span><span class="token comment" spellcheck="true"># instructions in http://fedoraproject.org/wiki/Systemd</span>key_buffer <span class="token operator">=</span> 16Mkey_buffer_size <span class="token operator">=</span> 32Mmax_allowed_packet <span class="token operator">=</span> 32Mthread_stack <span class="token operator">=</span> 256Kthread_cache_size <span class="token operator">=</span> 64query_cache_limit <span class="token operator">=</span> 8Mquery_cache_size <span class="token operator">=</span> 64Mquery_cache_type <span class="token operator">=</span> 1max_connections <span class="token operator">=</span> 550<span class="token comment" spellcheck="true">#expire_logs_days = 10</span><span class="token comment" spellcheck="true">#max_binlog_size = 100M</span><span class="token comment" spellcheck="true">#log_bin should be on a disk with enough free space.</span><span class="token comment" spellcheck="true">#Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your</span><span class="token comment" spellcheck="true">#system and chown the specified folder to the mysql user.</span><span class="token comment" spellcheck="true">#建议单独磁盘装binlog，并且修改目录拥有者为mysql</span>log_bin<span class="token operator">=</span>/var/lib/mysql/mysql_binary_log<span class="token comment" spellcheck="true">#In later versions of MariaDB, if you enable the binary log and do not set</span><span class="token comment" spellcheck="true">#a server_id, MariaDB will not start. The server_id must be unique within</span><span class="token comment" spellcheck="true">#the replicating group.</span>server_id<span class="token operator">=</span>1binlog_format <span class="token operator">=</span> mixedread_buffer_size <span class="token operator">=</span> 2Mread_rnd_buffer_size <span class="token operator">=</span> 16Msort_buffer_size <span class="token operator">=</span> 8Mjoin_buffer_size <span class="token operator">=</span> 8M<span class="token comment" spellcheck="true"># InnoDB settings</span>innodb_file_per_table <span class="token operator">=</span> 1innodb_flush_log_at_trx_commit  <span class="token operator">=</span> 2innodb_log_buffer_size <span class="token operator">=</span> 64Minnodb_buffer_pool_size <span class="token operator">=</span> 4Ginnodb_thread_concurrency <span class="token operator">=</span> 8innodb_flush_method <span class="token operator">=</span> O_DIRECTinnodb_log_file_size <span class="token operator">=</span> 512M<span class="token punctuation">[</span>mysqld_safe<span class="token punctuation">]</span>log-error<span class="token operator">=</span>/var/log/mariadb/mariadb.logpid-file<span class="token operator">=</span>/var/run/mariadb/mariadb.pid<span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># include all files from the config directory</span><span class="token comment" spellcheck="true">#</span><span class="token operator">!</span>includedir /etc/my.cnf.d</code></pre><ol start="3"><li>启动Mariadb，并加入开机自启动</li></ol><pre class=" language-bash"><code class="language-bash">systemctl start mariadbsystemctl <span class="token function">enable</span> mariadb</code></pre><ol start="4"><li>初始化Mariadb</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh cdh6.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql_secure_installation</span><span class="token punctuation">..</span>.Enter current password <span class="token keyword">for</span> root <span class="token punctuation">(</span>enter <span class="token keyword">for</span> none<span class="token punctuation">)</span>: <span class="token comment" spellcheck="true">#第一次直接回车</span>OK, successfully used password, moving on<span class="token punctuation">..</span>.<span class="token punctuation">..</span>.Set root password? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> YNew password: <span class="token comment" spellcheck="true"># 设置root密码</span>Re-enter new password: <span class="token punctuation">..</span>.Remove anonymous users? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y<span class="token punctuation">..</span>.Disallow root login remotely? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> N<span class="token punctuation">..</span>.Remove <span class="token function">test</span> database and access to it <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y<span class="token punctuation">..</span>.Reload privilege tables now? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y<span class="token punctuation">..</span>.All done<span class="token operator">!</span>  If you've completed all of the above steps, your MariaDBinstallation should now be secure.Thanks <span class="token keyword">for</span> using MariaDB<span class="token operator">!</span></code></pre><h5 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h5><p>离线安装MySQL教程点击<a href="http://blog.hming.org/2018/12/08/CentOS7%E4%B8%8B%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85MySQL/">这里</a></p><blockquote><p>注意安装mysql时需要安装mysql-community-libs-compat-5.7.24-1.el7.x86_64.rpm包，不然安装cm server时会报错：<br>Requires: libmysqlclient.so.18()(64bit)</p></blockquote><p>参考<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_mysql.html" target="_blank" rel="noopener">官网</a>，修改<code>/etc/my.cnf</code>配置文件，重启mysql服务</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>datadir<span class="token operator">=</span>/var/lib/mysqlsocket<span class="token operator">=</span>/var/lib/mysql/mysql.socktransaction-isolation <span class="token operator">=</span> READ-COMMITTED<span class="token comment" spellcheck="true"># Disabling symbolic-links is recommended to prevent assorted security risks;</span><span class="token comment" spellcheck="true"># to do so, uncomment this line:</span>symbolic-links <span class="token operator">=</span> 0key_buffer_size <span class="token operator">=</span> 32Mmax_allowed_packet <span class="token operator">=</span> 32Mthread_stack <span class="token operator">=</span> 256Kthread_cache_size <span class="token operator">=</span> 64query_cache_limit <span class="token operator">=</span> 8Mquery_cache_size <span class="token operator">=</span> 64Mquery_cache_type <span class="token operator">=</span> 1max_connections <span class="token operator">=</span> 550<span class="token comment" spellcheck="true">#expire_logs_days = 10</span><span class="token comment" spellcheck="true">#max_binlog_size = 100M</span><span class="token comment" spellcheck="true">#log_bin should be on a disk with enough free space.</span><span class="token comment" spellcheck="true">#Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your</span><span class="token comment" spellcheck="true">#system and chown the specified folder to the mysql user.</span><span class="token comment" spellcheck="true">#建议单独磁盘装binlog，并且修改目录拥有者为mysql</span>log_bin<span class="token operator">=</span>/var/lib/mysql/mysql_binary_log<span class="token comment" spellcheck="true">#In later versions of MySQL, if you enable the binary log and do not set</span><span class="token comment" spellcheck="true">#a server_id, MySQL will not start. The server_id must be unique within</span><span class="token comment" spellcheck="true">#the replicating group.</span>server_id<span class="token operator">=</span>1binlog_format <span class="token operator">=</span> mixedread_buffer_size <span class="token operator">=</span> 2Mread_rnd_buffer_size <span class="token operator">=</span> 16Msort_buffer_size <span class="token operator">=</span> 8Mjoin_buffer_size <span class="token operator">=</span> 8M<span class="token comment" spellcheck="true"># InnoDB settings</span>innodb_file_per_table <span class="token operator">=</span> 1innodb_flush_log_at_trx_commit  <span class="token operator">=</span> 2innodb_log_buffer_size <span class="token operator">=</span> 64Minnodb_buffer_pool_size <span class="token operator">=</span> 4Ginnodb_thread_concurrency <span class="token operator">=</span> 8innodb_flush_method <span class="token operator">=</span> O_DIRECTinnodb_log_file_size <span class="token operator">=</span> 512M<span class="token punctuation">[</span>mysqld_safe<span class="token punctuation">]</span>log-error<span class="token operator">=</span>/var/log/mysqld.logpid-file<span class="token operator">=</span>/var/run/mysqld/mysqld.pidsql_mode<span class="token operator">=</span>STRICT_ALL_TABLES</code></pre><h5 id="配置组件数据库"><a href="#配置组件数据库" class="headerlink" title="配置组件数据库"></a>配置组件数据库</h5><p>新建各组件数据库，为后续安装做准备（这里可以根据安装的组件进行选择创建，其中密码<code>&#39;1234&#39;</code>建议设置为自己的密码）</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> scm <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARACTER SET</span> utf8 <span class="token keyword">DEFAULT</span> <span class="token keyword">COLLATE</span> utf8_general_ci<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">ON</span> scm<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">'scm'</span>@'<span class="token operator">%</span><span class="token string">' IDENTIFIED BY '</span><span class="token number">1234</span><span class="token string">';CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;GRANT ALL ON hue.* TO '</span>hue<span class="token string">'@'</span><span class="token operator">%</span><span class="token string">' IDENTIFIED BY '</span><span class="token number">1234</span><span class="token string">';CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;GRANT ALL ON metastore.* TO '</span>metastore<span class="token string">'@'</span><span class="token operator">%</span><span class="token string">' IDENTIFIED BY '</span><span class="token number">1234</span><span class="token string">';CREATE DATABASE sentry DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;GRANT ALL ON sentry.* TO '</span>sentry<span class="token string">'@'</span><span class="token operator">%</span><span class="token string">' IDENTIFIED BY '</span><span class="token number">1234</span><span class="token string">';CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;GRANT ALL ON oozie.* TO '</span>oozie<span class="token string">'@'</span><span class="token operator">%</span><span class="token string">' IDENTIFIED BY '</span><span class="token number">1234</span>'<span class="token punctuation">;</span></code></pre><h5 id="配置连接jar包"><a href="#配置连接jar包" class="headerlink" title="配置连接jar包"></a>配置连接jar包</h5><p>上传mysql连接包到<code>/usr/share/java/</code>目录下（如果没有则创建一个），改名为：<code>mysql-connector-java.jar</code></p><blockquote><p><strong>注意：需要连接MySQL数据库的节点都需要上传连接包</strong></p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh java<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>/usr/share/java<span class="token punctuation">[</span>root@cdh java<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>mysql-connector-java-5.1.47.jar<span class="token punctuation">[</span>root@cdh java<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mv mysql-connector-java-5.1.47.jar mysql-connector-java.jar </span><span class="token punctuation">[</span>root@cdh java<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>mysql-connector-java.jar</code></pre><h4 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h4><blockquote><p>安装cloudera manager节点<code>必须安装</code>，其他节点现在可以不安装，在进行CDH安装时还可以安装</p></blockquote><p>由于我们下载的cloudera cm包中有jdk并且配置好了yum离线源，所以直接用yum安装官方推荐的jdk（<code>前提是已经配置了yum离线源的repo仓库地址</code>）<br>安装后的jdk目录为：<code>/usr/java/jdk1.8.0_181-cloudera</code>，如有需要，可以自行配置环境变量</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh java<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install oracle-j2sdk1.8</span>Loaded plugins: fastestmirrorLoading mirror speeds from cached hostfile * base: mirrors.aliyun.com * extras: mirrors.aliyun.com * updates: mirrors.aliyun.comResolving Dependencies--<span class="token operator">></span> Running transaction check---<span class="token operator">></span> Package oracle-j2sdk1.8.x86_64 0:1.8.0+update181-1 will be installed--<span class="token operator">></span> Finished Dependency ResolutionDependencies Resolved<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> Package                                          Arch                                    Version                                            Repository                           Size<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>Installing: oracle-j2sdk1.8                                  x86_64                                  1.8.0+update181-1                                  cm                                  176 MTransaction Summary<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>Install  1 PackageTotal download size: 176 MInstalled size: 364 MDownloading packages:oracle-j2sdk1.8-1.8.0+update181-1.x86_64.rpm                                                                                                                    <span class="token operator">|</span> 176 MB  00:00:05     Running transaction checkRunning transaction <span class="token function">test</span>Transaction <span class="token function">test</span> succeededRunning transaction  Installing <span class="token keyword">:</span> oracle-j2sdk1.8-1.8.0+update181-1.x86_64                                                                                                                            1/1   Verifying  <span class="token keyword">:</span> oracle-j2sdk1.8-1.8.0+update181-1.x86_64                                                                                                                            1/1 Installed:  oracle-j2sdk1.8.x86_64 0:1.8.0+update181-1                                                                                                                                           Complete<span class="token operator">!</span></code></pre><h3 id="安装Cloudera-Manager"><a href="#安装Cloudera-Manager" class="headerlink" title="安装Cloudera Manager"></a>安装Cloudera Manager</h3><p>可以不用手动安装cloudera-manager-daemons，安装server或者agent时会自动安装daemons</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install cloudera-manager-daemons cloudera-manager-agent cloudera-manager-server</span>Loaded plugins: fastestmirrorLoading mirror speeds from cached hostfile * base: mirrors.aliyun.com * extras: mirrors.aliyun.com * updates: mirrors.aliyun.com<span class="token punctuation">..</span>.Complete<span class="token operator">!</span></code></pre><blockquote><p><strong>安装agent时可能遇到的问题：</strong><br>如果不是纯净的Centos镜像包（经过修改或升级）安装的操作系统，则可能遇到以下问题：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install cloudera-manager-agent</span><span class="token punctuation">..</span>.Error: Package: krb5-devel-1.15.1-34.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>           Requires: krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-34.el7           Installed: krb5-libs-1.15.1-37.el7_6.x86_64 <span class="token punctuation">(</span>@updates<span class="token punctuation">)</span>               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-37.el7_6           Available: krb5-libs-1.15.1-18.el7.x86_64 <span class="token punctuation">(</span>iso<span class="token punctuation">)</span>               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-18.el7           Available: krb5-libs-1.15.1-34.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-34.el7Error: Package: 1:openssl-devel-1.0.2k-16.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>           Requires: openssl-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1:1.0.2k-16.el7           Installed: 1:openssl-libs-1.0.2k-16.el7_6.1.x86_64 <span class="token punctuation">(</span>@updates<span class="token punctuation">)</span>               openssl-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1:1.0.2k-16.el7_6.1           Available: 1:openssl-libs-1.0.2k-12.el7.x86_64 <span class="token punctuation">(</span>iso<span class="token punctuation">)</span>               openssl-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1:1.0.2k-12.el7           Available: 1:openssl-libs-1.0.2k-16.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>               openssl-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1:1.0.2k-16.el7Error: Package: 32:bind-libs-9.9.4-72.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>           Requires: bind-license <span class="token operator">=</span> 32:9.9.4-72.el7           Installed: 32:bind-license-9.9.4-74.el7_6.1.noarch <span class="token punctuation">(</span>@updates<span class="token punctuation">)</span>               bind-license <span class="token operator">=</span> 32:9.9.4-74.el7_6.1           Available: 32:bind-license-9.9.4-61.el7.noarch <span class="token punctuation">(</span>iso<span class="token punctuation">)</span>               bind-license <span class="token operator">=</span> 32:9.9.4-61.el7           Available: 32:bind-license-9.9.4-72.el7.noarch <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>               bind-license <span class="token operator">=</span> 32:9.9.4-72.el7Error: Package: libkadm5-1.15.1-34.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>           Requires: krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-34.el7           Installed: krb5-libs-1.15.1-37.el7_6.x86_64 <span class="token punctuation">(</span>@updates<span class="token punctuation">)</span>               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-37.el7_6           Available: krb5-libs-1.15.1-18.el7.x86_64 <span class="token punctuation">(</span>iso<span class="token punctuation">)</span>               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-18.el7           Available: krb5-libs-1.15.1-34.el7.x86_64 <span class="token punctuation">(</span>iso-7.6<span class="token punctuation">)</span>               krb5-libs<span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span> <span class="token operator">=</span> 1.15.1-34.el7 You could try using --skip-broken to work around the problem You could try running: rpm -Va --nofiles --nodigest<span class="token punctuation">..</span>.</code></pre><p>根据提示可以看处是yum依赖包冲突，已经安装了更高的版本，解决方法是对相关rpm包降级。<br>以下解决krb5-devel包的冲突，其他包操作步骤类似：<br>根据保存提示可以知道，krb5-devel依赖的krb5-libs包需要的版本为34，但是已经安装了37版本，高于要求的版本<br>1)搜索目前可用的版本</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum search --showduplicates krb5-libs</span>Loaded plugins: fastestmirrorLoading mirror speeds from cached hostfile<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> N/S matched: krb5-libs <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>krb5-libs-1.15.1-18.el7.i686 <span class="token keyword">:</span> The non-admin shared libraries used by Kerberos 5krb5-libs-1.15.1-18.el7.x86_64 <span class="token keyword">:</span> The non-admin shared libraries used by Kerberos 5krb5-libs-1.15.1-34.el7.i686 <span class="token keyword">:</span> The non-admin shared libraries used by Kerberos 5krb5-libs-1.15.1-34.el7.x86_64 <span class="token keyword">:</span> The non-admin shared libraries used by Kerberos 5krb5-libs-1.15.1-37.el7_6.x86_64 <span class="token keyword">:</span> The non-admin shared libraries used by Kerberos 5  Name and summary matches only, use <span class="token string">"search all"</span> <span class="token keyword">for</span> everything.</code></pre><p>2)将包降级为34版本</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y downgrade krb5-libs-1.15.1-34.el7.x86_64</span><span class="token punctuation">..</span>.Removed:  krb5-libs.x86_64 0:1.15.1-37.el7_6                  Installed:  krb5-libs.x86_64 0:1.15.1-34.el7                 Complete<span class="token operator">!</span></code></pre><p>注：如果降级还是报冲突错误，则可以将包卸载后重新安装：</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#查看已安装版本</span>rpm -qa <span class="token operator">|</span> <span class="token function">grep</span> bind-libs<span class="token comment" spellcheck="true">#卸载已安装版本</span>rpm -e --nodeps <span class="token punctuation">[</span>完整包名<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#安装需要的版本</span>rpm -ivh <span class="token punctuation">[</span>需要安装的rpm包rpm文件<span class="token punctuation">]</span></code></pre></blockquote><h3 id="初始化Cloudera-Manager数据库"><a href="#初始化Cloudera-Manager数据库" class="headerlink" title="初始化Cloudera Manager数据库"></a>初始化Cloudera Manager数据库</h3><p>参照官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/prepare_cm_database.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/prepare_cm_database.html</a><br>由于我们MySQL是安装在本地，所以直接执行</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm</span>Enter SCM password:  <span class="token comment" spellcheck="true"># 输入创建数据库时的密码</span>JAVA_HOME<span class="token operator">=</span>/usr/java/jdk1.8.0_181-clouderaVerifying that we can <span class="token function">write</span> to /etc/cloudera-scm-serverCreating SCM configuration <span class="token function">file</span> <span class="token keyword">in</span> /etc/cloudera-scm-serverExecuting:  /usr/java/jdk1.8.0_181-cloudera/bin/java -cp /usr/share/java/mysql-connector-java.jar:/usr/share/java/oracle-connector-java.jar:/usr/share/java/postgresql-connector-java.jar:/opt/cloudera/cm/schema/<span class="token punctuation">..</span>/lib/* com.cloudera.enterprise.dbutil.DbCommandExecutor /etc/cloudera-scm-server/db.properties com.cloudera.cmf.db.Tue Aug 20 02:09:39 EDT 2019 WARN: Establishing SSL connection without server<span class="token string">'s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn'</span>t set. For compliance with existing applications not using SSL the verifyServerCertificate property is <span class="token keyword">set</span> to <span class="token string">'false'</span><span class="token keyword">.</span> You need either to explicitly disable SSL by setting useSSL<span class="token operator">=</span>false, or <span class="token keyword">set</span> useSSL<span class="token operator">=</span>true and provide truststore <span class="token keyword">for</span> server certificate verification.<span class="token punctuation">[</span>                          main<span class="token punctuation">]</span> DbCommandExecutor              INFO  Successfully connected to database.All done, your SCM database is configured correctly<span class="token operator">!</span><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><blockquote><p>如果mysql是安装在其他节点（例如：db01.example.com节点），则运行：<br><code>/opt/cloudera/cm/schema/scm_prepare_database.sh mysql -h db01.example.com --scm-host cm01.example.com scm scm</code></p></blockquote><h3 id="启动Cloudera-Manager-Server"><a href="#启动Cloudera-Manager-Server" class="headerlink" title="启动Cloudera Manager Server"></a>启动Cloudera Manager Server</h3><p>输入以下命令启动Server</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start cloudera-scm-server</span></code></pre><p>使用<code>tail</code>命令查看运行日志，当出现<code>Started Jetty server.</code>字眼时表示启动成功</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log</span>2019-08-20 02:13:30,437 INFO main:org.kie.api.internal.utils.ServiceDiscoveryImpl: Loading kie.conf from  jar:file:/opt/cloudera/cm/common_jars/kie-internal-7.13.0.Final.11622bc00754050ffd86f282138da203.jar<span class="token operator">!</span>/META-INF/kie.conf <span class="token keyword">in</span> classloader sun.misc.Launcher<span class="token variable">$AppClassLoader@67f89fa3</span>2019-08-20 02:13:30,438 INFO main:org.kie.api.internal.utils.ServiceDiscoveryImpl: Adding Service org.kie.internal.services.KieAssemblersImpl<span class="token punctuation">..</span>.2019-08-20 02:15:58,334 INFO WebServerImpl:org.eclipse.jetty.server.AbstractConnector: Started ServerConnector@179933a5<span class="token punctuation">{</span>HTTP/1.1,<span class="token punctuation">[</span>http/1.1<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span>0.0.0.0:7180<span class="token punctuation">}</span>2019-08-20 02:15:58,350 INFO WebServerImpl:org.eclipse.jetty.server.Server: Started @193290ms2019-08-20 02:15:58,350 INFO WebServerImpl:com.cloudera.server.cmf.WebServerImpl: Started Jetty server.</code></pre><h3 id="浏览器访问7180端口，进行CDH安装"><a href="#浏览器访问7180端口，进行CDH安装" class="headerlink" title="浏览器访问7180端口，进行CDH安装"></a>浏览器访问7180端口，进行CDH安装</h3><p>Cloudera Manager会根据浏览器的语言进行语言的切换，本文为中文<br>初始用户名和密码均为：<code>admin</code><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/cm%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2.png" alt=""><br>登录后看到第一个欢迎页面，点击继续<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E6%AC%A2%E8%BF%8E%E9%A1%B5%E9%9D%A21.png" alt=""><br>接受许可条款<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E6%8E%A5%E5%8F%97%E8%AE%B8%E5%8F%AF%E6%9D%A1%E6%AC%BE.png" alt=""><br>选择安装版本，这里选择免费版（之前免费版会有100个节点限制，现在已经没有了）<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E9%80%89%E6%8B%A9%E5%AE%89%E8%A3%85%E5%85%8D%E8%B4%B9%E7%89%88.png" alt=""></p><p>进入第二个欢迎页面，左边列出了安装的步骤<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E6%AC%A2%E8%BF%8E%E9%A1%B5%E9%9D%A22.png" alt=""><br>输入集群名称，本文默认<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E8%BE%93%E5%85%A5%E9%9B%86%E7%BE%A4%E5%90%8D%E7%A7%B0.png" alt=""><br>输入主机名后进行搜索<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E8%BE%93%E5%85%A5%E4%B8%BB%E6%9C%BA%E5%90%8D.png" alt=""><br>配置cloudera manager yum离线库地址，点击更多选项<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E9%85%8D%E7%BD%AEcm%E5%BA%93%E5%9C%B0%E5%9D%80.png" alt=""><br>配置parcel库地址，前两个选项默认就行，远程Parcel库删除默认的地址，输入httpd服务的Parcel库地址，点击保存更改<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E9%85%8D%E7%BD%AEparcel%E5%BA%93%E5%9C%B0%E5%9D%80.png" alt=""><br>保存后会自动搜索Parcel包，如图，已经搜索到了之前下载的CDH6.3.0包，点击继续<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E8%87%AA%E5%8A%A8%E6%90%9C%E7%B4%A2%E6%9C%AC%E5%9C%B0parcel%E5%8C%85.png" alt=""><br>如果之前只安装了cm server节点的jdk，则需要勾选上，如果每个节点都安装了jdk就不需要勾选<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85jdk.png" alt=""><br>配置ssh，如果主机的密码不相同，则需要选择使用秘钥的形式，如果密码相同，直接输入密码即可<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/ssh%E9%85%8D%E7%BD%AE.png" alt=""><br>安装cloudera agent（安装过程中遇到问题可以根据提示进行解决），点击继续<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85agent1.png" alt=""><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85agent2.png" alt=""><br>开始自动安装Parcel包，由于需要拷贝到相应节点然后解压，所以时间消耗比较久，耐心等待完成<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85parcel.png" alt=""><br>进行集群检测，包括网络检测和节点其他检测，如果检测有问题可以按照提示进行修复<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E9%9B%86%E7%BE%A4%E6%A3%80%E6%B5%8B1.png" alt=""><br>建议完全通过检测后再点击继续<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E9%9B%86%E7%BE%A4%E6%A3%80%E6%B5%8B2.png" alt=""></p><blockquote><p>如果只有一个节点，网络检测不会通过<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%8D%95%E8%8A%82%E7%82%B9%E4%B8%8D%E6%94%AF%E6%8C%81%E7%BD%91%E7%BB%9C%E6%A3%80%E6%B5%8B.png" alt=""></p></blockquote><p>开始安装组件服务，可以选择官方的配置方案，也可以选择自定义<br>本文选择自定义服务，先安装HDFS和Zookeeper<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B61.png" alt=""><br>按照之前的<strong>组件角色分配规划</strong>，选择组件相应服务安装的节点<br>官网组件服务分配参考：<a href="https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_host_allocations.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/6.3/topics/cm_ig_host_allocations.html</a><br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B62.png" alt=""><br>选择组件初始化配置，比如选择HDFS DataNode储存目录等<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B63.png" alt=""><br>点击继续后就会开始安装组件，等待安装完成<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B64.png" alt=""><br>最后一步，没有问题直接点完成即可<br><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B65.png" alt=""></p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><h4 id="无法复制安装文件allkeys-asc"><a href="#无法复制安装文件allkeys-asc" class="headerlink" title="无法复制安装文件allkeys.asc"></a>无法复制安装文件allkeys.asc</h4><p><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%EF%BC%9A%E6%97%A0%E6%B3%95%E5%A4%8D%E5%88%B6%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6allkeys.png" alt=""><br>因为在配置Cloudera Manager yum库时没有下载<code>allkeys.asc</code>文件<br>解决方法：<br>到官网：<a href="https://archive.cloudera.com/cm6/6.3.0/" target="_blank" rel="noopener">https://archive.cloudera.com/cm6/6.3.0/</a>下载<code>allkeys.asc</code>文件到yum离线库</p><h4 id="安装Parcel提示主机运行状况不良"><a href="#安装Parcel提示主机运行状况不良" class="headerlink" title="安装Parcel提示主机运行状况不良"></a>安装Parcel提示主机运行状况不良</h4><p>解决方法：<br>删除agent目录下面的cm_guid文件，并重启失败节点的agent服务恢复</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cdh ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /var/lib/cloudera-scm-agent/</span><span class="token punctuation">[</span>root@cdh cloudera-scm-agent<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>active_parcels.json  cm_guid  response.avro  uuid<span class="token punctuation">[</span>root@cdh cloudera-scm-agent<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rm -rf cm_guid</span><span class="token punctuation">[</span>root@cdh cloudera-scm-agent<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service cloudera-scm-agent restart</span>Stopping cloudera-scm-agent: <span class="token punctuation">[</span> OK <span class="token punctuation">]</span>Starting cloudera-scm-agent:</code></pre><h4 id="entropy-was-available（系统熵值过低）"><a href="#entropy-was-available（系统熵值过低）" class="headerlink" title="entropy was available（系统熵值过低）"></a>entropy was available（系统熵值过低）</h4><p><img src="http://47.106.179.244/CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85CDH/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%EF%BC%9Aentropy%EF%BC%88%E7%B3%BB%E7%BB%9F%E7%86%B5%E5%80%BC%EF%BC%89%E8%BF%87%E4%BD%8E.png" alt=""><br>解决方法：提高系统熵值</p><ol><li><p>查看目前熵值</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/sys/kernel/random/entropy_avail</span>34</code></pre></li><li><p>安装<code>rng-tools</code>工具</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node3 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install -y rng-tools</span>Loaded plugins: fastestmirrorRepository base is listed <span class="token function">more</span> than once <span class="token keyword">in</span> the configurationRepository updates is listed <span class="token function">more</span> than once <span class="token keyword">in</span> the configuration<span class="token punctuation">..</span>.Installed:rng-tools.x86_64 0:6.3.1-3.el7                                                                                                                                                                                  Complete<span class="token operator">!</span></code></pre></li><li><p>修改/新建<code>/etc/sysconfig/rngd</code>文件，增加以下内容</p><pre class=" language-conf"><code class="language-conf">OPTIONS="-r /dev/urandom"</code></pre></li><li><p>启动<code>rngd</code>服务</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service rngd start</span>Redirecting to /bin/systemctl start rngd.service</code></pre></li><li><p>再次查看熵值</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@node2 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/sys/kernel/random/entropy_avail</span>3081</code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;环境准备部分参考文章：&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI4OTY3MTUyNg==&amp;mid=2247485512&amp;idx=1&amp;sn=9e953a7eb8b3b2a64a011550ab7da184&amp;chksm=ec2a
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="CDH" scheme="http://blog.hming.org/tags/CDH/"/>
    
      <category term="离线安装" scheme="http://blog.hming.org/tags/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Centos7安装VNC服务</title>
    <link href="http://blog.hming.org/2019/08/06/Centos7%E5%AE%89%E8%A3%85VNC%E6%9C%8D%E5%8A%A1/"/>
    <id>http://blog.hming.org/2019/08/06/Centos7%E5%AE%89%E8%A3%85VNC%E6%9C%8D%E5%8A%A1/</id>
    <published>2019-08-06T08:00:24.000Z</published>
    <updated>2019-08-06T08:00:24.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装gnome桌面"><a href="#安装gnome桌面" class="headerlink" title="安装gnome桌面"></a>安装gnome桌面</h3><p>如果Centos7为最小化安装，则需要单独安装gnome图形化桌面</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum groupinstall -y "GNOME Desktop"</span></code></pre><h3 id="安装vnc-server"><a href="#安装vnc-server" class="headerlink" title="安装vnc server"></a>安装vnc server</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install -y tigervnc-server</span></code></pre><h3 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h3><ol><li><p>复制一个服务设置模板，命名为<code>vncserver@:1.service</code></p><pre class=" language-bash"><code class="language-bash"> <span class="token function">cp</span> /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service</code></pre></li><li><p>修改服务配置，</p><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/systemd/system/vncserver\@\:1.service</span></code></pre><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>Unit<span class="token punctuation">]</span> Description<span class="token operator">=</span>Remote desktop <span class="token function">service</span> <span class="token punctuation">(</span>VNC<span class="token punctuation">)</span> After<span class="token operator">=</span>syslog.target network.target <span class="token punctuation">[</span>Service<span class="token punctuation">]</span> Type<span class="token operator">=</span>forking User<span class="token operator">=</span>root   <span class="token comment" spellcheck="true">#设置登录用户为root</span> <span class="token comment" spellcheck="true"># Clean any existing files in /tmp/.X11-unix environment</span> ExecStartPre<span class="token operator">=</span>/bin/sh -c <span class="token string">'/usr/bin/vncserver -kill %i > /dev/null 2>&amp;1 || :'</span> <span class="token comment" spellcheck="true">#将这里的User改为root，-geometry 1920x1080选项指定连接分辨率，也可以不指定</span> ExecStart<span class="token operator">=</span>/usr/sbin/runuser -l root -c <span class="token string">"/usr/bin/vncserver -geometry 1920x1080 %i"</span> PIDFile<span class="token operator">=</span>/root/.vnc/%H%i.pid         <span class="token comment" spellcheck="true">#这里指向root根目录地址</span> ExecStop<span class="token operator">=</span>/bin/sh -c <span class="token string">'/usr/bin/vncserver -kill %i > /dev/null 2>&amp;1 || :'</span> <span class="token punctuation">[</span>Install<span class="token punctuation">]</span> WantedBy<span class="token operator">=</span>multi-user.target</code></pre></li><li><p>如果需要配置其他用户登录，则重复1,2步骤，再复制一个配置文件，修改相应用户</p></li><li><p>更新systemctl</p><pre class=" language-bash"><code class="language-bash"> <span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl daemon-reload</span></code></pre></li></ol><h3 id="设置VNC密码"><a href="#设置VNC密码" class="headerlink" title="设置VNC密码"></a>设置VNC密码</h3><p>VNC的密码跟系统的用户密码不一样，是使用VNC Viewer登陆时需要使用的密码</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vncpasswd</span>Password:Verify:Would you like to enter a view-only password <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>? nA view-only password is not used<span class="token comment" spellcheck="true"># 这里不添加只读账号密码</span><span class="token comment" spellcheck="true"># 每个不用的系统用户，设置密码时，需要切换到该用户下，执行此命令</span><span class="token comment" spellcheck="true"># 如：su zhangsan  切换到zhangsan用户再执行上vncpasswd设置密码</span></code></pre><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>启动刚才配置的服务，如果配置了多个，则需要启动相应的服务</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start vncserver@:1.service</span></code></pre><p>设置开机自启动</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable vncserver@:1.service</span></code></pre><p>查看端口信息，VNC默认端口为<code>5901</code>，因为我启动了两个服务，所以还有一个5902端口存在</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># netstat -lnpt|grep Xvnc</span>tcp        0      0 0.0.0.0:5901            0.0.0.0:*               LISTEN      10196/Xvnc          tcp        0      0 0.0.0.0:5902            0.0.0.0:*               LISTEN      11394/Xvnc          tcp        0      0 0.0.0.0:6001            0.0.0.0:*               LISTEN      10196/Xvnc          tcp        0      0 0.0.0.0:6002            0.0.0.0:*               LISTEN      11394/Xvnc          tcp6       0      0 :::5901                 :::*                    LISTEN      10196/Xvnc          tcp6       0      0 :::5902                 :::*                    LISTEN      11394/Xvnc          tcp6       0      0 :::6001                 :::*                    LISTEN      10196/Xvnc          tcp6       0      0 :::6002                 :::*                    LISTEN      11394/Xvnc          </code></pre><h3 id="配置防火墙，开通端口"><a href="#配置防火墙，开通端口" class="headerlink" title="配置防火墙，开通端口"></a>配置防火墙，开通端口</h3><p>如果没有开启防火墙，则这一步可以跳过<br>根据监听的端口，进行端口开放，每个用户会对应一个端口，第一个用户默认为<code>5901</code>端口，如果配置多个，则需要开放相应端口</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --add-port=5901/tcp --permanent</span><span class="token punctuation">[</span>root@AccessGateway ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --reload</span></code></pre><h3 id="Windows安装VNC，连接Centos远程桌面"><a href="#Windows安装VNC，连接Centos远程桌面" class="headerlink" title="Windows安装VNC，连接Centos远程桌面"></a>Windows安装VNC，连接Centos远程桌面</h3><ol><li>到官方下载地址：<a href="https://www.realvnc.com/en/connect/download/viewer/" target="_blank" rel="noopener">https://www.realvnc.com/en/connect/download/viewer/</a>选择对应版本下载客户端</li><li>新建连接中VNC Server输入<code>IP地址:1</code>，输入密码即可连接成功</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装gnome桌面&quot;&gt;&lt;a href=&quot;#安装gnome桌面&quot; class=&quot;headerlink&quot; title=&quot;安装gnome桌面&quot;&gt;&lt;/a&gt;安装gnome桌面&lt;/h3&gt;&lt;p&gt;如果Centos7为最小化安装，则需要单独安装gnome图形化桌面&lt;/p&gt;
&lt;pre
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://blog.hming.org/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://blog.hming.org/tags/Linux/"/>
    
      <category term="VNC Viewer" scheme="http://blog.hming.org/tags/VNC-Viewer/"/>
    
  </entry>
  
  <entry>
    <title>HDP与CDH对比</title>
    <link href="http://blog.hming.org/2019/07/03/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/"/>
    <id>http://blog.hming.org/2019/07/03/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/</id>
    <published>2019-07-03T06:25:43.000Z</published>
    <updated>2019-07-19T03:22:22.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="HDP与CDH的对比"><a href="#HDP与CDH的对比" class="headerlink" title="HDP与CDH的对比"></a>HDP与CDH的对比</h3><h4 id="版本更新对比"><a href="#版本更新对比" class="headerlink" title="版本更新对比"></a>版本更新对比</h4><p>HDP版本更新较快，因为Hortonworks内部大部分员工都是apache代码贡献者，尤其是Hadoop 2.0的贡献者。</p><p>CDH版本更新比Apache版本慢。</p><p>目前Apache社区Hadoop最新版本：3.2.0</p><p>目前CDH最新版支持Hadoop版本：3.0.0</p><p>目前HDP最新版支持Hadoop版本：3.1.1</p><h4 id="架构对比"><a href="#架构对比" class="headerlink" title="架构对比"></a>架构对比</h4><h5 id="CDH"><a href="#CDH" class="headerlink" title="CDH"></a>CDH</h5><p><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E6%9E%B6%E6%9E%84.png" alt=""></p><h5 id="HDP"><a href="#HDP" class="headerlink" title="HDP"></a>HDP</h5><p><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E6%9E%B6%E6%9E%84.png" alt=""></p><h4 id="原装支持组件对比"><a href="#原装支持组件对比" class="headerlink" title="原装支持组件对比"></a>原装支持组件对比</h4><p><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/%E7%BB%84%E4%BB%B6%E5%AF%B9%E6%AF%94.png" alt=""></p><ul><li>CDH支持的存储组件更丰富</li><li>HDP支持的数据分析组件更丰富</li><li>HDP对多维分析及可视化有了支持，引入Druid和Superset</li><li>HDP的HBase数据使用Phoenix的jdbc查询；CDH的HBase数据使用映射Hive到Impala的jdbc查询（CDH6.2支持Phoenix5），但分析数据可以存储Impala内部表，提高查询响应</li><li>多维分析Druid纳入集群，会方便管理；但可视化工具Superset可以单独安装使用</li><li>CDH没有时序数据库，HDP将Druid作为时序数据库使用</li></ul><h4 id="安全权限模块对比"><a href="#安全权限模块对比" class="headerlink" title="安全权限模块对比"></a>安全权限模块对比</h4><ol><li><p>HDP<br>包含Ranger组件，即使在没有Kerberos的情况下，也能作一些简单的权限分配管理。由于100%开源，所以支持Ldap+Kerberos+Ranger的权限配置方式，分配权限简单易用。另外，Kerberos配置具有向导式界面。</p></li><li><p>CDH<br>包含Sentry组件，Sentry与Ranger差别较大，Sentry没有图像化界面，只负责同步组件间的ACL授权。Cloudera express免费版只支持集成Kerberos，需要Ldap支持的需要企业版（<a href="#CDH免费版和企业版区别">CDH免费版和企业版区别对比</a>）。</p></li></ol><h4 id="运维管理对比"><a href="#运维管理对比" class="headerlink" title="运维管理对比"></a>运维管理对比</h4><h5 id="HDP-1"><a href="#HDP-1" class="headerlink" title="HDP"></a>HDP</h5><p>采用Apache Ambari进行统一管理，Ambari2.7之后的版本相对2.6有很大的改动，2.6个人看来也不够人性化，2.7界面布局更加人性化。</p><ol><li>Ambari不支持中文，整个管理页面都是英文呈现。</li><li>组件比较重要的基本配置都以图形化的方式呈现，比直接配文字版体验效果好。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A21.png" alt=""><br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22.png" alt=""><br>鼠标hover到配置项上面会有该项配置的说明。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22-1.png" alt=""></li><li>其他配置都是按照节点（如下图中的NameNode）、配置文件（如下图中的Advanced hdfs-site）来进行组织的，方便运维人员快速定位。另外配置有版本记录，可以回退到任意版本。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A23.png" alt=""></li><li>组件界面可以直接看到该组件的哪些服务以及服务情况，右边就有该服务的快速链接，下图为Yarn的界面。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E7%BB%84%E4%BB%B6%E7%95%8C%E9%9D%A21.png" alt=""></li><li>部分组件可以看到链接地址，比如Hive。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/HDP%E7%BB%84%E4%BB%B6%E7%95%8C%E9%9D%A22.png" alt=""></li><li>Ambari服务本身不支持高可用。</li></ol><h5 id="CDH-1"><a href="#CDH-1" class="headerlink" title="CDH"></a>CDH</h5><p>采用Cloudera Manager（下文统一用cm代替）进行统一管理。</p><ol><li>cm可以根据浏览器配置进行语言选择，支持中文。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A20.png" alt=""></li><li>配置界面左边将所有配置按照范围、类别、状态进行分类，也能很方便的找到配置。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22.png" alt=""><br>右边提供每个配置的说明，点看可以看到各项配置的说明。<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A22-1.png" alt=""></li><li>配置版本控制免费版不支持<br>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/cm_mc_revert_configs.html" target="_blank" rel="noopener">Viewing and Reverting Configuration Changes</a></li><li>组件服务的快速链接在tab页上<br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A23.png" alt=""></li><li>cm服务可以配置高可用<br>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/admin_cm_ha_server.html" target="_blank" rel="noopener">Installing and Configuring Cloudera Manager Server for High Availability</a></li><li>cm支持数据加密，无论是静态加密或保护数据传输，但是可惜的是免费版cm支持很有限。另外加密前官方强烈建议安装Kerberos<br>参考官网：<a href="https://www.cloudera.com/documentation/enterprise/6/6.2/topics/sg_enc_overview.html" target="_blank" rel="noopener">Encryption Overview</a><br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E5%8A%A0%E5%AF%86%E9%85%8D%E7%BD%AE%E9%A1%B5%E9%9D%A2.png" alt=""></li></ol><h3 id="CDH版本说明"><a href="#CDH版本说明" class="headerlink" title="CDH版本说明"></a>CDH版本说明</h3><h4 id="CDH6-X组件版本对应"><a href="#CDH6-X组件版本对应" class="headerlink" title="CDH6.X组件版本对应"></a>CDH6.X组件版本对应</h4><p><a href="https://www.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_cdh_6_packaging.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_cdh_6_packaging.html</a></p><h4 id="CDH5-X组件版本对应"><a href="#CDH5-X组件版本对应" class="headerlink" title="CDH5.X组件版本对应"></a>CDH5.X组件版本对应</h4><p><a href="https://www.cloudera.com/documentation/enterprise/release-notes/topics/cdh_vd_cdh_package_tarball.html" target="_blank" rel="noopener">https://www.cloudera.com/documentation/enterprise/release-notes/topics/cdh_vd_cdh_package_tarball.html</a></p><h4 id="Impala版本说明"><a href="#Impala版本说明" class="headerlink" title="Impala版本说明"></a>Impala版本说明</h4><p>Impala在3.1之后才支持ORC格式HDFS文件，目前最高版本为3.2，CDH6.1对应的Impala版本为3.1，CDH6.2对应的Impala版本为3.2</p><h4 id="Docker-QuickStart版本说明"><a href="#Docker-QuickStart版本说明" class="headerlink" title="Docker QuickStart版本说明"></a>Docker QuickStart版本说明</h4><p>Cloudera <code>Quickstart</code>和HDP的<code>sandbox</code>类似，都是单机版的供学习交流使用的大数据集群。<br>目前Docker版启动的quickstart CDH版本最新为<strong>5.13.0</strong>，对应部分组件版本为：</p><table><thead><tr><th><strong>组件</strong></th><th><strong>组件包版本</strong></th><th><strong>压缩包下载地址</strong></th><th><strong>版本发布说明</strong></th><th align="left"><strong>更改文件</strong></th></tr></thead><tbody><tr><td>Apache Hadoop</td><td>hadoop-2.6.0+cdh5.13.0+2639</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hadoop-2.6.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hadoop-2.6.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hadoop-2.6.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Hadoop Mrv1</td><td>hadoop-0.20-mapreduce-2.6.0+cdh5.13.0+2639</td><td>(none)</td><td>(none)</td><td align="left">(none)</td></tr><tr><td>Hbase</td><td>hbase-1.2.0+cdh5.13.0+411</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hbase-1.2.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hbase-1.2.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hbase-1.2.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Hive</td><td>hive-1.1.0+cdh5.13.0+1269</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hive-1.1.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hive-1.1.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hive-1.1.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Hue</td><td>hue-3.9.0+cdh5.13.0+7079</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hue-3.9.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/hue-3.9.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/hue-3.9.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Impala</td><td>impala-2.10.0+cdh5.13.0+0</td><td>(none)</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/impala-2.10.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/impala-2.10.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Kudu</td><td>kudu-1.5.0+cdh5.13.0+0</td><td>(none)</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/kudu-1.5.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/kudu-1.5.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Oozie</td><td>oozie-4.1.0+cdh5.13.0+458</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/oozie-4.1.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/oozie-4.1.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/oozie-4.1.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Cloudera Search</td><td>search-1.0.0+cdh5.13.0+0</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/search-1.0.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/search-1.0.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/search-1.0.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Solr</td><td>solr-4.10.3+cdh5.13.0+519</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/solr-4.10.3-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/solr-4.10.3-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/solr-4.10.3-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Spark</td><td>spark-1.6.0+cdh5.13.0+530</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/spark-1.6.0-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/spark-1.6.0-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/spark-1.6.0-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Sqoop</td><td>sqoop-1.4.6+cdh5.13.0+116</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop-1.4.6-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop-1.4.6-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop-1.4.6-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Apache Sqoop2</td><td>sqoop2-1.99.5+cdh5.13.0+46</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop2-1.99.5-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop2-1.99.5-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/sqoop2-1.99.5-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr><tr><td>Zookeeper</td><td>zookeeper-3.4.5+cdh5.13.0+118</td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/zookeeper-3.4.5-cdh5.13.0.tar.gz" target="_blank" rel="noopener">Tarball</a></td><td><a href="https://archive.cloudera.com/cdh5/cdh/5/zookeeper-3.4.5-cdh5.13.0.releasenotes.html" target="_blank" rel="noopener">Release notes</a></td><td align="left"><a href="https://archive.cloudera.com/cdh5/cdh/5/zookeeper-3.4.5-cdh5.13.0.CHANGES.txt" target="_blank" rel="noopener">Changes</a></td></tr></tbody></table><h3 id="CDH免费版和企业版区别"><a href="#CDH免费版和企业版区别" class="headerlink" title="CDH免费版和企业版区别"></a>CDH免费版和企业版区别</h3><p><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/CDH%E5%85%8D%E8%B4%B9%E7%89%88%E5%92%8C%E4%BB%98%E8%B4%B9%E7%89%88%E5%8A%9F%E8%83%BD%E5%AF%B9%E6%AF%94%E5%9B%BE.png" alt="免费版和企业版功能对比图"><br>注：<br>1.snmp traps：SNMP是指简单网络管理协议，trap是它规定的一种通信方式，用于被管理的设备主动向充当管理者的设备报告自己的异常信息。</p><p><a href="https://www.cloudera.com/content/dam/www/marketing/resources/datasheets/cloudera-enterprise-datasheet.pdf.landing.html" target="_blank" rel="noopener">官网参考地址</a><br>截图来自<a href="https://blog.csdn.net/levy_cui/article/details/51143092" target="_blank" rel="noopener">CSDN</a><br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/%E5%AE%98%E7%BD%91%E8%A1%A81.jpg" alt=""><br><img src="http://47.106.179.244/HDP%E4%B8%8ECDH%E5%AF%B9%E6%AF%94/%E5%AE%98%E7%BD%91%E8%A1%A82.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;HDP与CDH的对比&quot;&gt;&lt;a href=&quot;#HDP与CDH的对比&quot; class=&quot;headerlink&quot; title=&quot;HDP与CDH的对比&quot;&gt;&lt;/a&gt;HDP与CDH的对比&lt;/h3&gt;&lt;h4 id=&quot;版本更新对比&quot;&gt;&lt;a href=&quot;#版本更新对比&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="CDH" scheme="http://blog.hming.org/tags/CDH/"/>
    
      <category term="HDP" scheme="http://blog.hming.org/tags/HDP/"/>
    
  </entry>
  
  <entry>
    <title>文档网站生成工具选型</title>
    <link href="http://blog.hming.org/2019/05/15/%E6%96%87%E6%A1%A3%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7%E9%80%89%E5%9E%8B/"/>
    <id>http://blog.hming.org/2019/05/15/%E6%96%87%E6%A1%A3%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7%E9%80%89%E5%9E%8B/</id>
    <published>2019-05-15T01:16:04.000Z</published>
    <updated>2019-05-15T01:16:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol><li>要求部署一个静态网站，用于开发者文档的呈现。</li><li>要求所有文档采用markdown格式书写，md文件保存到git仓库（github），并且目录结构必须清晰</li><li>要求md文件解析操作是在前端完成</li></ol><h2 id="方案选择"><a href="#方案选择" class="headerlink" title="方案选择"></a>方案选择</h2><table><thead><tr><th align="center"></th><th align="center">方式一 预先渲染HTML</th><th align="center">方式二 运行时解析md</th></tr></thead><tbody><tr><td align="center">描述</td><td align="center">先将所有md文件解析成HTML文件，<br>然后前端进行HTML文件的展示<br>参考：Hexo</td><td align="center">前端直接读取md文件，<br>在渲染页面时进行md文件的解析<br>参考：docsify</td></tr><tr><td align="center">优点</td><td align="center">由于前端不需要渲染，直接展示，<br>理论上速度没有延迟</td><td align="center">由于每次都是即时渲染，<br>所以在更新md文件时不会有额外工作量</td></tr><tr><td align="center">缺点</td><td align="center">在更新md文件，哪怕只更新一点，<br>也需要所有md文件重新编译解析一次，<br>工作量较大</td><td align="center">需要前端实时解析md文件，<br>在文件较大时可能会有延迟</td></tr><tr><td align="center">选择</td><td align="center">x</td><td align="center"><code>√</code></td></tr></tbody></table><h2 id="网站生成逻辑"><a href="#网站生成逻辑" class="headerlink" title="网站生成逻辑"></a>网站生成逻辑</h2><p><img src="http://47.106.179.244/%E6%96%87%E6%A1%A3%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7%E9%80%89%E5%9E%8B/%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E9%80%BB%E8%BE%91%E5%9B%BE.png" alt=""></p><h2 id="各种开源工具对比"><a href="#各种开源工具对比" class="headerlink" title="各种开源工具对比"></a>各种开源工具对比</h2><table><thead><tr><th align="center">开源工具对比</th><th align="center">Hexo</th><th align="center">VuePress</th><th align="center">Docute</th><th align="center">Docsify</th></tr></thead><tbody><tr><td align="center">文档生成方式</td><td align="center">预先渲染HTML</td><td align="center">预先渲染HTML</td><td align="center">运行时解析</td><td align="center">运行时解析</td></tr><tr><td align="center">对SEO友好程度</td><td align="center">友好</td><td align="center">友好</td><td align="center">不友好</td><td align="center">不友好</td></tr><tr><td align="center">官网地址</td><td align="center"><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo</a></td><td align="center"><a href="https://vuepress.vuejs.org/zh/" target="_blank" rel="noopener">vuepress</a></td><td align="center"><a href="https://docute.org/zh/" target="_blank" rel="noopener">docute</a></td><td align="center"><a href="https://docsify.js.org/#/zh-cn/" target="_blank" rel="noopener">docsify</a></td></tr><tr><td align="center">适用场景</td><td align="center">个人博客</td><td align="center">需要SEO支持<br>的技术文档</td><td align="center">公司或团队内部<br>的文档系统</td><td align="center">公司或团队内部<br>的文档系统</td></tr><tr><td align="center">特点</td><td align="center">与主题解耦，<br>更换主题成本低</td><td align="center">采用vue，<br>对vue开发友好</td><td align="center">Docute（60kB）使用<br>Vue，Vue Router 和 Vuex</td><td align="center">Docsify（20kB）<br>使用的是 vanilla JavaScript</td></tr></tbody></table><h2 id="Docute与Docsify区别"><a href="#Docute与Docsify区别" class="headerlink" title="Docute与Docsify区别"></a>Docute与Docsify区别</h2><ol><li>Docsify官方文档更友好，内容更多，本身占用空间更小</li><li>同样的md文件，Docute解析代码段有问题，Docsify没问题</li><li>Docute提供一些官方组件，Badge、Note等，但是插件较少，而Docsify没有自带组件，但是支持很多有用的插件，如评论插件（Gitalk等）、全文搜索、谷歌统计等。而Docsify也支持Note插件：<a href="https://github.com/zanfab/docsify-plugin-flexible-alerts" target="_blank" rel="noopener">flexible-alerts</a></li><li>Docsify支持封面主页，Docute不支持</li><li>Docsify样式配置可以通过md文件进行配置，而Docute只能在index.html中配置</li><li>Docsify支持热部署，更新配置和文章不需要重启服务，Docute不支持</li></ol><h2 id="最终选型"><a href="#最终选型" class="headerlink" title="最终选型"></a>最终选型</h2><p>最终选型：<a href="https://docsify.js.org/#/zh-cn/" target="_blank" rel="noopener">Docsify</a><br>查看演示：<a href="https://docs.hming.org/#/" target="_blank" rel="noopener">https://docs.hming.org</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;要求部署一个静态网站，用于开发者文档的呈现。&lt;/li&gt;
&lt;li&gt;要求所有文档采用markdown格式书写，md文件保存到git仓
      
    
    </summary>
    
    
      <category term="部署" scheme="http://blog.hming.org/categories/%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="文档" scheme="http://blog.hming.org/tags/%E6%96%87%E6%A1%A3/"/>
    
      <category term="网站生成工具" scheme="http://blog.hming.org/tags/%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>SandBox HDFS上传文件失败问题</title>
    <link href="http://blog.hming.org/2019/04/16/SandBox-HDFS%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.hming.org/2019/04/16/SandBox-HDFS%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/</id>
    <published>2019-04-16T02:02:55.000Z</published>
    <updated>2019-04-16T02:02:55.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>远程（非Docker容器内、非宿主机）上传文件，新建文件成功，写入文件内容失败。查看<code>/var/log/hadoop/hdfs/hadoop-hdfs-namenode-sandbox-hdp.hortonworks.com.log</code>文件，发现如下错误：</p><pre><code>2019-04-15 10:51:33,322 INFO  ipc.Server (Server.java:logException(2726)) - IPC Server handler 74 on 8020, call Call#4 Retry#0 org.apache.hadoop.hdfs.protocol.ClientProtocol.addBlock from 172.18.0.3:48170java.io.IOException: File /tmp/1.csv could only be written to 0 of the 1 minReplication nodes. There are 1 datanode(s) running and 1 node(s) are excluded in this operation.        at org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.chooseTarget4NewBlock(BlockManager.java:2121)        at org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp.chooseTargetForNewBlock(FSDirWriteFileOp.java:286)        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getAdditionalBlock(FSNamesystem.java:2706)        at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.addBlock(NameNodeRpcServer.java:875)        at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.addBlock(ClientNamenodeProtocolServerSideTranslatorPB.java:561)        at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)        at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:524)        at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1025)        at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:876)        at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:822)        at java.security.AccessController.doPrivileged(Native Method)        at javax.security.auth.Subject.doAs(Subject.java:422)        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)        at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2682)</code></pre><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>上传文件过程中，Client先向NameNode发送上传文件请求，NameNode将DataNode的地址返回给Client，Client再通过该地址，写入文件内容。<br>由于SandBox HDP是搭建在Docker容器内部，所以NameNode返回的是Docker容器的ip地址（这和Docker的网络模式有关），因为SandBox默认启动的是自定义网络，所以容器内部ip为<code>172.18.0.3</code>，返回给Client之后，Client通过该IP是无法找到DataNode的，所以导致文件的元数据存到了NameNode上，而文件内容无法写入DataNode。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="方案一（推荐）"><a href="#方案一（推荐）" class="headerlink" title="方案一（推荐）"></a>方案一（推荐）</h4><p>修改代码和增加端口映射<br>因为NameNode返回的是Docker的ip，Client访问不了DataNode，所以可以让NameNode返回主机名，然后Client配置host的方式请求到宿主机的地址</p><ol><li>修改Client host文件配置，增加host映射</li></ol><pre class=" language-bash"><code class="language-bash">10.75.4.32 sandbox-hdp.hortonworks.com</code></pre><ol start="2"><li>java代码修改：</li></ol><pre class=" language-java"><code class="language-java">Configuration conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>conf<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"fs.defaultFS"</span><span class="token punctuation">,</span> <span class="token string">"hdfs://10.75.4.32:8020/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//增加下面一行，设置返回DataNode的主机名而不是ip</span>conf<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"dfs.client.use.datanode.hostname"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>此时还是不能访问到DataNode，因为<code>sandbox-proxy</code>容器并没有映射DataNode的端口（默认为<code>50010</code>）。<br>3. 修改<code>sandbox-proxy</code>端口映射，增加<code>50010</code>端口<br>停止、删除<code>sandbox-proxy</code>容器</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker stop sandbox-proxy</span>sandbox-proxy<span class="token punctuation">[</span>root@sandbox-host ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker rm sandbox-proxy</span>sandbox-proxy</code></pre><p>修改<code>generate-proxy-deploy-script.sh</code>脚本，在<code>tcpPortsHDP=(...)</code>部分新增<code>50010</code>端口映射<br>VMware版本脚本路径：<code>/sandbox/proxy/generate-proxy-deploy-script.sh</code><br>纯Docker版脚本路径：<code>./assets/generate-proxy-deploy-script.sh</code></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">..</span>.tcpPortsHDP<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">..</span>.<span class="token punctuation">[</span>50010<span class="token punctuation">]</span><span class="token operator">=</span>50010<span class="token punctuation">..</span>.<span class="token punctuation">)</span></code></pre><ol start="4"><li>重新执行<code>docker-deploy-hdp30.sh</code>脚本中配置代理容器的脚本</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#Deploy the proxy container.</span><span class="token function">sed</span> <span class="token string">'s/sandbox-hdp-security/sandbox-hdp/g'</span> assets/generate-proxy-deploy-script.sh <span class="token operator">></span> assets/generate-proxy-deploy-script.sh.new<span class="token function">mv</span> -f assets/generate-proxy-deploy-script.sh.new assets/generate-proxy-deploy-script.sh<span class="token function">chmod</span> +x assets/generate-proxy-deploy-script.shassets/generate-proxy-deploy-script.sh 2<span class="token operator">></span>/dev/null</code></pre><h4 id="方案二（不推荐）"><a href="#方案二（不推荐）" class="headerlink" title="方案二（不推荐）"></a>方案二（不推荐）</h4><p>暴力取消Docker网络隔离层，<strong>这样也就失去了Docker容器网络隔离的特性，具体利弊需要斟酌</strong>。<br>因为原因是Client连不上DataNode节点，所以直接将Docker容器的网络模式设置成host模式（详细参照Docker网络模式），将容器的ip和端口直接和宿主机打通，这样就能远程连接DataNode了。</p><h5 id="纯Docker模式"><a href="#纯Docker模式" class="headerlink" title="纯Docker模式"></a>纯Docker模式</h5><ol><li>停止、删除已生成容器（<code>sandbox-proxy</code>和<code>sandbox-hdp</code>）</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker stop $(docker ps -aq)</span>ef35a5989c7125f814082615<span class="token punctuation">[</span>root@sandbox proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker rm $(docker ps -aq)</span>ef35a5989c7125f814082615</code></pre><ol start="2"><li>修改脚本文件<code>docker-deploy-hdp30.sh</code>，将容器启动改为host网络模式，注释代理容器相关代码<blockquote><p>脚本文件为运行sandbox时的启动脚本</p></blockquote></li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#!/usr/bin/env sh</span><span class="token comment" spellcheck="true">#This script downloads HDP sandbox along with their proxy docker container</span><span class="token keyword">set</span> -x<span class="token comment" spellcheck="true"># CAN EDIT THESE VALUES</span>registry<span class="token operator">=</span><span class="token string">"hortonworks"</span>name<span class="token operator">=</span><span class="token string">"sandbox-hdp"</span>version<span class="token operator">=</span><span class="token string">"3.0.1"</span>proxyName<span class="token operator">=</span><span class="token string">"sandbox-proxy"</span>proxyVersion<span class="token operator">=</span><span class="token string">"1.0"</span>flavor<span class="token operator">=</span><span class="token string">"hdp"</span><span class="token comment" spellcheck="true"># NO EDITS BEYOND THIS LINE</span><span class="token comment" spellcheck="true"># housekeeping</span><span class="token comment" spellcheck="true"># 这里已经没用了，注释</span><span class="token comment" spellcheck="true">#echo $flavor > sandbox-flavor</span><span class="token comment" spellcheck="true"># create necessary folders for nginx and copy over our rule generation script there</span><span class="token comment" spellcheck="true">#这里也注释，不需要代理容器了</span><span class="token comment" spellcheck="true">#mkdir -p sandbox/proxy/conf.d</span><span class="token comment" spellcheck="true">#mkdir -p sandbox/proxy/conf.stream.d</span><span class="token comment" spellcheck="true"># pull and tag the sandbox and the proxy container</span><span class="token comment" spellcheck="true"># 本地已经存在镜像文件，这里可以注释减少脚本执行时间</span><span class="token comment" spellcheck="true">#docker pull "$registry/$name:$version"</span><span class="token comment" spellcheck="true">#docker pull "$registry/$proxyName:$proxyVersion"</span><span class="token comment" spellcheck="true"># start the docker container and proxy</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdf"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> hostname<span class="token operator">=</span><span class="token string">"sandbox-hdf.hortonworks.com"</span><span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdp"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> hostname<span class="token operator">=</span><span class="token string">"sandbox-hdp.hortonworks.com"</span><span class="token keyword">fi</span>version<span class="token operator">=</span><span class="token punctuation">$(</span>docker images <span class="token operator">|</span> <span class="token function">grep</span> <span class="token variable">$registry</span>/<span class="token variable">$name</span>  <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># Create cda docker network</span><span class="token comment" spellcheck="true"># 因为采用host网络模式，这里创建网络cda也注释</span><span class="token comment" spellcheck="true">#docker network create cda 2>/dev/null</span><span class="token comment" spellcheck="true"># Deploy the sandbox into the cda docker network</span><span class="token comment" spellcheck="true"># 将原本的run语句注释，修改为以下语句（将网络模式修改为host）</span><span class="token comment" spellcheck="true">#docker run --privileged --name $name -h $hostname --network=cda --network-alias=$hostname -d "$registry/$name:$version"</span>docker run --privileged --name <span class="token variable">$name</span> -h <span class="token variable">$hostname</span> --network<span class="token operator">=</span>host -d <span class="token string">"<span class="token variable">$registry</span>/<span class="token variable">$name</span>:<span class="token variable">$version</span>"</span><span class="token keyword">echo</span> <span class="token string">" Remove existing postgres run files. Please wait"</span><span class="token function">sleep</span> 2docker <span class="token function">exec</span> -t <span class="token string">"<span class="token variable">$name</span>"</span> sh -c <span class="token string">"rm -rf /var/run/postgresql/*; systemctl restart postgresql-9.6.service;"</span><span class="token comment" spellcheck="true">#Deploy the proxy container.</span><span class="token comment" spellcheck="true"># 这里为代理容器配置，因为host模式自动将所有端口映射到宿主机上，所以不再需要sandbox-proxy容器的支持</span><span class="token comment" spellcheck="true">#sed 's/sandbox-hdp-security/sandbox-hdp/g' assets/generate-proxy-deploy-script.sh > assets/generate-proxy-deploy-script.sh.new</span><span class="token comment" spellcheck="true">#mv -f assets/generate-proxy-deploy-script.sh.new assets/generate-proxy-deploy-script.sh</span><span class="token comment" spellcheck="true">#chmod +x assets/generate-proxy-deploy-script.sh</span><span class="token comment" spellcheck="true">#assets/generate-proxy-deploy-script.sh 2>/dev/null</span><span class="token comment" spellcheck="true">#check to see if it's windows</span><span class="token comment" spellcheck="true"># 以下为window环境代码，也注释</span><span class="token comment" spellcheck="true">#if uname | grep MINGW; then</span><span class="token comment" spellcheck="true"># sed -i -e 's/\( \/[a-z]\)/\U\1:/g' sandbox/proxy/proxy-deploy.sh</span><span class="token comment" spellcheck="true">#fi</span><span class="token comment" spellcheck="true">#chmod +x sandbox/proxy/proxy-deploy.sh 2>/dev/null</span><span class="token comment" spellcheck="true">#sandbox/proxy/proxy-deploy.sh</span></code></pre><ol start="3"><li>重新运行<code>docker-deploy-hdp30.sh</code>脚本文件</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># sh docker-deploy-hdp30.sh </span>+ registry<span class="token operator">=</span>hortonworks+ name<span class="token operator">=</span>sandbox-hdp+ version<span class="token operator">=</span>3.0.1+ proxyName<span class="token operator">=</span>sandbox-proxy+ proxyVersion<span class="token operator">=</span>1.0+ flavor<span class="token operator">=</span>hdp+ <span class="token keyword">echo</span> hdp+ <span class="token function">mkdir</span> -p sandbox/proxy/conf.d+ <span class="token function">mkdir</span> -p sandbox/proxy/conf.stream.d+ <span class="token string">'['</span> hdp <span class="token operator">==</span> hdf <span class="token string">']'</span>+ <span class="token string">'['</span> hdp <span class="token operator">==</span> hdp <span class="token string">']'</span>+ hostname<span class="token operator">=</span>sandbox-hdp.hortonworks.com++ docker images++ <span class="token function">grep</span> hortonworks/sandbox-hdp++ <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span>+ version<span class="token operator">=</span>3.0.1+ docker run --privileged --name sandbox-hdp -h sandbox-hdp.hortonworks.com --network<span class="token operator">=</span>host -d hortonworks/sandbox-hdp:3.0.1b91b70d7792a806310c067e7792f4c3930a5329261128d5a4c211b804a923342+ <span class="token keyword">echo</span> <span class="token string">' Remove existing postgres run files. Please wait'</span> Remove existing postgres run files. Please <span class="token function">wait</span>+ <span class="token function">sleep</span> 2+ docker <span class="token function">exec</span> -t sandbox-hdp sh -c <span class="token string">'rm -rf /var/run/postgresql/*; systemctl restart postgresql-9.6.service;'</span><span class="token comment" spellcheck="true"># 可以看到此时只剩下sandbox-hdp一个容器在运行</span><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker ps</span>CONTAINER ID        IMAGE                           COMMAND             CREATED             STATUS              PORTS               NAMESb91b70d7792a        hortonworks/sandbox-hdp:3.0.1   <span class="token string">"/usr/sbin/init"</span>    8 minutes ago       Up 8 minutes                            sandbox-hdp</code></pre><ol start="4"><li>最后进行各种初始化配置即可<br>进入sandbox容器，重置Ambari admin密码</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker exec -it sandbox-hdp /bin/bash</span><span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-admin-password-reset </span>Please <span class="token keyword">set</span> the password <span class="token keyword">for</span> admin: Please retype the password <span class="token keyword">for</span> admin: The admin password has been set.Restarting ambari-server to <span class="token function">make</span> the password change effective<span class="token punctuation">..</span>.Using python  /usr/bin/pythonRestarting ambari-serverAmbari Server is not runningAmbari Server running with administrator privileges.Organizing resource files at /var/lib/ambari-server/resources<span class="token punctuation">..</span>.Ambari database consistency check started<span class="token punctuation">..</span>.Server PID at: /var/run/ambari-server/ambari-server.pidServer out at: /var/log/ambari-server/ambari-server.outServer log at: /var/log/ambari-server/ambari-server.logWaiting <span class="token keyword">for</span> server start<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Server started listening on 8080DB configs consistency check: no errors and warnings were found.</code></pre><p>访问8080端口，到Ambari界面，登录后重启服务即可。</p><p>SandBox使用参照：<br><a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/">SandBox-HDP使用详解</a><br><strong>注意：由于没有运行sandbox-proxy容器，1080端口已经无法访问</strong></p><h5 id="VMware模式"><a href="#VMware模式" class="headerlink" title="VMware模式"></a>VMware模式</h5><ol><li>通过ssh连接22端口登录到VMware虚拟机（sandbox的宿主机）里面<br>也可以通过XShell等工具进入<br>默认<code>root</code>初始密码为<code>hadoop</code></li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh 10.75.4.6 -p 22</span>root@10.75.4.6's password: Last failed login: Tue Apr 16 15:38:03 UTC 2019 from 10.75.4.32 on ssh:nottyThere was 1 failed login attempt since the last successful login.Last login: Mon Apr 15 16:34:49 2019 from 10.75.4.11<span class="token punctuation">[</span>root@sandbox-host ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker images</span>REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZEhortonworks/sandbox-proxy          1.0                 ca272ae0e63a        4 months ago        109MBhortonworks/sandbox-hdp-security   3.0                 ae1d1779b081        4 months ago        27.5GB</code></pre><ol start="2"><li>停止、删除已生成容器（<code>sandbox-proxy</code>和<code>sandbox-hdp-security</code>）</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker stop $(docker ps -aq)</span>ef35a5989c7125f814082615<span class="token punctuation">[</span>root@sandbox-host proxy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker rm $(docker ps -aq)</span>ef35a5989c7125f814082615</code></pre><ol start="3"><li>修改脚本文件<code>/sandbox/sandbox-deploy.sh</code>，将容器启动改为host网络模式，注释代理容器相关代码</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#!/usr/bin/env bash</span>flavor<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /sandbox-flavor<span class="token variable">)</span></span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdf"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> name<span class="token operator">=</span><span class="token string">"sandbox-hdf-standalone-cda-ready"</span> hostname<span class="token operator">=</span><span class="token string">"sandbox-hdf.hortonworks.com"</span><span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$flavor</span>"</span> <span class="token operator">==</span> <span class="token string">"hdp"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> name<span class="token operator">=</span><span class="token string">"sandbox-hdp-security"</span> hostname<span class="token operator">=</span><span class="token string">"sandbox-hdp.hortonworks.com"</span><span class="token keyword">fi</span>version<span class="token operator">=</span><span class="token punctuation">$(</span>docker images <span class="token operator">|</span> <span class="token function">grep</span> <span class="token variable">$name</span>  <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>image<span class="token operator">=</span><span class="token string">"hortonworks/<span class="token variable">$name</span>:<span class="token variable">$version</span>"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># Create cda docker network</span><span class="token comment" spellcheck="true"># 因为采用host网络模式，这里注释创建网络cda</span><span class="token comment" spellcheck="true">#docker network create cda</span><span class="token comment" spellcheck="true"># Deploy the sandbox into the cda docker network</span><span class="token comment" spellcheck="true"># 将原本的run语句注释，修改为以下语句（将网络模式修改为host）</span><span class="token comment" spellcheck="true">#docker run --privileged --name $name -h $hostname --network=cda --network-alias=$hostname -d $image</span>docker run --privileged --name <span class="token variable">$name</span> -h <span class="token variable">$hostname</span> --network<span class="token operator">=</span>host -d <span class="token variable">$image</span><span class="token comment" spellcheck="true"># Deploy the proxy container.  This script was generated by running</span><span class="token comment" spellcheck="true"># 这里为代理容器配置，因为host模式自动将所有端口映射到宿主机上，所以不再需要sandbox-proxy容器的支持</span><span class="token comment" spellcheck="true">#/sandbox/proxy/generate-proxy-deploy-script.sh</span><span class="token comment" spellcheck="true">#/sandbox/proxy/proxy-deploy.sh</span></code></pre><ol start="4"><li>运行脚本文件<code>/sandbox/sandbox-deploy.sh</code>，重新生成容器</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># sh sandbox-deploy.sh </span>12e3df82d057057c6af78eea1c8bd9eb9156ebe0bac3dc90d2fec8377f48aa6f<span class="token comment" spellcheck="true"># 可以看到此时只剩下sandbox-hdp-security一个容器在运行</span><span class="token punctuation">[</span>root@sandbox-host sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker ps</span>CONTAINER ID  IMAGE                                  COMMAND           CREATED        STATUS       PORTS  NAMES12e3df82d057  hortonworks/sandbox-hdp-security:3.0   <span class="token string">"/usr/sbin/init"</span>  6 seconds ago  Up 3 seconds        sandbox-hdp-security</code></pre><ol start="5"><li>最后进行各种初始化配置即可<br>进入sandbox容器，重置Ambari admin密码</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host sandbox<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker exec -it sandbox-hdp-security /bin/bash</span><span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-admin-password-reset </span>Please <span class="token keyword">set</span> the password <span class="token keyword">for</span> admin: Please retype the password <span class="token keyword">for</span> admin: The admin password has been set.Restarting ambari-server to <span class="token function">make</span> the password change effective<span class="token punctuation">..</span>.Using python  /usr/bin/pythonRestarting ambari-serverAmbari Server is not runningAmbari Server running with administrator privileges.Organizing resource files at /var/lib/ambari-server/resources<span class="token punctuation">..</span>.Ambari database consistency check started<span class="token punctuation">..</span>.Server PID at: /var/run/ambari-server/ambari-server.pidServer out at: /var/log/ambari-server/ambari-server.outServer log at: /var/log/ambari-server/ambari-server.logWaiting <span class="token keyword">for</span> server start<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Server started listening on 8080DB configs consistency check: no errors and warnings were found.</code></pre><p>访问8080端口，到Ambari界面，登录后重启服务即可。</p><p>SandBox使用参照：<br><a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/">SandBox-HDP使用详解</a><br><strong>注意：由于没有运行sandbox-proxy容器，1080端口已经无法访问</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;远程（非Docker容器内、非宿主机）上传文件，新建文件成功，写入文件内容失败。查看&lt;code&gt;/var/log/hadoo
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="HDP" scheme="http://blog.hming.org/tags/HDP/"/>
    
      <category term="SandBox" scheme="http://blog.hming.org/tags/SandBox/"/>
    
      <category term="HDFS" scheme="http://blog.hming.org/tags/HDFS/"/>
    
  </entry>
  
  <entry>
    <title>SandBox-HDP使用详解</title>
    <link href="http://blog.hming.org/2019/04/04/SandBox-HDP%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/"/>
    <id>http://blog.hming.org/2019/04/04/SandBox-HDP%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</id>
    <published>2019-04-04T01:36:23.000Z</published>
    <updated>2019-04-04T01:36:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>官方文档介绍得非常详细，本文提取一些关键点作介绍，参考官网教程：<br><a href="https://hortonworks.com/tutorial/hortonworks-sandbox-guide/section/1/" target="_blank" rel="noopener">Sandbox Docs</a><br><a href="https://hortonworks.com/tutorial/hortonworks-sandbox-guide/section/3/" target="_blank" rel="noopener">Sandbox Port Forwards</a><br><a href="https://hortonworks.com/tutorial/sandbox-architecture/" target="_blank" rel="noopener">Sandbox Architecture</a><br><a href="https://hortonworks.com/tutorial/learning-the-ropes-of-the-hortonworks-sandbox/" target="_blank" rel="noopener">Learning the Ropes of the HDP Sandbox</a></p><h3 id="SandBox是什么"><a href="#SandBox是什么" class="headerlink" title="SandBox是什么"></a>SandBox是什么</h3><blockquote><p>The Sandbox is a straightforward, pre-configured, learning environment that contains the latest developments from Apache Hadoop, specifically the Hortonworks Data Platform (HDP). The Sandbox comes packaged in a virtual environment that can run in the cloud or on your personal machine. The Sandbox allows you to learn and explore HDP on your own.</p></blockquote><p>SandBox是Hortonworks提供的单机版HDP或HDF环境，主要用于测试和学习使用，对于没有服务器集群又想使用HDP/HDF的情况，SandBox是不二之选。<br>另外，SandBox里面内置了<code>DAS（Data Analytics Studio）</code>，非SandBox版本是没有这个的，需要购买Hortonworks服务才的获取到安装包。<br>SandBox提供三种安装方式：<code>VirtualBox虚拟机</code>、<code>VMware虚拟机</code>、<code>Docker容器</code>。<br>本文主要针对讲SandBox-HDP，HDF安装使用和HDP大致相同。<br>安装教程参考：<br><a href="http://blog.hming.org/2019/04/02/安装SandBox-HDP（Docker版）">安装SandBox HDP（Docker版）</a><br><a href="http://blog.hming.org/2019/04/02/安装SandBox-HDP（VMware版）">安装SandBox HDP（VMware版）</a></p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>一个运行中的SandBox-HDP 3.0.1</p><h3 id="web访问"><a href="#web访问" class="headerlink" title="web访问"></a>web访问</h3><p>1080端口为sandbox容器web服务端口，可以通过浏览器访问该端口，得到以下界面：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/sandbox%E9%A1%B5%E9%9D%A2.png" alt="sandbox页面"><br>左侧launch dashboard直接进入ambari管理界面，登录admin账号需要进入容器修改ambari管理员密码<br>右侧则是一些链接，包括ambari管理地址、Ranger地址、DAS地址等</p><p>4200端口则提供了一个浏览器访问命令行的接口：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AEhdp%E5%AE%B9%E5%99%A8.png" alt="浏览器访问hdp容器"><br>使用<code>root</code>登录，默认密码为<code>hadoop</code>，第一次登录会提示修改root密码，对密码强度会有要求</p><h3 id="登录到HDP环境主机"><a href="#登录到HDP环境主机" class="headerlink" title="登录到HDP环境主机"></a>登录到HDP环境主机</h3><p>在运行docker的主机上可以通过<code>2222</code>端口登录到HDP docker主机中，也可以通过<code>docker exec</code>命令进入<br>在其他机器上想登录到HDP主机就只能通过SSH了</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># SSH登录需要输入密码，root初始密码为hadoop</span><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh 127.0.0.1 -p 2222</span>root@127.0.0.1`s password: Last login: Thu Apr  4 08:22:27 2019 from 172.18.0.3<span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span class="token comment" spellcheck="true"># docker命令可以直接进入</span><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker exec -it sandbox-hdp /bin/bash</span><span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><h3 id="登录到Ambari界面"><a href="#登录到Ambari界面" class="headerlink" title="登录到Ambari界面"></a>登录到Ambari界面</h3><p>默认提供的账户，更多账号信息参考<a href="https://hortonworks.com/tutorial/learning-the-ropes-of-the-hortonworks-sandbox/#login-credentials" target="_blank" rel="noopener">官网</a></p><table><thead><tr><th align="center">用户</th><th align="center">密码</th></tr></thead><tbody><tr><td align="center">admin</td><td align="center">参考<a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/#重置Ambari管理员密码">重置管理员密码</a></td></tr><tr><td align="center">maria_dev</td><td align="center">maria_dev</td></tr><tr><td align="center">raj_ops</td><td align="center">raj_ops</td></tr><tr><td align="center">holger_gov</td><td align="center">holger_gov</td></tr><tr><td align="center">amy_ds</td><td align="center">amy_ds</td></tr></tbody></table><h3 id="重置Ambari管理员密码"><a href="#重置Ambari管理员密码" class="headerlink" title="重置Ambari管理员密码"></a>重置Ambari管理员密码</h3><ol><li>以root用户登录到HDP主机</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ssh 127.0.0.1 -p 2222</span>root@127.0.0.1`s password: Last login: Thu Apr  4 08:22:27 2019 from 172.18.0.3<span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><ol start="2"><li>运行<code>ambari-admin-password-reset</code>命令，根据提示修改密码</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-hdp /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ambari-admin-password-reset</span>Please <span class="token keyword">set</span> the password <span class="token keyword">for</span> admin: Please retype the password <span class="token keyword">for</span> admin: The admin password has been set.Restarting ambari-server to <span class="token function">make</span> the password change effective<span class="token punctuation">..</span>.Using python  /usr/bin/pythonRestarting ambari-serverWaiting <span class="token keyword">for</span> server stop<span class="token punctuation">..</span>.Ambari Server stoppedAmbari Server running with administrator privileges.Organizing resource files at /var/lib/ambari-server/resources<span class="token punctuation">..</span>.Ambari database consistency check started<span class="token punctuation">..</span>.Server PID at: /var/run/ambari-server/ambari-server.pidServer out at: /var/log/ambari-server/ambari-server.outServer log at: /var/log/ambari-server/ambari-server.logWaiting <span class="token keyword">for</span> server start<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>DB configs consistency check: no errors and warnings were found.ERROR: Exiting with <span class="token keyword">exit</span> code 1. REASON: Server not yet listening on http port 8080 after 90 seconds. Exiting.</code></pre><blockquote><p>可能会遇到报错<br>  <code>ERROR: Exiting with exit code 1.    REASON: Server not yet listening on http port 8080 after 90 seconds. Exiting.</code><br>  这是由于SandBox中所有服务都在一个节点上，启动Ambari比较慢，超过了90秒，实际上这个错不会有任何影响<br>  可以通过编辑<code>/etc/ambari-server/conf/ambari.properties</code>文件，添加一行<code>server.startup.web.timeout = 150</code>来增加超时时间的方法解决</p></blockquote><ol start="3"><li>执行命令后Ambari服务会重启，然后就可以通过新的admin密码登录Ambari</li></ol><h3 id="新增host映射"><a href="#新增host映射" class="headerlink" title="新增host映射"></a>新增host映射</h3><p>Ambari中有些内部链接是通过<code>sandbox-hdp.hortonworks.com</code>域名去访问的，比如<code>HDFS NameNode UI</code><br>可以在需要访问的主机上增加host映射方便访问</p><h3 id="数据库初始密码"><a href="#数据库初始密码" class="headerlink" title="数据库初始密码"></a>数据库初始密码</h3><h4 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h4><p>查看ambari用户的密码，默认为<code>bigdata</code></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># grep "password" /etc/ambari-server/conf/ambari.properties</span>server.jdbc.rca.user.passwd<span class="token operator">=</span>/etc/ambari-server/conf/password.datserver.jdbc.user.passwd<span class="token operator">=</span>/etc/ambari-server/conf/password.dat<span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /etc/ambari-server/conf/password.dat </span>bigdata</code></pre><p>使用ambari用户登录postgreSQL</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># psql -U ambari -W</span>Password <span class="token keyword">for</span> user ambari: psql <span class="token punctuation">(</span>9.6.11<span class="token punctuation">)</span>Type <span class="token string">"help"</span> <span class="token keyword">for</span> help.ambari<span class="token operator">=</span><span class="token operator">></span> </code></pre><h4 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h4><p>内置MySQL使用的是Hive新建的MySQL，初始密码为<code>hortonworks1</code><br>登录ambari postgreSQL查找密码</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-hdp ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># psql -U ambari -W</span>Password <span class="token keyword">for</span> user ambari: psql <span class="token punctuation">(</span>9.6.11<span class="token punctuation">)</span>Type <span class="token string">"help"</span> <span class="token keyword">for</span> help.ambari<span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">select</span> version,config_id,type_name,config_data from clusterconfig where type_name<span class="token operator">=</span><span class="token string">'hive-site'</span><span class="token punctuation">;</span></code></pre><p>在结果里查找内容：javax.jdo.option.ConnectionPassword</p><h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><h4 id="远程向HDFS上传文件失败问题"><a href="#远程向HDFS上传文件失败问题" class="headerlink" title="远程向HDFS上传文件失败问题"></a>远程向HDFS上传文件失败问题</h4><p>参照<a href="http://blog.hming.org/2019/04/16/SandBox-HDFS%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/">SandBox HDFS上传文件失败问题</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;官方文档介绍得非常详细，本文提取一些关键点作介绍，参考官网教程：&lt;br&gt;&lt;a href=&quot;https://hortonworks.com/tutorial/hortonworks-sandbox-guide/section/1/&quot; target=&quot;_blank&quot; rel=&quot;
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="HDP" scheme="http://blog.hming.org/tags/HDP/"/>
    
      <category term="SandBox" scheme="http://blog.hming.org/tags/SandBox/"/>
    
  </entry>
  
  <entry>
    <title>安装SandBox HDP（VMware版）</title>
    <link href="http://blog.hming.org/2019/04/02/%E5%AE%89%E8%A3%85SandBox-HDP%EF%BC%88VMware%E7%89%88%EF%BC%89/"/>
    <id>http://blog.hming.org/2019/04/02/%E5%AE%89%E8%A3%85SandBox-HDP%EF%BC%88VMware%E7%89%88%EF%BC%89/</id>
    <published>2019-04-02T03:28:35.000Z</published>
    <updated>2019-04-02T03:28:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考官网教程：<a href="https://hortonworks.com/tutorial/sandbox-deployment-and-install-guide/section/2/" target="_blank" rel="noopener">Deploying Hortonworks Sandbox on VMWare</a></p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><table><thead><tr><th align="center">方面</th><th align="center">要求</th></tr></thead><tbody><tr><td align="center">软件</td><td align="center"><a href="https://my.vmware.com/cn/web/vmware/downloads" target="_blank" rel="noopener">安装VMware</a></td></tr><tr><td align="center">内存</td><td align="center">推荐16G以上（会开一个内存为10G的虚拟机）</td></tr></tbody></table><h3 id="运行原理"><a href="#运行原理" class="headerlink" title="运行原理"></a>运行原理</h3><p>VMware启动了一个Linux虚拟机，在Linux虚拟机里面会启动两个docker容器</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox-host ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker images</span>REPOSITORY                         TAG     IMAGE ID        CREATED        SIZEhortonworks/sandbox-proxy          1.0     ca272ae0e63a    4 months ago   109MBhortonworks/sandbox-hdp-security   3.0     ae1d1779b081    4 months ago   27.5GB</code></pre><p><code>sandbox-proxy</code>容器负责代理转发一些端口<br><code>sandbox-hdp-security</code>容器则是HDP环境<br>所以，要对HDP环境进行修改，比如修改ambari管理员密码，就需要进入docker容器里面<br>可以通过<code>ssh</code>登录<code>2222</code>端口，也可以通过<code>docker exec</code>命令进入，docker相关命令参考<a href="http://blog.hming.org/2018/09/18/Docker%E6%9B%BF%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/">Docker替换镜像源与常用命令</a></p><h3 id="下载镜像文件"><a href="#下载镜像文件" class="headerlink" title="下载镜像文件"></a>下载镜像文件</h3><p>到<a href="https://hortonworks.com/downloads/#sandbox" target="_blank" rel="noopener">官网</a>下载ova格式的镜像文件（HDP_3.0.1_vmware_181205.ova 20.5G）<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-VMware/VMware%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD.png" alt="镜像文件下载"><br>下载可能需要注册，随便填就行了</p><h3 id="将-ova镜像导入到VMware中"><a href="#将-ova镜像导入到VMware中" class="headerlink" title="将.ova镜像导入到VMware中"></a>将.ova镜像导入到VMware中</h3><ol><li>打开VMware，点击<code>文件</code>-&gt;<code>打开</code>，导入刚才下载的文件：<code>HDP_3.0.1_vmware_181205.ova</code><br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-VMware/VMware%E5%AF%BC%E5%85%A5%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6.png" alt="导入镜像文件"></li><li>开启虚拟机（这里可以看到虚拟机的一些信息，包括内存磁盘等）<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-VMware/VMware%E5%BC%80%E5%90%AF%E8%99%9A%E6%8B%9F%E6%9C%BA.png" alt="开启虚拟机"></li><li>开启后可能会遇到无法连接网络的问题，这时候选择桥接模式，重启一下就行<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-VMware/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F.png" alt="虚拟机网络连接方式"><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3>成功运行后窗口会打印一些信息，可以通过这些信息连接到虚拟机<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-VMware/%E8%BF%90%E8%A1%8C%E6%88%90%E5%8A%9F%E5%90%8E%E6%89%93%E5%8D%B0%E4%BF%A1%E6%81%AF.png" alt="运行成功后打印信息"><br>上图中的1080端口为sandbox端口，可以通过浏览器访问该端口，得到以下界面：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/sandbox%E9%A1%B5%E9%9D%A2.png" alt="sandbox页面"><br>左侧launch dashboard直接进入ambari管理界面，右侧则是一些链接，包括ambari管理地址、Ranger地址、DAS地址等<br>4200端口则提供了一个浏览器访问命令行的接口：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AEhdp%E5%AE%B9%E5%99%A8.png" alt="浏览器访问hdp容器"><br>使用<code>root</code>登录，默认密码为<code>hadoop</code>，第一次登录会提示修改root密码，对密码强度会有要求</li></ol><p>本文到此为止，更详细的使用教程，请参照<a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/">SandBox-HDP使用详解</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考官网教程：&lt;a href=&quot;https://hortonworks.com/tutorial/sandbox-deployment-and-install-guide/section/2/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Deployin
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="HDP" scheme="http://blog.hming.org/tags/HDP/"/>
    
      <category term="SandBox" scheme="http://blog.hming.org/tags/SandBox/"/>
    
      <category term="虚拟机" scheme="http://blog.hming.org/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
      <category term="VMware" scheme="http://blog.hming.org/tags/VMware/"/>
    
  </entry>
  
  <entry>
    <title>安装SandBox HDP（Docker版）</title>
    <link href="http://blog.hming.org/2019/04/02/%E5%AE%89%E8%A3%85SandBox-HDP%EF%BC%88Docker%E7%89%88%EF%BC%89/"/>
    <id>http://blog.hming.org/2019/04/02/%E5%AE%89%E8%A3%85SandBox-HDP%EF%BC%88Docker%E7%89%88%EF%BC%89/</id>
    <published>2019-04-02T03:28:17.000Z</published>
    <updated>2019-06-05T04:00:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考官网教程：<a href="https://hortonworks.com/tutorial/sandbox-deployment-and-install-guide/section/3/" target="_blank" rel="noopener">Deploying Hortonworks Sandbox on Docker</a></p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><table><thead><tr><th align="center">方面</th><th align="center">要求</th></tr></thead><tbody><tr><td align="center">软件</td><td align="center"><a href="http://blog.hming.org/2018/09/18/Docker%E6%9B%BF%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#%E5%AE%89%E8%A3%85">安装docker</a></td></tr><tr><td align="center">内存</td><td align="center">官方推荐docker容器至少10G</td></tr><tr><td align="center">磁盘</td><td align="center">docker镜像目录至少30G（sandbox镜像27.5G）</td></tr></tbody></table><h3 id="下载脚本文件"><a href="#下载脚本文件" class="headerlink" title="下载脚本文件"></a>下载脚本文件</h3><p>到<a href="https://hortonworks.com/downloads/#sandbox" target="_blank" rel="noopener">官网</a>下载zip格式的shell脚本文件<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-docker/docker%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD.png" alt="脚本下载"><br>下载可能需要注册，随便填就行了。压缩包内容如下：<br><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-docker/docker%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E9%A2%84%E8%A7%88.png" alt="">)<img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-docker/docker%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E9%A2%84%E8%A7%882.png" alt=""><br>需要将脚本上传到Linux并解压</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>assets  docker-deploy-hdp30.sh</code></pre><h3 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h3><h4 id="1-在Linux中执行docker-deploy-hdp30-sh脚本，拉取镜像，运行容器"><a href="#1-在Linux中执行docker-deploy-hdp30-sh脚本，拉取镜像，运行容器" class="headerlink" title="1. 在Linux中执行docker-deploy-hdp30.sh脚本，拉取镜像，运行容器"></a>1. 在Linux中执行<code>docker-deploy-hdp30.sh</code>脚本，拉取镜像，运行容器</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># sh docker-deploy-hdp30.sh </span>+ registry<span class="token operator">=</span>hortonworks+ name<span class="token operator">=</span>sandbox-hdp+ version<span class="token operator">=</span>3.0.1+ proxyName<span class="token operator">=</span>sandbox-proxy+ proxyVersion<span class="token operator">=</span>1.0+ flavor<span class="token operator">=</span>hdp+ <span class="token keyword">echo</span> hdp+ <span class="token function">mkdir</span> -p sandbox/proxy/conf.d+ <span class="token function">mkdir</span> -p sandbox/proxy/conf.stream.d+ docker pull hortonworks/sandbox-hdp:3.0.1Trying to pull repository docker.io/hortonworks/sandbox-hdp <span class="token punctuation">..</span>. 3.0.1: Pulling from docker.io/hortonworks/sandbox-hdp70799bbf2226: Pull complete 40963917cdad: Pull complete 3fe9adbb8d7e: Pull complete ee3ec4e8cb3d: Pull complete 7ea5917732c0: Pull complete 2d951411620c: Pull complete f4c5e354e7fd: Pull complete 22ffa6ef360f: Pull complete 2060aa0f3751: Pull complete ca01ba34744d: Pull complete 83326dded077: Pull complete eb3d71b90b73: Pull complete bdd1cab41c81: Pull complete 500cc770c4bd: Pull complete 0cb1decd5474: Pull complete b9591f4b6855: Pull complete f28e56086127: Pull complete e7de4e7d0bca: Pull complete ec77967d2166: Pull complete 4fdcae170114: Pull complete 6347f5df8ffc: Pull complete 6a6ecc232709: Pull complete ea845898ff50: Pull complete 02135573b1bf: Pull complete cb0176867cd8: Pull complete 3c08321268fd: Pull complete 82e82a97c465: Pull complete 8aaaa48ed101: Pull complete 74b321ac2ac5: Pull complete 569da02c0a66: Pull complete af40820407ef: Pull complete Digest: sha256:7b767af7b42030fb1dd0f672b801199241e6bef1258e3ce57361edb779d95921Status: Downloaded newer image <span class="token keyword">for</span> docker.io/hortonworks/sandbox-hdp:3.0.1+ docker pull hortonworks/sandbox-proxy:1.0Trying to pull repository docker.io/hortonworks/sandbox-proxy <span class="token punctuation">..</span>. 1.0: Pulling from docker.io/hortonworks/sandbox-proxy951bdea65c93: Pull complete 4b9047c5fbbb: Pull complete 773156407aae: Pull complete d8524176841d: Pull complete Digest: sha256:42e4cfbcbb76af07e5d8f47a183a0d4105e65a1e7ef39fe37ab746e8b2523e9eStatus: Downloaded newer image <span class="token keyword">for</span> docker.io/hortonworks/sandbox-proxy:1.0+ <span class="token string">'['</span> hdp <span class="token operator">==</span> hdf <span class="token string">']'</span>+ <span class="token string">'['</span> hdp <span class="token operator">==</span> hdp <span class="token string">']'</span>+ hostname<span class="token operator">=</span>sandbox-hdp.hortonworks.com++ docker images++ <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span>++ <span class="token function">grep</span> hortonworks/sandbox-hdp+ version<span class="token operator">=</span>3.0.1+ docker network create cda7f641a6c16cf73df1079f241e76a318f3094f4303feaeae1c0a50c1b58c9d1ee+ docker run --privileged --name sandbox-hdp -h sandbox-hdp.hortonworks.com --network<span class="token operator">=</span>cda --network-alias<span class="token operator">=</span>sandbox-hdp.hortonworks.com -d hortonworks/sandbox-hdp:3.0.159cb51cd71faa11218a12ee3f8c8ea1e58790025428a4573e476c1ddd118c202+ <span class="token keyword">echo</span> <span class="token string">' Remove existing postgres run files. Please wait'</span> Remove existing postgres run files. Please <span class="token function">wait</span>+ <span class="token function">sleep</span> 2+ docker <span class="token function">exec</span> -t sandbox-hdp sh -c <span class="token string">'rm -rf /var/run/postgresql/*; systemctl restart postgresql-9.6.service;'</span>+ <span class="token function">sed</span> s/sandbox-hdp-security/sandbox-hdp/g assets/generate-proxy-deploy-script.sh+ <span class="token function">mv</span> -f assets/generate-proxy-deploy-script.sh.new assets/generate-proxy-deploy-script.sh+ <span class="token function">chmod</span> +x assets/generate-proxy-deploy-script.sh+ assets/generate-proxy-deploy-script.sh+ <span class="token function">grep</span> MINGW+ <span class="token function">uname</span>+ <span class="token function">chmod</span> +x sandbox/proxy/proxy-deploy.sh+ sandbox/proxy/proxy-deploy.shc1f52cfec560982477e4b6c69f4cc95309bd93907196761ed5eff7222744743e</code></pre><blockquote><p>注意：镜像文件特别大，国内拉取非常慢，可通过代理等方式拉取。</p></blockquote><h4 id="2-使用docker-ps查看生成的容器"><a href="#2-使用docker-ps查看生成的容器" class="headerlink" title="2. 使用docker ps查看生成的容器"></a>2. 使用<code>docker ps</code>查看生成的容器</h4><p><img src="http://47.106.179.244/%E5%AE%89%E8%A3%85sandbox-docker/docker-ps-hdp-output.jpg" alt=""><br>可以看到有两个容器生成正在运行<br><code>sandbox-proxy</code>容器负责将HDP中的各个端口映射到主机上<br><code>sandbox-hdp</code>则是HDP主要环境的容器，所有的hdp组件都是在这个容器里面运行</p><h4 id="3-执行完脚本，相应的目录下会生成一个文件sandbox-flavor和一个文件夹sandbox"><a href="#3-执行完脚本，相应的目录下会生成一个文件sandbox-flavor和一个文件夹sandbox" class="headerlink" title="3. 执行完脚本，相应的目录下会生成一个文件sandbox-flavor和一个文件夹sandbox"></a>3. 执行完脚本，相应的目录下会生成一个文件<code>sandbox-flavor</code>和一个文件夹<code>sandbox</code></h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos4 opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>assets  docker-deploy-hdp30.sh  sandbox  sandbox-flavor</code></pre><h4 id="4-脚本文件只需要执行一次，如果需要停止或重启HDP环境，只需要停止-重启相应的docker容器"><a href="#4-脚本文件只需要执行一次，如果需要停止或重启HDP环境，只需要停止-重启相应的docker容器" class="headerlink" title="4. 脚本文件只需要执行一次，如果需要停止或重启HDP环境，只需要停止/重启相应的docker容器"></a>4. 脚本文件只需要执行<code>一次</code>，如果需要停止或重启HDP环境，只需要停止/重启相应的docker容器</h4><p>停止HDP集群</p><pre class=" language-bash"><code class="language-bash">docker stop sandbox-hdpdocker stop sandbox-proxy</code></pre><p>启动HDP集群</p><pre class=" language-bash"><code class="language-bash">docker start sandbox-hdpdocker start sandbox-proxy</code></pre><p>删除HDP容器</p><pre class=" language-bash"><code class="language-bash">docker stop sandbox-hdpdocker stop sandbox-proxydocker <span class="token function">rm</span> sandbox-hdpdocker <span class="token function">rm</span> sandbox-proxy</code></pre><p>移除sandbox镜像</p><pre class=" language-bash"><code class="language-bash">docker rmi hortonworks/sandbox-hdp:<span class="token punctuation">{</span>release<span class="token punctuation">}</span></code></pre><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>上图中的1080端口为sandbox端口，可以通过浏览器访问该端口，得到以下界面：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/sandbox%E9%A1%B5%E9%9D%A2.png" alt="sandbox页面"><br>左侧launch dashboard直接进入ambari管理界面，右侧则是一些链接，包括ambari管理地址、Ranger地址、DAS地址等<br>4200端口则提供了一个浏览器访问命令行的接口：<br><img src="http://47.106.179.244/sandbox-hdp%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AEhdp%E5%AE%B9%E5%99%A8.png" alt="浏览器访问hdp容器"><br>使用<code>root</code>登录，默认密码为<code>hadoop</code>，第一次登录会提示修改root密码，对密码强度会有要求</p><p>本文到此为止，更详细的使用教程，请参照<a href="http://blog.hming.org/2019/04/04/SandBox-HDP使用详解/">SandBox-HDP使用详解</a></p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos4 opt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker logs sandbox-proxy</span>2019/04/04 05:53:28 <span class="token punctuation">[</span>emerg<span class="token punctuation">]</span> 1<span class="token comment" spellcheck="true">#1: host not found in upstream "sandbox-hdp" in /etc/nginx/conf.d/http-hdp.conf:9</span>nginx: <span class="token punctuation">[</span>emerg<span class="token punctuation">]</span> host not found <span class="token keyword">in</span> upstream <span class="token string">"sandbox-hdp"</span> <span class="token keyword">in</span> /etc/nginx/conf.d/http-hdp.conf:9</code></pre><p>这种情况是因为docker网络没有配置好，导致proxy容器无法使用nginx代理hdp容器<br>检查docker网络配置</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考官网教程：&lt;a href=&quot;https://hortonworks.com/tutorial/sandbox-deployment-and-install-guide/section/3/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Deployin
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://blog.hming.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://blog.hming.org/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Docker" scheme="http://blog.hming.org/tags/Docker/"/>
    
      <category term="HDP" scheme="http://blog.hming.org/tags/HDP/"/>
    
      <category term="SandBox" scheme="http://blog.hming.org/tags/SandBox/"/>
    
  </entry>
  
  <entry>
    <title>Linux制作离线yum源</title>
    <link href="http://blog.hming.org/2019/03/29/Linux%E5%88%B6%E4%BD%9C%E7%A6%BB%E7%BA%BFyum%E6%BA%90/"/>
    <id>http://blog.hming.org/2019/03/29/Linux%E5%88%B6%E4%BD%9C%E7%A6%BB%E7%BA%BFyum%E6%BA%90/</id>
    <published>2019-03-29T06:40:35.000Z</published>
    <updated>2019-03-29T06:40:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/huangjin0507/article/details/51351807" target="_blank" rel="noopener">参考</a></p><h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><ol><li>制作或挂载一个本地yum源目录</li><li>修改或增加repo配置文件指向</li></ol><h3 id="离线yum包制作"><a href="#离线yum包制作" class="headerlink" title="离线yum包制作"></a>离线yum包制作</h3><h4 id="利用官方包"><a href="#利用官方包" class="headerlink" title="利用官方包"></a>利用官方包</h4><h5 id="下载ISO文件"><a href="#下载ISO文件" class="headerlink" title="下载ISO文件"></a>下载ISO文件</h5><p>到官网<a href="http://isoredirect.centos.org/" target="_blank" rel="noopener">http://isoredirect.centos.org/</a>下载镜像包，尽量下载<code>Everything ISO</code>版本，这里面的包最全，另外一个“DVD ISO”是通用版，里面的包并不全，还有一个“Minimal ISO”是Centos最小安装版（相当于是windows的纯净系统）。<br>下载文件名如：CentOS-7-x86_64-Everything-1810.iso</p><h5 id="挂载ISO到目录"><a href="#挂载ISO到目录" class="headerlink" title="挂载ISO到目录"></a>挂载ISO到目录</h5><h4 id="自己制作包"><a href="#自己制作包" class="headerlink" title="自己制作包"></a>自己制作包</h4><h5 id="查看rpm包依赖与下载依赖包"><a href="#查看rpm包依赖与下载依赖包" class="headerlink" title="查看rpm包依赖与下载依赖包"></a>查看rpm包依赖与下载依赖包</h5><ol><li><p>查看.rpm 包依赖：<br><code>rpm -qpR [package]</code></p></li><li><p>通过<code>yum install --downloadonly --downloaddir=[download_dir] [package]</code> 来只下载所有依赖包不安装包<strong><code>(前提是当前环境没有安装该包)</code></strong></p><blockquote><p>在CentOS/RHEL 6或更早期的版本中，你需要安装一个单独yum插件(名称为<code>yum-plugin-downloadonly</code>)才能使用<code>--downloadonly</code>命令选项：</p></blockquote><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> -y yum-plugin-downloadonly<span class="token comment" spellcheck="true">#如果没有该插件，你会在使用yum时得到以下错误：</span>Command line error: no such option: --downloadonly<span class="token operator">&lt;</span>/package<span class="token operator">></span></code></pre></li><li><p>运行<code>yum list [package] --showduplicates</code> 来查看包的多个版本</p></li></ol><h5 id="利用rpm包制作yum包"><a href="#利用rpm包制作yum包" class="headerlink" title="利用rpm包制作yum包"></a>利用rpm包制作yum包</h5><ol><li>安装<code>createrepo</code>工具<br><code>createrepo</code>命令用来制作yum包，没有安装该软件可以通过下载<code>createrepo</code>的rpm包，通过rpm命令进行安装。</li><li>将所有的rpm包放到一个目录下</li><li>到rpm包的目录执行<code>createrepo .</code>命令<pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop001 yum-repo<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># createrepo .</span></code></pre></li><li>之后会生成一个<code>repodata</code>的目录,该目录就成了一个yum源</li></ol><h3 id="离线yum源配置"><a href="#离线yum源配置" class="headerlink" title="离线yum源配置"></a>离线yum源配置</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/huangjin0507/article/details/51351807&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;基本步骤&quot;&gt;&lt;a href=&quot;#基
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://blog.hming.org/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://blog.hming.org/tags/Linux/"/>
    
      <category term="yum" scheme="http://blog.hming.org/tags/yum/"/>
    
      <category term="离线" scheme="http://blog.hming.org/tags/%E7%A6%BB%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>Linux修改命令终端提示符</title>
    <link href="http://blog.hming.org/2019/03/29/Linux%E4%BF%AE%E6%94%B9%E5%91%BD%E4%BB%A4%E7%BB%88%E7%AB%AF%E6%8F%90%E7%A4%BA%E7%AC%A6/"/>
    <id>http://blog.hming.org/2019/03/29/Linux%E4%BF%AE%E6%94%B9%E5%91%BD%E4%BB%A4%E7%BB%88%E7%AB%AF%E6%8F%90%E7%A4%BA%E7%AC%A6/</id>
    <published>2019-03-29T03:47:18.000Z</published>
    <updated>2019-03-29T03:47:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="命令行提示符代表含义"><a href="#命令行提示符代表含义" class="headerlink" title="命令行提示符代表含义"></a>命令行提示符代表含义</h3><p>命令行提示符一般格式含义：<br><code>[root@sandbox ~]#</code></p><blockquote><p>其中@前<code>root</code>表示当前用户，@后<code>sandbox</code>表示当前主机名，<code>~</code>表示当前目录为家目录</p></blockquote><p>Linux命令行结尾的提示符有<code>#</code>和<code>$</code>两种不同的符号，如下所示：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#    #&lt;==这是超级管理员root用户对应的命令行。</span><span class="token punctuation">[</span>liming@sandbox ~<span class="token punctuation">]</span>$  <span class="token comment" spellcheck="true">#&lt;==这是普通用户liming对应的命令行。</span></code></pre><h3 id="修改命令行提示符格式"><a href="#修改命令行提示符格式" class="headerlink" title="修改命令行提示符格式"></a>修改命令行提示符格式</h3><p>Linux命令提示符由PS1环境变量控制，可以通过全局配置文件<code>/etc/bashrc</code>或<code>/etc/profile</code>中进行按需配置和调整。<br>查看当前PS1设置：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@sandbox /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># set|grep PS1</span>PS1<span class="token operator">=</span><span class="token string">'[\u@\h \W]\$ '</span></code></pre><h4 id="PS1变量"><a href="#PS1变量" class="headerlink" title="PS1变量"></a>PS1变量</h4><p>最终使用：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">export</span> PS1<span class="token operator">=</span><span class="token string">'[\[\e[32;1m\]\u@\h \W\[\e[0m\]]\$ '</span></code></pre><p>参考：<a href="https://blog.51cto.com/oldboy/1926142" target="_blank" rel="noopener">1</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;命令行提示符代表含义&quot;&gt;&lt;a href=&quot;#命令行提示符代表含义&quot; class=&quot;headerlink&quot; title=&quot;命令行提示符代表含义&quot;&gt;&lt;/a&gt;命令行提示符代表含义&lt;/h3&gt;&lt;p&gt;命令行提示符一般格式含义：&lt;br&gt;&lt;code&gt;[root@sandbox ~
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://blog.hming.org/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://blog.hming.org/tags/Linux/"/>
    
      <category term="命令行提示符" scheme="http://blog.hming.org/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8F%90%E7%A4%BA%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Docker Alpine容器介绍</title>
    <link href="http://blog.hming.org/2019/03/06/Docker-Alpine%E5%AE%B9%E5%99%A8%E4%BB%8B%E7%BB%8D/"/>
    <id>http://blog.hming.org/2019/03/06/Docker-Alpine%E5%AE%B9%E5%99%A8%E4%BB%8B%E7%BB%8D/</id>
    <published>2019-03-06T12:44:02.000Z</published>
    <updated>2019-03-06T12:44:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.voidcn.com/article/p-ulbbnkky-brh.html" target="_blank" rel="noopener">http://www.voidcn.com/article/p-ulbbnkky-brh.html</a><br><a href="https://blog.phpgao.com/docker_alpine.html" target="_blank" rel="noopener">https://blog.phpgao.com/docker_alpine.html</a><br><a href="https://marshal.ohtly.com/2016/12/21/docker-container-and-alpine-bash-not-found/" target="_blank" rel="noopener">https://marshal.ohtly.com/2016/12/21/docker-container-and-alpine-bash-not-found/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.voidcn.com/article/p-ulbbnkky-brh.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.voidcn.com/article/p-ulbbnkky-brh.h
      
    
    </summary>
    
    
      <category term="容器" scheme="http://blog.hming.org/categories/%E5%AE%B9%E5%99%A8/"/>
    
    
      <category term="容器" scheme="http://blog.hming.org/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="Docker" scheme="http://blog.hming.org/tags/Docker/"/>
    
      <category term="Alpine" scheme="http://blog.hming.org/tags/Alpine/"/>
    
  </entry>
  
</feed>
